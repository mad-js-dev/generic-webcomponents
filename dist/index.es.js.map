{"version":3,"file":"index.es.js","sources":["../src/components/molecules/collapsible-list/CollapsibleList.js","../src/components/atoms/icon-label/IconLabel.js","../src/components/molecules/collapsible-item/CollapsibleItem.js","../src/components/organisms/selection-menu/SelectionMenu.js","../src/components/organisms/image-collection/ImageCollection.js","../src/components/templates/product-layout/ProductLayout.js","../src/init.js","../src/wrappers/react/index.jsx","../src/components/index.js","../src/wrappers/vue/index.js","../src/index.js"],"sourcesContent":["/**\r\n * CollapsibleList Component\r\n * A custom element that creates a collapsible list container\r\n */\r\n\r\nexport class CollapsibleList extends HTMLElement {\r\n  static get observedAttributes() {\r\n    return ['reverse-heading', 'single-item', 'accordion'];\r\n  }\r\n  \r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this._isUpdating = false; // Track if we're currently updating to prevent reentrant calls\r\n    this._handleItemToggle = this._handleItemToggle.bind(this);\r\n    \r\n    const container = document.createElement('div');\r\n    const slot = document.createElement('slot');\r\n    \r\n    // Create styles for the component\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n        width: 100%;\r\n        --indent-size: 1.5rem;\r\n      }\r\n      \r\n      ::slotted(collapsible-item) {\r\n        display: block;\r\n        margin: 0.25rem 0;\r\n        padding: 0;\r\n        width: 100%;\r\n      }\r\n      \r\n      /* Nested lists should have a border */\r\n      ::slotted(collapsible-list) {\r\n        border-left: 1px solid #e0e0e0;\r\n        margin-left: 0.5rem;\r\n        padding-left: 0.5rem;\r\n      }\r\n      \r\n      /* Style for the header in collapsible items */\r\n      .collapsible-item__header {\r\n        display: flex;\r\n        align-items: center;\r\n        width: 100%;\r\n        flex-direction: row;\r\n      }\r\n      \r\n      /* Toggle container styles */\r\n      .collapsible-item__toggle-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: var(--toggle-size, 24px);\r\n        height: var(--toggle-size, 24px);\r\n        margin: var(--toggle-margin, 0 8px 0 0);\r\n        flex-shrink: 0;\r\n      }`;\r\n    \r\n    container.appendChild(slot);\r\n    this.shadowRoot.append(style, container);\r\n  }\r\n  \r\n  async connectedCallback() {\r\n    if (!this._initialized) {\r\n      this._initializeComponent();\r\n      this._initialized = true;\r\n      \r\n      // Set initial reverse heading state\r\n      await this._updateReverseHeading();\r\n      \r\n      // Set up event listeners for accordion behavior\r\n      this.addEventListener('toggle', this._handleItemToggle);\r\n      \r\n      // Ensure at least one item is expanded in accordion mode\r\n      if (this.hasAttribute('accordion')) {\r\n        this._ensureOneItemExpanded();\r\n      }\r\n    }\r\n    \r\n    // Set up mutation observer for dynamic content\r\n    this._setupMutationObserver();\r\n  }\r\n  \r\n  _initializeComponent() {\r\n    if (!this.hasAttribute('role')) {\r\n      this.setAttribute('role', 'list');\r\n    }\r\n    \r\n    if (!this.hasAttribute('aria-label') && !this.hasAttribute('aria-labelledby')) {\r\n      console.warn('collapsible-list: Add an aria-label or aria-labelledby attribute for accessibility');\r\n    }\r\n  }\r\n  \r\n  _setupMutationObserver() {\r\n    // Set up a mutation observer to handle dynamically added items and attribute changes\r\n    this._observer = new MutationObserver(async (mutations) => {\r\n      let shouldUpdate = false;\r\n      \r\n      for (const mutation of mutations) {\r\n        if (mutation.type === 'attributes' && mutation.attributeName === 'reverse-heading') {\r\n          shouldUpdate = true;\r\n          break;\r\n        } else if (mutation.type === 'childList') {\r\n          // Check if any added nodes are collapsible items or lists\r\n          for (const node of mutation.addedNodes) {\r\n            if (node.nodeType === Node.ELEMENT_NODE && \r\n                (node.matches('collapsible-item') || node.matches('collapsible-list'))) {\r\n              shouldUpdate = true;\r\n              break;\r\n            }\r\n          }\r\n          if (shouldUpdate) break;\r\n        }\r\n      }\r\n      \r\n      if (shouldUpdate) {\r\n        await this._updateReverseHeading();\r\n      }\r\n    });\r\n    \r\n    // Start observing the component for attribute changes and child list changes\r\n    this._observer.observe(this, {\r\n      attributes: true,\r\n      attributeFilter: ['reverse-heading'],\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Updates the reverse heading state for all child collapsible items\r\n   * @private\r\n   */\r\n  async _updateReverseHeading() {\r\n    // Prevent reentrant calls\r\n    if (this._isUpdating) return;\r\n    this._isUpdating = true;\r\n    \r\n    try {\r\n      const isReversed = this.hasAttribute('reverse-heading') && \r\n                       this.getAttribute('reverse-heading') !== 'false';\r\n      \r\n      // Temporarily disconnect observer to prevent infinite loop\r\n      if (this._observer) {\r\n        this._observer.disconnect();\r\n      }\r\n      \r\n      // Process direct child collapsible-items\r\n      const processItems = async (items) => {\r\n        for (const item of items) {\r\n          // Set the attribute on the item\r\n          if (isReversed) {\r\n            item.setAttribute('reverse-heading', '');\r\n          } else {\r\n            item.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any nested items in this item (only direct children)\r\n          const nestedItems = item.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any nested lists in this item (only direct children)\r\n          const nestedLists = item.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Process nested collapsible-lists\r\n      const processLists = async (lists) => {\r\n        for (const list of lists) {\r\n          // Skip if this is the current list to prevent cycles\r\n          if (list === this) continue;\r\n          \r\n          // Set the attribute on the list\r\n          if (isReversed) {\r\n            list.setAttribute('reverse-heading', '');\r\n          } else {\r\n            list.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any direct child items in this list\r\n          const nestedItems = list.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any direct child lists\r\n          const nestedLists = list.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Start processing from the current element\r\n      const items = this.querySelectorAll(':scope > collapsible-item');\r\n      if (items.length > 0) {\r\n        await processItems(Array.from(items));\r\n      }\r\n      \r\n      const lists = this.querySelectorAll(':scope > collapsible-list');\r\n      if (lists.length > 0) {\r\n        await processLists(Array.from(lists));\r\n      }\r\n      \r\n      // Force a reflow to ensure all attribute changes are applied\r\n      if (this.shadowRoot) {\r\n        this.shadowRoot.offsetHeight; // This forces a reflow\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating reverse heading:', error);\r\n    } finally {\r\n      // Reconnect observer if it exists\r\n      if (this._observer) {\r\n        this._observer.observe(this, {\r\n          attributes: true,\r\n          attributeFilter: ['reverse-heading'],\r\n          childList: true,\r\n          subtree: true\r\n        });\r\n      }\r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n\r\n  _handleItemToggle(e) {\r\n    if (this._isUpdating) return;\r\n    \r\n    const target = e.target;\r\n    \r\n    // Only process if this is a direct child\r\n    if (target.parentElement === this) {\r\n      this._isUpdating = true;\r\n      \r\n      if (this.hasAttribute('accordion')) {\r\n        // In accordion mode, close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      } else if (this.hasAttribute('single-item')) {\r\n        // In single-item mode, just close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      }\r\n      \r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n  \r\n  _closeOtherItems(exceptItem) {\r\n    // Don't close items if inside an image-collection\r\n    if (this.closest('image-collection')) {\r\n      return;\r\n    }\r\n    \r\n    const items = this.querySelectorAll('collapsible-item');\r\n    items.forEach(item => {\r\n      if (item !== exceptItem) {\r\n        item.expanded = false;\r\n      }\r\n    });\r\n  }\r\n  \r\n  _getOpenItems() {\r\n    return Array.from(this.querySelectorAll('collapsible-item[expanded]'));\r\n  }\r\n  \r\n  _ensureOneItemExpanded() {\r\n    if (!this.hasAttribute('accordion')) return;\r\n    \r\n    const openItems = this._getOpenItems();\r\n    if (openItems.length === 0) {\r\n      // If no items are open, open the first one\r\n      const firstItem = this.querySelector('collapsible-item');\r\n      if (firstItem) {\r\n        firstItem.setAttribute('expanded', '');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Define the custom element\r\nif (!customElements.get('collapsible-list')) {\r\n  customElements.define('collapsible-list', CollapsibleList);\r\n}\r\n","/**\n * IconLabel Component\n * A simple component that displays an icon next to a label\n */\n\nexport class IconLabel extends HTMLElement {\n  static get observedAttributes() {\n    return ['icon', 'label', 'reverse'];\n  }\n\n  constructor() {\n    super();\n    this._icon = '';\n    this._label = '';\n    this._reverse = false;\n  }\n\n  connectedCallback() {\n    this._render();\n  }\n\n  get icon() {\n    return this._icon;\n  }\n\n  set icon(value) {\n    this._icon = value || '';\n    this._render();\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  set label(value) {\n    this._label = value || '';\n    this._render();\n  }\n\n  get reverse() {\n    return this._reverse;\n  }\n\n  set reverse(value) {\n    this._reverse = value !== null && value !== 'false';\n    this._render();\n  }\n\n  _render() {\n    // Create container\n    const container = document.createElement('span');\n    container.style.display = 'inline-flex';\n    container.style.alignItems = 'center';\n    container.style.gap = '0.5rem';\n    container.style.fontFamily = 'inherit';\n    container.style.color = 'currentColor';\n    \n    if (this._reverse) {\n      container.style.flexDirection = 'row-reverse';\n    }\n\n    // Create icon element if icon is provided\n    if (this._icon) {\n      const isImage = this._icon.startsWith('data:') || \n                     this._icon.startsWith('http') || \n                     this._icon.startsWith('/') ||\n                     /\\.(png|jpg|jpeg|svg|gif|webp)(\\?.*)?$/i.test(this._icon);\n      \n      const icon = isImage ? document.createElement('img') : document.createElement('span');\n      icon.style.display = 'inline-flex';\n      icon.style.alignItems = 'center';\n      icon.style.justifyContent = 'center';\n      icon.style.width = '1em';\n      icon.style.height = '1em';\n\n      if (isImage) {\n        icon.src = this._icon;\n        icon.alt = '';\n        icon.loading = 'lazy';\n        icon.style.objectFit = 'contain';\n      } else {\n        icon.textContent = this._icon;\n        icon.style.fontSize = '1em';\n        icon.style.lineHeight = '1';\n      }\n      \n      container.appendChild(icon);\n    }\n\n    // Add label if provided\n    if (this._label) {\n      const label = document.createElement('span');\n      label.textContent = this._label;\n      container.appendChild(label);\n    }\n\n    // Update the component\n    this.innerHTML = '';\n    this.appendChild(container);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    \n    if (name === 'icon') {\n      this._icon = newValue || '';\n    } else if (name === 'label') {\n      this._label = newValue || '';\n    } else if (name === 'reverse') {\n      this._reverse = newValue !== null && newValue !== 'false';\n    }\n    \n    this._render();\n  }\n}\n\n// Define the custom element\nif (!customElements.get('icon-label')) {\n  customElements.define('icon-label', IconLabel);\n}\n","/**\n * CollapsibleItem Component\n * A custom element that creates a collapsible list item\n * \n * @attr {boolean} expanded - Whether the item is expanded or collapsed\n * @attr {string} icon - Optional icon to display next to the label\n * @attr {string} label - The text label for the collapsible item\n * @attr {boolean} removeshift - If true, removes the left padding from the content area\n */\n\nimport { IconLabel } from '../../atoms/icon-label/IconLabel.js';\n\n// Import regular CSS\nimport './CollapsibleItem.css';\n\nexport class CollapsibleItem extends HTMLLIElement {\n    static get observedAttributes() {\n        return ['expanded', 'icon', 'label', 'removeshift', 'hide-icon'];\n    }\n    \n    constructor() {\n        super();\n        this._isExpanded = false;\n        this._handleClick = this._handleClick.bind(this);\n        this._header = null;\n        this._content = null;\n        this._initialRender = true;\n        this._removeShift = false;\n        this.rendered = false;\n        \n        // Add base class to the host element\n        this.classList.add('collapsible-item');\n        \n        // Initialize expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        }\n        \n        // Initialize no-padding state\n        if (this.hasAttribute('removeshift')) {\n            this.classList.add('collapsible-item--no-padding');\n        }\n    }\n\n    connectedCallback() {\n        // Ensure the component has the correct role for accessibility\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'listitem');\n        }\n        \n        // Set up the component if not already rendered\n        if (!this.rendered) {\n            this._render();\n            this.rendered = true;\n            this._addEventListeners();\n            \n            // Ensure the content visibility is set correctly based on the expanded state\n            this._updateContentVisibility();\n        }\n        \n        // Ensure the component is properly styled\n        this.classList.add('collapsible-item');\n        \n        // Set initial expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        } else {\n            this._isExpanded = false;\n            this.classList.remove('collapsible-item--expanded');\n        }\n    }\n    \n    disconnectedCallback() {\n        this._removeEventListeners();\n    }\n    \n    _addEventListeners() {\n        // Add click listener to the component itself for event delegation\n        this.addEventListener('click', this._handleClick);\n    }\n    \n    _removeEventListeners() {\n        this.removeEventListener('click', this._handleClick);\n    }\n    \n    _handleClick(event) {\n        // Find the closest header from the click target\n        const header = event.target.closest('.collapsible-item__header');\n        if (!header) return; // Not a header click\n        \n        // Prevent the default action to avoid any native behavior\n        event.preventDefault();\n        event.stopPropagation();\n        \n        // Toggle the expanded state\n        const isExpanding = !this.hasAttribute('expanded');\n        \n        // Update the expanded attribute\n        if (isExpanding) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the internal state and UI\n        this._isExpanded = isExpanding;\n        this._updateContentVisibility();\n        \n        // Dispatch a custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: isExpanding },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _createHeader() {\n        const header = document.createElement('div');\n        header.className = 'collapsible-item__header';\n        \n        // Create a container for the icon and label\n        const contentWrapper = document.createElement('div');\n        contentWrapper.style.display = 'flex';\n        contentWrapper.style.alignItems = 'center';\n        contentWrapper.style.flex = '1';\n        \n        // Add icon if provided and not hidden\n        const hideIcon = this.hasAttribute('hide-icon');\n        const icon = this.getAttribute('icon');\n        if (icon && !hideIcon) {\n            const iconEl = document.createElement('span');\n            iconEl.className = 'collapsible-item__icon';\n            iconEl.textContent = icon;\n            iconEl.style.marginRight = '0.5rem';\n            contentWrapper.appendChild(iconEl);\n        }\n        \n        // Add label\n        const label = this.getAttribute('label') || '';\n        if (label) {\n            const labelEl = document.createElement('span');\n            labelEl.className = 'collapsible-item__label';\n            labelEl.textContent = label;\n            contentWrapper.appendChild(labelEl);\n        }\n        \n        // Add the content wrapper to the header\n        header.appendChild(contentWrapper);\n                \n        return header;\n    }\n    \n    _render() {\n        // Prevent re-entrancy during rendering\n        if (!this._isRendering) {\n            this._isRendering = true;\n            \n            // Store any existing content that should be preserved\n            const existingContent = [];\n            Array.from(this.children).forEach(child => {\n                if (child !== this._header && child !== this._content) {\n                    existingContent.push(child);\n                }\n            });\n            \n            // Clear existing content\n            while (this.firstChild) {\n                this.removeChild(this.firstChild);\n            }\n            \n            // Create and append header\n            this._header = this._createHeader();\n            this.appendChild(this._header);\n            \n            // Set header attributes for accessibility\n            if (this._header) {\n                this._header.setAttribute('role', 'button');\n                this._header.setAttribute('aria-expanded', this._isExpanded ? 'true' : 'false');\n                this._header.setAttribute('tabindex', '0');\n                \n                // Add keyboard support\n                this._header.addEventListener('keydown', (e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        this._toggleExpanded();\n                    }\n                });\n            }\n            \n            // Create and append content container\n            this._content = this._createContent();\n            if (this._content) {\n                this.appendChild(this._content);\n                \n                // Add back any existing content to the content container\n                existingContent.forEach(child => {\n                    this._content.appendChild(child);\n                });\n            }\n            \n            // Ensure proper ARIA attributes for accessibility\n            this.setAttribute('role', 'listitem');\n            \n            // Set initial content visibility\n            this._updateContentVisibility();\n            \n            // Mark as rendered\n            this.rendered = true;\n            this._isRendering = false;\n        }\n    }\n    \n    _createContent() {\n        const content = document.createElement('div');\n        content.className = 'collapsible-item__content';\n        \n        // Filter out any header elements and their content\n        const headerElements = this.querySelectorAll('.collapsible-item__header, .collapsible-item__label, .collapsible-item__icon');\n        const headerElementSet = new Set(headerElements);\n        \n        // Process direct children that are not part of the header\n        const filteredChildren = Array.from(this.childNodes).filter(node => {\n            // Keep only element nodes that are not in the header\n            if (node.nodeType === Node.ELEMENT_NODE) {\n                return !headerElementSet.has(node) && !node.closest('.collapsible-item__header');\n            }\n            // Keep text nodes that are not just whitespace\n            if (node.nodeType === Node.TEXT_NODE) {\n                return node.textContent.trim() !== '' && \n                       !node.textContent.includes('▶') && \n                       !node.textContent.includes('▼');\n            }\n            return false;\n        });\n        \n        // Add the filtered children to the content\n        filteredChildren.forEach(child => {\n            content.appendChild(child.cloneNode(true));\n        });\n        \n        return content;\n    }\n    \n    get expanded() {\n        return this._isExpanded;\n    }\n    \n    set expanded(value) {\n        if (this._isExpanded === value) return; // No change needed\n        \n        this._isExpanded = value;\n        \n        // Update the attribute to reflect the state in the DOM\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the content visibility immediately\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _toggleExpanded() {\n        this._isExpanded = !this._isExpanded;\n        \n        // Update the expanded attribute\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the UI\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _updateContentVisibility() {\n        if (!this._content || !this._header) return;\n        \n        const hideIcon = this.hasAttribute('hide-icon');\n        \n        if (this._isExpanded) {\n            this._content.classList.add('collapsible-item__content--expanded');\n            this._content.style.display = 'block';\n            this._header.setAttribute('aria-expanded', 'true');\n            this.classList.add('collapsible-item--expanded');\n            // Update icon to expanded state (down arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▼');\n            }\n        } else {\n            this._content.classList.remove('collapsible-item__content--expanded');\n            this._content.style.display = 'none';\n            this._header.setAttribute('aria-expanded', 'false');\n            this.classList.remove('collapsible-item--expanded');\n            // Update icon to collapsed state (right arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▶');\n            }\n        }\n    }\n    \n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'removeshift') {\n            this._removeShift = newValue !== null;\n            if (this._removeShift) {\n                this.classList.add('collapsible-item--no-padding');\n            } else {\n                this.classList.remove('collapsible-item--no-padding');\n            }\n        } else if (name === 'hide-icon' && this._header) {\n            // Handle hide-icon attribute changes\n            const iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue !== null) {\n                // hide-icon is set, remove the icon if it exists\n                if (iconEl) {\n                    iconEl.remove();\n                }\n            } else if (this.hasAttribute('icon')) {\n                // hide-icon is removed, add the icon back if we have an icon attribute\n                if (!iconEl) {\n                    const icon = this.getAttribute('icon');\n                    const newIconEl = document.createElement('span');\n                    newIconEl.className = 'collapsible-item__icon';\n                    newIconEl.textContent = icon;\n                    newIconEl.style.marginRight = '0.5rem';\n                    const contentWrapper = this._header.firstElementChild;\n                    if (contentWrapper) {\n                        contentWrapper.insertBefore(newIconEl, contentWrapper.firstChild);\n                    }\n                }\n            }\n        } else if (name === 'expanded') {\n            const wasExpanded = this._isExpanded;\n            this._isExpanded = newValue !== null;\n            \n            // Only update if the state actually changed\n            if (this._isExpanded !== wasExpanded) {\n                this._updateContentVisibility();\n            }\n        } else if (name === 'icon' && this._header) {\n            // Update the icon if it exists, or create it if it doesn't\n            let iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue) {\n                if (!iconEl) {\n                    iconEl = document.createElement('span');\n                    iconEl.className = 'collapsible-item__icon';\n                    this._header.insertBefore(iconEl, this._header.firstChild);\n                }\n                iconEl.textContent = newValue;\n            } else if (iconEl) {\n                this._header.removeChild(iconEl);\n            }\n        } else if (name === 'label' && this._header) {\n            // Update the label if it exists, or create it if it doesn't\n            let labelEl = this._header.querySelector('.collapsible-item__label');\n            if (labelEl) {\n                labelEl.textContent = newValue || '';\n            } else if (newValue) {\n                labelEl = document.createElement('span');\n                labelEl.className = 'collapsible-item__label';\n                labelEl.textContent = newValue;\n                this._header.appendChild(labelEl);\n            }\n        }\n    }\n}\n\n// Define the custom element with the correct name\nconst elementName = 'collapsible-item';\n\n// Check if the element is already defined and undefine it if necessary\nif (typeof window !== 'undefined' && window.customElements) {\n    // First, try to undefine the element if it exists\n    if (window.customElements.get(elementName)) {\n        const oldElement = window.customElements.get(elementName);\n        delete window.customElements._elements[elementName];\n    }\n    \n    // Define the element with the proper configuration\n    window.customElements.define(elementName, CollapsibleItem, { extends: 'li' });\n}","/**\n * SelectionMenu Component\n * A collapsible menu that allows selection of leaf nodes using CollapsibleItem\n * \n * @fires item-selected - Dispatched when a leaf node is selected\n * @property {string} items - JSON string representing the menu items structure\n * @property {string} selected - ID of the currently selected item\n */\n\nexport class SelectionMenu extends HTMLElement {\n  static get observedAttributes() {\n    return ['items', 'selected'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._items = [];\n    this._selectedId = null;\n    this._boundOnItemClick = this._onItemClick.bind(this);\n    \n    // Import the CollapsibleItem component\n    import('../../molecules/collapsible-item/CollapsibleItem.js');\n  }\n\n  connectedCallback() {\n    this._render();\n  }\n\n  disconnectedCallback() {\n    this._removeEventListeners();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'items':\n        this._items = newValue ? JSON.parse(newValue) : [];\n        this._render();\n        break;\n      case 'selected':\n        this._selectedId = newValue;\n        this._updateSelectedState();\n        break;\n    }\n  }\n\n  get items() {\n    return JSON.stringify(this._items);\n  }\n\n  set items(value) {\n    this._items = value ? JSON.parse(value) : [];\n    this._render();\n  }\n\n  get selected() {\n    return this._selectedId;\n  }\n\n  set selected(value) {\n    if (this._selectedId !== value) {\n      this._selectedId = value;\n      this._updateSelectedState();\n    }\n  }\n\n  _render() {\n    if (!this.shadowRoot) return;\n    \n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          --primary-color: #4a6cf7;\n          --hover-bg: #f5f8ff;\n          --selected-bg: #e6f0ff;\n          --border-color: #e2e8f0;\n          --text-color: #2d3748;\n          --text-secondary: #4a5568;\n        }\n        \n        .menu-container {\n          border: 1px solid var(--border-color);\n          border-radius: 6px;\n          overflow: hidden;\n        }\n        \n        .menu-item {\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          margin: 2px 0;\n          border-radius: 4px;\n        }\n        \n        .menu-item:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        .menu-item--selected:hover {\n          background-color: var(--selected-bg, #e6f0ff);\n        }\n        \n        /* Style for the collapsible item header */\n        .menu-item::part(header) {\n          padding: 8px 12px;\n          display: flex;\n          align-items: center;\n        }\n        \n        /* Style for the collapsible item content */\n        .menu-item::part(content) {\n          padding: 0;\n          overflow: hidden;\n          transition: max-height 0.3s ease, opacity 0.2s ease;\n          max-height: 0;\n          opacity: 0;\n          margin: 0;\n        }\n        \n        .menu-item::part(content).menu-item__content--expanded {\n          max-height: 1000px; /* Adjust based on your needs */\n          opacity: 1;\n          padding: 4px 0 4px 1rem;\n        }\n        \n        .menu-item__child-list {\n          list-style: none;\n          padding: 0;\n          margin: 0 0 0 1rem;\n        }\n        \n        /* Remove bullets from ul elements */\n        ul {\n          list-style-type: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Ensure list items have no default styling */\n        li {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Leaf item styles */\n        .menu-item__leaf {\n          display: flex;\n          align-items: center;\n          padding: 4px 12px;\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          border-radius: 4px;\n        }\n        \n        .menu-item__leaf:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item__leaf.menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        /* Arrow icon for collapsible items */\n        .menu-item__arrow {\n          display: inline-block;\n          width: 12px;\n          text-align: center;\n          transition: transform 0.2s ease;\n        }\n        \n        .menu-item[expanded] .menu-item__arrow {\n          transform: rotate(90deg);\n        }\n      </style>\n      <div class=\"menu-container\">\n        ${this._renderItems(this._items, 0)}\n      </div>\n    `;\n    \n    this._addEventListeners();\n  }\n  \n  _renderItems(items, level = 0) {\n    if (!items || !items.length) return '';\n    \n    // Create a container for the list\n    const listContainer = document.createElement('ul');\n    listContainer.style.listStyle = 'none';\n    listContainer.style.padding = '0';\n    listContainer.style.margin = '0';\n    \n    items.forEach(item => {\n      const hasChildren = item.children && item.children.length > 0;\n      const isSelected = this._selectedId === item.id;\n      \n      // Create list item\n      const li = document.createElement('li');\n      li.setAttribute('data-id', item.id);\n      \n      if (hasChildren) {\n        // For items with children, use collapsible-item\n        li.setAttribute('is', 'collapsible-item');\n        li.setAttribute('data-id', item.id);\n        li.setAttribute('label', item.name);\n        \n        // Determine initial state\n        const hasSelectedDescendant = this._hasSelectedDescendant(item);\n        const isExpanded = hasSelectedDescendant || isSelected;\n        \n        // Set initial expanded state\n        if (isExpanded) {\n          li.setAttribute('expanded', '');\n        }\n        \n        // Set the arrow icon using the icon attribute\n        li.setAttribute('icon', isExpanded ? '▼' : '▶');\n        li.style.marginRight = '8px';\n        li.style.transition = 'transform 0.2s ease';\n        \n        if (isSelected) {\n          li.classList.add('menu-item--selected');\n        }\n        \n        // Create and append child list\n        const childList = document.createElement('ul');\n        childList.className = 'menu-item__child-list';\n        childList.innerHTML = this._renderItems(item.children, level + 1);\n        \n        // Create content container with proper styling\n        const contentSlot = document.createElement('div');\n        contentSlot.slot = 'content';\n        contentSlot.className = 'menu-item__content';\n        \n        // Add the child list to the content slot\n        contentSlot.appendChild(childList);\n        \n        // Add the content slot to the collapsible item\n        li.appendChild(contentSlot);\n        \n        // Handle the toggle event to update the content visibility\n        li.addEventListener('toggle', (e) => {\n          contentSlot.style.display = e.detail.expanded ? 'block' : 'none';\n        });\n      } else {\n        // For leaf nodes, just use a span\n        const span = document.createElement('span');\n        span.className = 'menu-item__leaf';\n        if (isSelected) span.classList.add('menu-item--selected');\n        \n      \n        \n        // Add label\n        const label = document.createElement('span');\n        label.className = 'menu-item__label';\n        label.textContent = item.name;\n        span.appendChild(label);\n        \n        // Add click handler for selection\n        span.addEventListener('click', (e) => {\n          e.stopPropagation();\n          this._selectedId = item.id;\n          this._updateSelectedState();\n          this.dispatchEvent(new CustomEvent('item-selected', {\n            detail: {\n              id: item.id,\n              item: item,\n              name: item.name\n            },\n            bubbles: true,\n            composed: true\n          }));\n        });\n        \n        li.appendChild(span);\n      }\n      \n      listContainer.appendChild(li);\n    });\n    \n    return level === 0 ? listContainer.outerHTML : listContainer.innerHTML;\n  }\n  \n  _addEventListeners() {\n    this.shadowRoot.addEventListener('click', this._boundOnItemClick);\n  }\n  \n  _removeEventListeners() {\n    this.shadowRoot.removeEventListener('click', this._boundOnItemClick);\n  }\n  \n  _onItemClick(event) {\n    // Handle leaf node clicks\n    const leafNode = event.target.closest('.menu-item__leaf');\n    if (leafNode) {\n      event.stopPropagation();\n      const itemId = leafNode.getAttribute('data-id');\n      if (itemId) {\n        this.selected = itemId;\n        this._updateSelectedState();\n        this.dispatchEvent(new CustomEvent('item-selected', {\n          detail: { id: itemId },\n          bubbles: true,\n          composed: true\n        }));\n      }\n      return;\n    }\n    \n    // Handle collapsible item clicks\n    const header = event.target.closest('.collapsible-item__header');\n    if (!header) return;\n    \n    const itemElement = header.parentElement;\n    if (itemElement && itemElement.getAttribute('is') === 'collapsible-item') {\n      event.stopPropagation();\n      \n      // Toggle the expanded state\n      const isExpanded = itemElement.hasAttribute('expanded');\n      const arrowIcon = itemElement.querySelector('.menu-item__arrow');\n      \n      if (isExpanded) {\n        itemElement.removeAttribute('expanded');\n        if (arrowIcon) arrowIcon.textContent = '▶';\n      } else {\n        itemElement.setAttribute('expanded', '');\n        if (arrowIcon) arrowIcon.textContent = '▼';\n      }\n      \n      // Dispatch a custom event for the toggle action\n      itemElement.dispatchEvent(new CustomEvent('toggle', {\n        detail: { expanded: !isExpanded },\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n  \n  _updateSelectedState() {\n    if (!this.shadowRoot) return;\n    \n    // Remove selected class from all items\n    const allCollapsibleItems = this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]');\n    const allLeafItems = this.shadowRoot.querySelectorAll('.menu-item__leaf');\n    \n    allCollapsibleItems.forEach(item => {\n      item.classList.remove('menu-item--selected');\n      item.removeAttribute('selected');\n    });\n    \n    allLeafItems.forEach(leaf => {\n      leaf.classList.remove('menu-item--selected');\n    });\n    \n    // Add selected class to the selected item\n    if (this._selectedId) {\n      \n      // Check collapsible items\n      const selectedCollapsibleItem = this.shadowRoot.querySelector(`li[is=\"collapsible-item\"][data-id=\"${this._selectedId}\"]`);\n      if (selectedCollapsibleItem) {\n        selectedCollapsibleItem.classList.add('menu-item--selected');\n        selectedCollapsibleItem.setAttribute('selected', '');\n      }\n      \n      // Check leaf items\n      const selectedLeafItem = this.shadowRoot.querySelector(`li[data-id=\"${this._selectedId}\"] .menu-item__leaf`);\n      if (selectedLeafItem) {\n        selectedLeafItem.classList.add('menu-item--selected');\n      }\n      \n      // If we didn't find the item, it might be because it's in a closed collapsible item\n      if (!selectedCollapsibleItem && !selectedLeafItem) {\n        console.warn('Could not find selected item in the DOM. It might be in a closed collapsible section.');\n      }\n    }\n  }\n  \n  _hasSelectedDescendant(item) {\n    if (!item) return false;\n    \n    // Check if this item is selected\n    if (item.id === this._selectedId) return true;\n    \n    // Check if any child is selected\n    if (item.children) {\n      return item.children.some(child => this._hasSelectedDescendant(child));\n    }\n    \n    return false;\n  }\n  \n  _findItemById(items, id) {\n    if (!items || !items.length) return null;\n    \n    for (const item of items) {\n      if (item.id === id) return item;\n      if (item.children) {\n        const found = this._findItemById(item.children, id);\n        if (found) return found;\n      }\n    }\n    return null;\n  }\n}\n\n// Define the custom element\nif (!customElements.get('selection-menu')) {\n  customElements.define('selection-menu', SelectionMenu);\n}","import { CollapsibleItem } from '../../molecules/collapsible-item/CollapsibleItem.js';\n\nexport class ImageCollection extends HTMLElement {\n    static get observedAttributes() {\n        return ['images'];\n    }\n\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this._images = [];\n        this._handleToggle = this._handleToggle.bind(this);\n        this._currentOpenIndex = 0;\n    }\n\n    get images() {\n        return this._images;\n    }\n\n    set images(value) {\n        if (Array.isArray(value)) {\n            this._images = value;\n            this.render();\n        } else if (typeof value === 'string') {\n            try {\n                this._images = JSON.parse(value);\n                this.render();\n            } catch (e) {\n            }\n        }\n    }\n\n    connectedCallback() {\n        this.render();\n        this.shadowRoot.addEventListener('toggle', this._handleToggle);\n    }\n\n    disconnectedCallback() {\n        this.shadowRoot.removeEventListener('toggle', this._handleToggle);\n    }\n\n    _handleToggle(event) {\n        // Prevent event from bubbling up\n        event.stopPropagation();\n        \n        // Prevent reentrant calls\n        if (this._isHandlingToggle) return;\n        this._isHandlingToggle = true;\n        \n        let index = -1;\n        let wasExpanded = false;\n        \n        try {\n            \n            // Find the clicked collapsible item by traversing up the composed path\n            const target = event.composedPath().find(\n                node => node.nodeType === Node.ELEMENT_NODE && \n                       node.getAttribute && \n                       node.getAttribute('is') === 'collapsible-item'\n            );\n            \n            if (!target) {\n                return;\n            }\n\n            // Get all collapsible items\n            const allItems = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n            index = allItems.indexOf(target);\n            \n            if (index === -1) {\n                return;\n            }\n            \n            // Prevent toggling if this item is already open\n            if (index === this._currentOpenIndex) {\n                return;\n            }\n            \n            wasExpanded = target.expanded;\n            \n            // Update all items\n            \n            // First, close all items except the target\n            allItems.forEach((item, i) => {\n                if (i !== index && item.expanded) {\n                    item.expanded = false;\n                }\n            });\n            \n            // Then toggle the target item if needed\n            if (index === this._currentOpenIndex) {\n                // Clicked the currently open item - close it\n                target.expanded = false;\n                this._currentOpenIndex = -1;\n            } else {\n                // Open the clicked item\n                target.expanded = true;\n                this._currentOpenIndex = index;\n            }\n        } finally {\n            // Always clear the flag, even if an error occurred\n            this._isHandlingToggle = false;\n        }\n        \n        // Dispatch our custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { \n                index,\n                expanded: !wasExpanded,\n                source: 'image-collection'\n            },\n            bubbles: true,\n            composed: true\n        }));\n    }\n\n    \n    _onItemToggle(event) {\n        // Stop propagation to prevent double-handling\n        event.stopPropagation();\n        \n        const targetItem = event.target.closest('li[is=\"collapsible-item\"]');\n        if (!targetItem) return;\n\n        const items = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n        const index = items.indexOf(targetItem);\n        \n        if (index === -1) return;\n\n        // If the clicked item is being closed, just update our state\n        if (!event.detail.expanded) {\n            if (this._currentOpenIndex === index) {\n                this._currentOpenIndex = -1;\n            }\n            return;\n        }\n\n        // Close the previously open item if it's different from the clicked one\n        if (this._currentOpenIndex !== -1 && this._currentOpenIndex !== index) {\n            const previousItem = items[this._currentOpenIndex];\n            if (previousItem) {\n                previousItem.toggle(false);\n            }\n        }\n        \n        this._currentOpenIndex = index;\n    }\n\n    render() {\n        if (!this.shadowRoot) return;\n        \n        // Only expand the first item if no item is currently expanded\n        if (this._currentOpenIndex === -1 && this._images.length > 0) {\n            this._currentOpenIndex = 0;\n        }\n        \n        this.shadowRoot.innerHTML = `\n            <style>\n                .image-collection {\n                    width: 100%;\n                    max-width: 800px;\n                    margin: 0 auto;\n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n                }\n                \n                .image-collection__container {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 0;\n                    width: 100%;\n                    list-style: none;\n                    padding: 0;\n                }\n                \n                .image-collection__item {\n                    width: 100%;\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection__image {\n                    width: 100%;\n                    height: auto;\n                    display: block;\n                }\n                \n                .image-collection__title {\n                    font-weight: 600;\n                    padding: 0.8rem 1rem;\n                    background-color: #f8fafc;\n                    width: 100%;\n                    cursor: pointer;\n                    transition: background-color 0.2s;\n                }\n                \n                .image-collection__title:hover {\n                    background-color: #f1f5f9;\n                }\n                \n                .image-collection .collapsible-item__header {\n                    padding: 0.5rem 1rem;\n                    background: none;\n                    border: none;\n                    width: 100%;\n                    text-align: left;\n                    cursor: pointer;\n                }\n                \n                .image-collection .collapsible-item__content {\n                    margin: 0;\n                    transition: all 0.3s ease;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"] {\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"]:last-child {\n                    margin-bottom: 0;\n                }\n            </style>\n            <div class=\"image-collection\">\n                <ul class=\"image-collection__container\">\n                    ${this._images.map((image, index) => `\n                        <li is=\"collapsible-item\" \n                            label=\"${image.title}\" \n                            ${image.removeshift ? 'removeshift=\"true\"' : ''}\n                            ${this._currentOpenIndex === index ? 'expanded' : ''}\n                            hide-icon\n                            >\n                            <div slot=\"content\">\n                                <img \n                                    class=\"image-collection__image\" \n                                    src=\"${image.src}\" \n                                    alt=\"${image.title}\"\n                                    loading=\"lazy\"\n                                >\n                            </div>\n                        </li>\n                    `).join('')}\n                </ul>\n            </div>\n        `;\n    }\n}\n\nif (!customElements.get('image-collection')) {\n    customElements.define('image-collection', ImageCollection);\n}","/**\n * ProductLayout\n * A layout component that displays an image collection, title, and content\n */\nimport { ImageCollection } from '../../organisms/image-collection/ImageCollection.js';\n\n// Import sample images\nconst defaultImages = [\n  {\n    title: 'Nature',\n    src: 'images/samples/nature.jpg',\n    alt: 'Scenic nature landscape',\n    description: 'A beautiful landscape showcasing nature\\'s beauty.'\n  },\n  {\n    title: 'Architecture',\n    src: 'images/samples/architecture.jpg',\n    alt: 'Modern architecture building',\n    description: 'Stunning modern architecture design.'\n  },\n  {\n    title: 'Technology',\n    src: 'images/samples/technology.jpg',\n    alt: 'Technology circuit board',\n    description: 'Close-up of an advanced circuit board.'\n  }\n];\n\nexport class ProductLayout extends HTMLElement {\n  static get observedAttributes() {\n    return ['title', 'images'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._title = 'Product Name';\n    this._images = [];\n    this._isConnected = false;\n    this._hasRendered = false;\n    this._isUpdating = false;\n    this._elements = null;\n    this._render = this._render.bind(this);\n  }\n\n  connectedCallback() {\n    this._isConnected = true;\n    this._render();\n  }\n\n  disconnectedCallback() {\n    this._isConnected = false;\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    \n    if (name === 'title') {\n      this._title = newValue || 'Product Name';\n      this._updateTitle();\n    } else if (name === 'images') {\n      if (typeof newValue === 'string') {\n        try {\n          const parsed = JSON.parse(newValue);\n          this.images = Array.isArray(parsed) ? parsed : [];\n        } catch (e) {\n          console.error('Invalid images JSON:', e);\n          this.images = [];\n        }\n      } else if (Array.isArray(newValue)) {\n        this.images = newValue;\n      } else {\n        this.images = [];\n      }\n    }\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  set title(value) {\n    if (this._title === value) return;\n    this._title = value || '';\n    this._updateTitle();\n  }\n\n  get images() {\n    return this._images;\n  }\n\n  set images(value) {\n    if (Array.isArray(value)) {\n      this._images = value.length > 0 ? value : [...defaultImages];\n    } else if (typeof value === 'string') {\n      try {\n        const parsed = JSON.parse(value);\n        this._images = Array.isArray(parsed) ? parsed : [...defaultImages];\n      } catch (e) {\n        console.error('Invalid images JSON:', e);\n        this._images = [...defaultImages];\n      }\n    } else {\n      this._images = [...defaultImages];\n    }\n    this._updateImages();\n  }\n\n  _updateTitle() {\n    if (!this._elements?.title) return;\n    this._elements.title.textContent = this._title;\n  }\n\n  _updateImages() {\n    if (!this._elements?.imageCollection) return;\n    // Ensure we're passing a fresh copy of the array to trigger the setter\n    this._elements.imageCollection.images = [...this._images];\n    \n    // Ensure the ImageCollection is visible\n    if (this._elements.imageCollectionContainer) {\n      this._elements.imageCollectionContainer.style.display = 'block';\n    }\n  }\n\n  _render() {\n    if (this._isUpdating || !this.shadowRoot) return;\n    this._isUpdating = true;\n\n    try {\n      if (!this._hasRendered) {\n        this.shadowRoot.innerHTML = `\n          <style>\n            :host {\n              display: block;\n              max-width: 1200px;\n              margin: 0 auto;\n              padding: 2rem;\n              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n            }\n            \n            .product-layout {\n              display: grid;\n              grid-template-columns: 1fr;\n              gap: 2rem;\n            }\n            \n            .product-header {\n              text-align: center;\n              margin-bottom: 2rem;\n            }\n            \n            .product-title {\n              font-size: 2.5rem;\n              color: #2d3748;\n              margin: 0 0 1rem;\n            }\n            \n            .content {\n              line-height: 1.6;\n              color: #4a5568;\n            }\n            \n            .image-collection-container {\n              margin: 2rem 0;\n            }\n            \n            /* Remove padding from collapsible items */\n            image-collection::part(content) {\n              padding: 0;\n            }\n            \n            @media (min-width: 1024px) {\n              .product-layout {\n                grid-template-columns: 1fr 1fr;\n                align-items: start;\n              }\n            }\n          </style>\n          <div class=\"product-layout\">\n            <div class=\"product-content\">\n              <div class=\"product-header\">\n                <h1 class=\"product-title\" id=\"title\"></h1>\n              </div>\n              <div class=\"content\" id=\"content\">\n                <slot></slot>\n              </div>\n            </div>\n            <div class=\"image-collection-container\" id=\"imageCollectionContainer\" style=\"display: none;\">\n              <image-collection id=\"imageCollection\"></image-collection>\n            </div>\n          </div>\n        `;\n\n        this._elements = {\n          title: this.shadowRoot.getElementById('title'),\n          content: this.shadowRoot.getElementById('content'),\n          imageCollection: this.shadowRoot.getElementById('imageCollection'),\n          imageCollectionContainer: this.shadowRoot.getElementById('imageCollectionContainer')\n        };\n        \n        // Initialize with default images if none provided\n        if (this._images.length === 0) {\n          this._images = [...defaultImages];\n        }\n\n        this._hasRendered = true;\n      }\n\n      this._updateTitle();\n      this._updateImages();\n    } finally {\n      this._isUpdating = false;\n    }\n  }\n}\n\n// Auto-register the component when loaded directly\nif (typeof window !== 'undefined' && !customElements.get('product-layout')) {\n  customElements.define('product-layout', ProductLayout);\n}\n","// Import components\nimport { CollapsibleItem } from './components/molecules/collapsible-item/CollapsibleItem.js';\nimport { CollapsibleList } from './components/molecules/collapsible-list/CollapsibleList.js';\nimport { IconLabel } from './components/atoms/icon-label/IconLabel.js';\nimport { SelectionMenu } from './components/organisms/selection-menu/SelectionMenu.js';\nimport { ImageCollection } from './components/organisms/image-collection/ImageCollection.js';\n\n// Initialize web components\nexport function defineCustomElements() {\n  // Define all custom elements with their actual implementations\n  customElements.define('collapsible-list', CollapsibleList);\n  customElements.define('collapsible-item', CollapsibleItem, { extends: 'li' });\n  customElements.define('icon-label', IconLabel);\n  customElements.define('selection-menu', SelectionMenu);\n  customElements.define('image-collection', ImageCollection);\n  customElements.define('product-layout', class extends HTMLElement {\n    constructor() {\n      super();\n      // Implementation will be added based on actual component logic\n    }\n  });\n\n  // Wait for all elements to be defined\n  return Promise.all([\n    customElements.whenDefined('collapsible-list'),\n    customElements.whenDefined('collapsible-item'),\n    customElements.whenDefined('icon-label'),\n    customElements.whenDefined('selection-menu'),\n    customElements.whenDefined('image-collection'),\n    customElements.whenDefined('product-layout')\n  ]);\n}\n\n// Auto-define components if in a browser environment\nif (typeof window !== 'undefined' && !window.__GENERIC_WEBCOMPONENTS_DEFINED__) {\n  window.__GENERIC_WEBCOMPONENTS_DEFINED__ = true;\n  defineCustomElements().catch(console.error);\n}\n","/// src/wrappers/react/index.jsx\nimport React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport { defineCustomElements } from '../../init.js';\n\n// Initialize web components when the module is loaded\ndefineCustomElements().catch(console.error);\n\n// Handle icon path resolution for React\nconst resolveIconPath = (icon) => {\n  if (!icon) return '';\n  // If it's a full URL or data URI, use as is\n  if (icon.startsWith('http') || icon.startsWith('data:') || icon.startsWith('blob:')) {\n    return icon;\n  }\n  // For local paths, assume they're relative to the public folder in the consuming app\n  return icon;\n};\n\n// Create React wrappers for each web component\nconst createReactWrapper = (tagName) => {\n  const Component = forwardRef(({ children, style, className, ...props }, ref) => {\n    const elementRef = useRef(null);\n    \n    // Handle ref forwarding\n    useImperativeHandle(ref, () => ({\n      ...(elementRef.current || {}),\n      // Add any component-specific methods here\n    }));\n    \n    // Special handling for icon-label to ensure proper styling\n    if (tagName === 'icon-label') {\n      return React.createElement(tagName, {\n        ref: (el) => {\n          elementRef.current = el;\n          if (ref) {\n            if (typeof ref === 'function') {\n              ref(el);\n            } else if (ref) {\n              ref.current = el;\n            }\n          }\n        },\n        ...props,\n        class: className,\n        style: {\n          '--icon-size': '24px', // Default size, can be overridden by style prop\n          ...(style || {})\n        },\n        'icon': props.icon ? resolveIconPath(props.icon) : undefined,\n        'label': props.label || ''\n      }, children);\n    }\n    \n    // For other components\n    const elementProps = Object.entries(props).reduce((acc, [key, value]) => {\n      // Handle events (onEvent -> onevent)\n      if (key.startsWith('on') && key[2] === key[2].toUpperCase()) {\n        const eventName = key[2].toLowerCase() + key.slice(3);\n        return { ...acc, [eventName]: value };\n      }\n      // Handle className -> class\n      if (key === 'className') {\n        return { ...acc, class: value };\n      }\n      // Handle style object\n      if (key === 'style' && typeof value === 'object') {\n        return { ...acc, style: value };\n      }\n      // Special handling for icon prop\n      if (key === 'icon') {\n        return { ...acc, icon: resolveIconPath(value) };\n      }\n      // Pass through other props\n      return { ...acc, [key]: value };\n    }, {});\n    \n    // Handle ref and props\n    const elementPropsWithRef = {\n      ...elementProps,\n      ref: (element) => {\n        if (element) {\n          elementRef.current = element;\n          \n          // Forward the ref if it's a function\n          if (typeof ref === 'function') {\n            ref(element);\n          } else if (ref) {\n            ref.current = element;\n          }\n        }\n      }\n    };\n    \n    return React.createElement(tagName, elementPropsWithRef, children);\n  });\n  \n  // Set display name for better debugging\n  Component.displayName = tagName;\n  \n  return Component;\n};\n\n// Export all components as named exports\nconst CollapsibleList = createReactWrapper('collapsible-list');\nconst CollapsibleItem = createReactWrapper('collapsible-item');\nconst IconLabel = createReactWrapper('icon-label');\nconst SelectionMenu = createReactWrapper('selection-menu');\nconst ImageCollection = createReactWrapper('image-collection');\nconst ProductLayout = createReactWrapper('product-layout');\n\n// Export all components as named exports\nexport {\n  CollapsibleList,\n  CollapsibleItem,\n  IconLabel,\n  SelectionMenu,\n  ImageCollection,\n  ProductLayout,\n  defineCustomElements\n};\n\n// Default export with all components\nexport default {\n  CollapsibleList,\n  CollapsibleItem,\n  IconLabel,\n  SelectionMenu,\n  ImageCollection,\n  ProductLayout,\n  defineCustomElements\n};","// Core components\nexport * from './molecules/collapsible-list/CollapsibleList.js';\nexport * from './molecules/collapsible-item/CollapsibleItem.js';\n\n// Additional components (dynamically imported when needed)\nlet additionalComponents = {};\n\n// Function to load additional components\nexport async function loadAdditionalComponents() {\n  try {\n    const selectionMenuModule = await import('./organisms/selection-menu/SelectionMenu.js');\n    additionalComponents.SelectionMenu = selectionMenuModule.default || selectionMenuModule;\n  } catch (e) {\n    console.warn('SelectionMenu component not found or failed to load', e);\n  }\n\n  try {\n    const productLayoutModule = await import('./templates/product-layout/ProductLayout.js');\n    additionalComponents.ProductLayout = productLayoutModule.default || productLayoutModule;\n  } catch (e) {\n    console.warn('ProductLayout component not found or failed to load', e);\n  }\n  \n  return additionalComponents;\n}\n\n// Export a function to get additional components\nexport function getAdditionalComponents() {\n  return additionalComponents;\n}\n","import * as webComponents from '../../components';\nimport { defineCustomElements } from '../../init.js';\n\nconst VuePlugin = {\n  install(app) {\n    // Initialize web components\n    defineCustomElements().catch(console.error);\n    // Register all web components as Vue components\n    Object.entries(webComponents).forEach(([componentName, webComponent]) => {\n      if (typeof webComponent === 'function' && webComponent.name) {\n        const tagName = webComponent.is || componentName.toLowerCase();\n        \n        // Create a Vue component definition\n        const vueComponent = {\n          name: componentName,\n          inheritAttrs: false,\n          emits: [], // Will be populated with event names\n          props: {},\n          render() {\n            // Convert kebab-case attributes to camelCase for web components\n            const attrs = Object.entries(this.$attrs).reduce((acc, [key, value]) => {\n              // Convert kebab-case to camelCase for props\n              const camelKey = key.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n              acc[camelKey] = value;\n              return acc;\n            }, {});\n\n            // Add event listeners\n            const on = {};\n            Object.keys(this.$listeners).forEach((event) => {\n              on[event] = this.$listeners[event];\n            });\n\n            return this.$createElement(\n              tagName,\n              {\n                attrs,\n                on,\n                ref: 'webComponent',\n              },\n              this.$slots.default\n            );\n          },\n        };\n\n        // Register the component globally\n        app.component(componentName, vueComponent);\n      }\n    });\n  },\n};\n\nexport default VuePlugin;\n","// Core web components\nexport * from './components/molecules/collapsible-list/CollapsibleList.js';\nexport * from './components/molecules/collapsible-item/CollapsibleItem.js';\nexport * from './components/atoms/icon-label/IconLabel.js';\nexport * from './components/organisms/selection-menu/SelectionMenu.js';\nexport * from './components/organisms/image-collection/ImageCollection.js';\nexport * from './components/templates/product-layout/ProductLayout.js';\n\n// Import React wrappers\nimport ReactWrappers from './wrappers/react/index.jsx';\n\n// Vue plugin\nexport { default as VuePlugin } from './wrappers/vue';\n\n// Export initialization function\nexport { defineCustomElements } from './init';\n\n// Additional components that need to be loaded asynchronously\nimport { loadAdditionalComponents, getAdditionalComponents } from './components';\n\n// Export React wrappers as both default and named exports\nexport const ReactComponents = ReactWrappers;\nexport default ReactWrappers;\n\n// Export component loader\nexport const Components = {\n  // Core components are already available via default export\n  ...getAdditionalComponents(),\n  \n  // Method to load additional components\n  async load() {\n    await loadAdditionalComponents();\n    Object.assign(this, getAdditionalComponents());\n    return this;\n  }\n};\n\n// Auto-load additional components in browser environment\nif (typeof window !== 'undefined') {\n  Components.load().catch(console.error);\n}\n"],"names":["items","lists","CollapsibleList","IconLabel","CollapsibleItem","SelectionMenu","ImageCollection","ProductLayout"],"mappings":"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"}