{"version":3,"file":"index-BZWRFVTI.js","sources":["../src/components/molecules/collapsible-list/CollapsibleList.js","../src/components/atoms/collapsible-item/CollapsibleItem.js","../src/components/index.js","../src/wrappers/react/index.jsx","../src/wrappers/vue/index.js","../src/index.js"],"sourcesContent":["/**\n * CollapsibleList Component\n * A custom element that creates a collapsible list container\n */\n\nexport class CollapsibleList extends HTMLElement {\n  static get observedAttributes() {\n    return ['reverse-heading', 'single-item', 'accordion'];\n  }\n  \n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._isUpdating = false; // Track if we're currently updating to prevent reentrant calls\n    this._handleItemToggle = this._handleItemToggle.bind(this);\n    \n    const container = document.createElement('div');\n    const slot = document.createElement('slot');\n    \n    // Create styles for the component\n    const style = document.createElement('style');\n    style.textContent = `\n      :host {\n        display: block;\n        width: 100%;\n        --indent-size: 1.5rem;\n      }\n      \n      ::slotted(collapsible-item) {\n        display: block;\n        margin: 0.25rem 0;\n        padding: 0;\n        width: 100%;\n      }\n      \n      /* Nested lists should have a border */\n      ::slotted(collapsible-list) {\n        border-left: 1px solid #e0e0e0;\n        margin-left: 0.5rem;\n        padding-left: 0.5rem;\n      }\n      \n      /* Style for the header in collapsible items */\n      .collapsible-item__header {\n        display: flex;\n        align-items: center;\n        width: 100%;\n        flex-direction: row;\n      }\n      \n      /* Toggle container styles */\n      .collapsible-item__toggle-container {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: var(--toggle-size, 24px);\n        height: var(--toggle-size, 24px);\n        margin: var(--toggle-margin, 0 8px 0 0);\n        flex-shrink: 0;\n      }`;\n    \n    container.appendChild(slot);\n    this.shadowRoot.append(style, container);\n  }\n  \n  async connectedCallback() {\n    if (!this._initialized) {\n      this._initializeComponent();\n      this._initialized = true;\n      \n      // Set initial reverse heading state\n      await this._updateReverseHeading();\n      \n      // Set up event listeners for accordion behavior\n      this.addEventListener('toggle', this._handleItemToggle);\n      \n      // Ensure at least one item is expanded in accordion mode\n      if (this.hasAttribute('accordion')) {\n        this._ensureOneItemExpanded();\n      }\n    }\n    \n    // Set up mutation observer for dynamic content\n    this._setupMutationObserver();\n  }\n  \n  _initializeComponent() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'list');\n    }\n    \n    if (!this.hasAttribute('aria-label') && !this.hasAttribute('aria-labelledby')) {\n      console.warn('collapsible-list: Add an aria-label or aria-labelledby attribute for accessibility');\n    }\n  }\n  \n  _setupMutationObserver() {\n    // Set up a mutation observer to handle dynamically added items and attribute changes\n    this._observer = new MutationObserver(async (mutations) => {\n      let shouldUpdate = false;\n      \n      for (const mutation of mutations) {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'reverse-heading') {\n          shouldUpdate = true;\n          break;\n        } else if (mutation.type === 'childList') {\n          // Check if any added nodes are collapsible items or lists\n          for (const node of mutation.addedNodes) {\n            if (node.nodeType === Node.ELEMENT_NODE && \n                (node.matches('collapsible-item') || node.matches('collapsible-list'))) {\n              shouldUpdate = true;\n              break;\n            }\n          }\n          if (shouldUpdate) break;\n        }\n      }\n      \n      if (shouldUpdate) {\n        await this._updateReverseHeading();\n      }\n    });\n    \n    // Start observing the component for attribute changes and child list changes\n    this._observer.observe(this, {\n      attributes: true,\n      attributeFilter: ['reverse-heading'],\n      childList: true,\n      subtree: true\n    });\n  }\n  \n  /**\n   * Updates the reverse heading state for all child collapsible items\n   * @private\n   */\n  async _updateReverseHeading() {\n    // Prevent reentrant calls\n    if (this._isUpdating) return;\n    this._isUpdating = true;\n    \n    try {\n      const isReversed = this.hasAttribute('reverse-heading') && \n                       this.getAttribute('reverse-heading') !== 'false';\n      \n      // Temporarily disconnect observer to prevent infinite loop\n      if (this._observer) {\n        this._observer.disconnect();\n      }\n      \n      // Process direct child collapsible-items\n      const processItems = async (items) => {\n        for (const item of items) {\n          // Set the attribute on the item\n          if (isReversed) {\n            item.setAttribute('reverse-heading', '');\n          } else {\n            item.removeAttribute('reverse-heading');\n          }\n          \n          // Process any nested items in this item (only direct children)\n          const nestedItems = item.querySelectorAll(':scope > collapsible-item');\n          if (nestedItems.length > 0) {\n            await processItems(Array.from(nestedItems));\n          }\n          \n          // Process any nested lists in this item (only direct children)\n          const nestedLists = item.querySelectorAll(':scope > collapsible-list');\n          if (nestedLists.length > 0) {\n            await processLists(Array.from(nestedLists));\n          }\n        }\n      };\n      \n      // Process nested collapsible-lists\n      const processLists = async (lists) => {\n        for (const list of lists) {\n          // Skip if this is the current list to prevent cycles\n          if (list === this) continue;\n          \n          // Set the attribute on the list\n          if (isReversed) {\n            list.setAttribute('reverse-heading', '');\n          } else {\n            list.removeAttribute('reverse-heading');\n          }\n          \n          // Process any direct child items in this list\n          const nestedItems = list.querySelectorAll(':scope > collapsible-item');\n          if (nestedItems.length > 0) {\n            await processItems(Array.from(nestedItems));\n          }\n          \n          // Process any direct child lists\n          const nestedLists = list.querySelectorAll(':scope > collapsible-list');\n          if (nestedLists.length > 0) {\n            await processLists(Array.from(nestedLists));\n          }\n        }\n      };\n      \n      // Start processing from the current element\n      const items = this.querySelectorAll(':scope > collapsible-item');\n      if (items.length > 0) {\n        await processItems(Array.from(items));\n      }\n      \n      const lists = this.querySelectorAll(':scope > collapsible-list');\n      if (lists.length > 0) {\n        await processLists(Array.from(lists));\n      }\n      \n      // Force a reflow to ensure all attribute changes are applied\n      if (this.shadowRoot) {\n        this.shadowRoot.offsetHeight; // This forces a reflow\n      }\n    } catch (error) {\n      console.error('Error updating reverse heading:', error);\n    } finally {\n      // Reconnect observer if it exists\n      if (this._observer) {\n        this._observer.observe(this, {\n          attributes: true,\n          attributeFilter: ['reverse-heading'],\n          childList: true,\n          subtree: true\n        });\n      }\n      this._isUpdating = false;\n    }\n  }\n\n  _handleItemToggle(e) {\n    if (this._isUpdating) return;\n    \n    const target = e.target;\n    \n    // Only process if this is a direct child\n    if (target.parentElement === this) {\n      this._isUpdating = true;\n      \n      if (this.hasAttribute('accordion')) {\n        // In accordion mode, close other items when one is opened\n        if (target.expanded) {\n          this._closeOtherItems(target);\n        }\n      } else if (this.hasAttribute('single-item')) {\n        // In single-item mode, just close other items when one is opened\n        if (target.expanded) {\n          this._closeOtherItems(target);\n        }\n      }\n      \n      this._isUpdating = false;\n    }\n  }\n  \n  _closeOtherItems(exceptItem) {\n    // Don't close items if inside an image-collection\n    if (this.closest('image-collection')) {\n      return;\n    }\n    \n    const items = this.querySelectorAll('collapsible-item');\n    items.forEach(item => {\n      if (item !== exceptItem) {\n        item.expanded = false;\n      }\n    });\n  }\n  \n  _getOpenItems() {\n    return Array.from(this.querySelectorAll('collapsible-item[expanded]'));\n  }\n  \n  _ensureOneItemExpanded() {\n    if (!this.hasAttribute('accordion')) return;\n    \n    const openItems = this._getOpenItems();\n    if (openItems.length === 0) {\n      // If no items are open, open the first one\n      const firstItem = this.querySelector('collapsible-item');\n      if (firstItem) {\n        firstItem.setAttribute('expanded', '');\n      }\n    }\n  }\n}\n\n// Define the custom element\nif (!customElements.get('collapsible-list')) {\n  customElements.define('collapsible-list', CollapsibleList);\n}\n","/**\n * CollapsibleItem Component\n * A custom element that creates a collapsible list item\n */\n\nexport class CollapsibleItem extends HTMLElement {\n  static get observedAttributes() {\n    return ['expanded', 'reverse-heading', 'hide-icon'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._isExpanded = false;\n    this._nestedList = null;\n    this._showToggle = false;\n    this._initialized = false;\n    \n    // Bind methods\n    this._handleHeaderClick = this._handleHeaderClick.bind(this);\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n  }\n\n  connectedCallback() {\n    // Only initialize once\n    if (!this._initialized) {\n      this._initializeComponent();\n      this._initialized = true;\n      \n      // Set initial expanded state after component is initialized\n      const isExpanded = this.hasAttribute('expanded');\n      this._isExpanded = isExpanded;\n      \n      // Update the DOM\n      if (this._nestedContent) {\n        this._nestedContent.style.display = isExpanded ? 'block' : 'none';\n      }\n    }\n    \n    // Update styles and attributes immediately after initialization\n    this._updateToggleVisibility();\n    this._updateReverseHeading();\n    this._updateAriaExpanded();\n    \n    // Update toggle state based on expanded status\n    if (this._toggleElement) {\n      if (this.expanded) {\n        this._toggleElement.classList.add('collapsible-item__toggle--expanded');\n      } else {\n        this._toggleElement.classList.remove('collapsible-item__toggle--expanded');\n      }\n    }\n  }\n\n  _initializeComponent() {\n    // Clear any existing content\n    if (this.shadowRoot) {\n      this.shadowRoot.innerHTML = '';\n    } else {\n      this.attachShadow({ mode: 'open' });\n    }\n    \n    // Create the main container\n    const content = document.createElement('div');\n    content.className = 'collapsible-item';\n    \n    // Create the header element\n    this._headerElement = document.createElement('div');\n    this._headerElement.className = 'collapsible-item__header';\n    this._headerElement.setAttribute('part', 'header'); // Expose header as a part\n    \n    // Only create toggle if hide-icon is not true\n    let toggleContainer = null;\n    if (!this.hasAttribute('hide-icon')) {\n      toggleContainer = document.createElement('div');\n      toggleContainer.className = 'collapsible-item__toggle-container';\n      \n      // Create the toggle button\n      this._toggleElement = document.createElement('button');\n      this._toggleElement.className = 'collapsible-item__toggle';\n      this._toggleElement.setAttribute('aria-label', 'Toggle visibility');\n      this._toggleElement.setAttribute('aria-expanded', 'false');\n      this._toggleElement.innerHTML = '▼';\n      \n      // Add toggle to its container\n      toggleContainer.appendChild(this._toggleElement);\n    }\n    \n    // Create a slot for the header content\n    this._headerSlot = document.createElement('slot');\n    this._headerSlot.name = 'header';\n    \n    // Create a container for the header content\n    const headerContent = document.createElement('div');\n    headerContent.className = 'collapsible-item__content';\n    headerContent.appendChild(this._headerSlot);\n    \n    // Only append toggle container if it exists\n    if (toggleContainer) {\n      this._headerElement.appendChild(toggleContainer);\n    }\n    this._headerElement.appendChild(headerContent);\n    \n    // Create a default slot for nested content\n    this._defaultSlot = document.createElement('slot');\n    \n    // Create the nested content container\n    this._nestedContent = document.createElement('div');\n    this._nestedContent.className = 'collapsible-item__nested';\n    this._nestedContent.style.display = 'none'; // Start collapsed by default\n    this._nestedContent.appendChild(this._defaultSlot);\n    \n    // Add click event to the header and toggle button\n    this._headerElement.addEventListener('click', this._handleHeaderClick);\n    this._headerElement.addEventListener('keydown', this._handleKeyDown);\n    \n    // Add click handler specifically for the toggle button\n    if (this._toggleElement) {\n      this._toggleElement.addEventListener('click', (e) => {\n        e.stopPropagation();\n        this.toggle();\n      });\n    }\n    \n    // Build the DOM structure\n    content.appendChild(this._headerElement);\n    content.appendChild(this._nestedContent);\n    \n    // Add styles\n    const style = document.createElement('style');\n    style.textContent = `\n      :host {\n        display: block;\n        margin: 0;\n        padding: 0;\n      }\n\n      .collapsible-item {\n          display: flex;\n          flex-direction: column;\n          width: 100%;\n      }\n      \n      .collapsible-item__header {\n        display: flex;\n        align-items: center;\n        width: 100%;\n        margin: 0;\n        padding: 0;\n        background: none;\n        border: none;\n        font: inherit;\n        color: inherit;\n        cursor: pointer;\n      }\n      \n      .collapsible-item__toggle-container {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 24px;\n        height: 24px;\n        flex-shrink: 0;\n        margin-right: 8px;\n        \n      }\n      \n      .collapsible-item__toggle {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n        background: none;\n        border: none;\n        cursor: pointer;\n        transition: transform 0.2s ease-in-out;\n        font-size: 0.8em;\n        line-height: 1;\n        color: inherit;\n      }\n      \n      .collapsible-item__toggle--hidden {\n        visibility: hidden;\n        width: 0;\n        margin: 0;\n      }\n      \n      .collapsible-item__toggle--expanded {\n        transform: rotate(180deg);\n      }\n      \n      .collapsible-item__content {\n        flex: 1 1 auto;\n        min-width: 0; /* Allows content to shrink below its minimum content size */\n        text-align: left;\n        margin: 0;\n        padding: 0;\n        overflow: hidden; /* Ensures content doesn't overflow */\n        display: flex;\n        align-items: center;\n      }\n      \n      .collapsible-item__content ::slotted(*) {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis; /* Add ellipsis for overflow text */\n        text-overflow: ellipsis;\n      }\n      \n      .collapsible-item__nested {\n        margin: 0;\n        padding: 0;\n        display: block;\n        overflow: hidden;\n      }\n      collapsible-item > collapsible-list {\n        padding-left: 1rem;\n      }\n    `;\n    \n    // Append everything to the shadow root\n    this.shadowRoot.append(style, content);\n  }\n  \n  _handleHeaderClick(event) {\n    // Don't toggle if the click was on a link, button, or input\n    const interactiveElements = ['a', 'button', 'input', 'select', 'textarea'];\n    if (event.target.closest(interactiveElements.join(','))) {\n      return;\n    }\n    \n    // Always allow toggling on header click, regardless of _showToggle\n    // This makes the entire header clickable\n    event.preventDefault();\n    event.stopPropagation();\n    this.toggle();\n  }\n  \n  _handleKeyDown(event) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      this.toggle();\n    }\n  }\n  \n  _updateToggleVisibility() {\n    if (!this._headerElement) return;\n    \n    const headerContent = this.shadowRoot.querySelector('.collapsible-item__content');\n    const isNoChildren = this.hasAttribute('no-children');\n    \n    // Handle toggle container and icon visibility\n    if (this.hasAttribute('hide-icon') || isNoChildren) {\n      this._showToggle = false;\n      \n      // Hide the toggle element if it exists\n      if (this._toggleElement) {\n        this._toggleElement.style.display = 'none';\n      }\n      \n      // Adjust header content to take full width\n      if (headerContent) {\n        headerContent.style.marginLeft = '0';\n        headerContent.style.paddingLeft = '0';\n      }\n      \n      // Adjust header styles\n      this._headerElement.style.paddingLeft = '0';\n      this._headerElement.style.marginLeft = '0';\n      \n      return;\n    }\n    \n    // Show toggle if there's nested content\n    const hasNestedItems = this._nestedContent && this._nestedContent.children.length > 0;\n    this._showToggle = hasNestedItems;\n    \n    if (this._toggleElement) {\n      this._toggleElement.style.display = this._showToggle ? 'inline-block' : 'none';\n      \n      // Update toggle rotation based on expanded state\n      if (this.expanded) {\n        this._toggleElement.classList.add('collapsible-item__toggle--expanded');\n      } else {\n        this._toggleElement.classList.remove('collapsible-item__toggle--expanded');\n      }\n    }\n    \n    if (this._showToggle && this._headerElement) {\n      this._headerElement.setAttribute('role', 'button');\n      this._headerElement.setAttribute('tabindex', '0');\n      this._headerElement.setAttribute('aria-expanded', this.expanded.toString());\n      this._headerElement.classList.add('collapsible-item__header--clickable');\n      \n      // Update toggle class based on expanded state\n      if (this.expanded) {\n        this._toggleElement.classList.add('collapsible-item__toggle--expanded');\n      } else {\n        this._toggleElement.classList.remove('collapsible-item__toggle--expanded');\n      }\n    } else {\n      this._toggleElement.style.display = 'none';\n      this._toggleElement.classList.add('collapsible-item__toggle--hidden');\n      \n      // Remove ARIA attributes when toggle is hidden\n      this._headerElement.removeAttribute('role');\n      this._headerElement.removeAttribute('tabindex');\n      this._headerElement.removeAttribute('aria-expanded');\n      this._headerElement.classList.remove('collapsible-item__header--clickable');\n    }\n  }\n  \n  get expanded() {\n    return this._isExpanded;\n  }\n\n  set expanded(value) {\n    const isExpanded = Boolean(value);\n    if (this._isExpanded === isExpanded) return;\n    \n    this._isExpanded = isExpanded;\n    \n    // Update the DOM\n    if (this._nestedContent) {\n      if (isExpanded) {\n        this._nestedContent.style.display = 'block';\n        this._nestedContent.style.overflow = 'hidden';\n        this._nestedContent.style.height = 'auto';\n        \n        // Animate the height\n        const startHeight = this._nestedContent.offsetHeight;\n        this._nestedContent.style.height = '0';\n        \n        requestAnimationFrame(() => {\n          this._nestedContent.style.transition = 'height 0.3s ease-in-out';\n          this._nestedContent.style.height = `${startHeight}px`;\n          \n          // Remove the transition after animation completes\n          setTimeout(() => {\n            this._nestedContent.style.transition = '';\n            this._nestedContent.style.height = '';\n            this._nestedContent.style.overflow = '';\n          }, 300);\n        });\n      } else {\n        // Collapse with animation\n        const startHeight = this._nestedContent.offsetHeight;\n        this._nestedContent.style.height = `${startHeight}px`;\n        this._nestedContent.style.overflow = 'hidden';\n        \n        requestAnimationFrame(() => {\n          this._nestedContent.style.transition = 'height 0.3s ease-in-out';\n          this._nestedContent.style.height = '0';\n          \n          // After collapse, set display to none\n          setTimeout(() => {\n            if (this._nestedContent) {\n              this._nestedContent.style.display = 'none';\n              this._nestedContent.style.transition = '';\n              this._nestedContent.style.height = '';\n            }\n          }, 300);\n        });\n      }\n    }\n    \n    // Update header classes and ARIA attributes\n    if (this._headerElement) {\n      if (isExpanded) {\n        this._headerElement.classList.add('collapsible-item__header--expanded');\n      } else {\n        this._headerElement.classList.remove('collapsible-item__header--expanded');\n      }\n      \n      // Update ARIA attributes when expanded state changes\n      if (this._showToggle) {\n        this._headerElement.setAttribute('aria-expanded', isExpanded.toString());\n      }\n    }\n    \n    // Update toggle element\n    if (this._toggleElement) {\n      if (isExpanded) {\n        this._toggleElement.classList.add('collapsible-item__toggle--expanded');\n      } else {\n        this._toggleElement.classList.remove('collapsible-item__toggle--expanded');\n      }\n    }\n    \n    // Dispatch events\n    this._dispatchEvents(isExpanded);\n  }\n  \n  toggle(force) {\n    const shouldExpand = force !== undefined ? force : !this.expanded;\n    \n    // Update the expanded state\n    this.expanded = shouldExpand;\n    \n    // Update ARIA and classes\n    this._updateAriaExpanded();\n    \n    // Update toggle icon\n    if (this._toggleElement) {\n      if (shouldExpand) {\n        this._toggleElement.classList.add('collapsible-item__toggle--expanded');\n      } else {\n        this._toggleElement.classList.remove('collapsible-item__toggle--expanded');\n      }\n    }\n    \n    // Dispatch the change event\n    this._dispatchEvents(shouldExpand);\n  }\n  \n  _dispatchEvents(isExpanded) {\n    // Dispatch toggle event\n    this.dispatchEvent(new CustomEvent('toggle', {\n      detail: { expanded: isExpanded },\n      bubbles: true,\n      composed: true\n    }));\n    \n    // Also dispatch expanded/collapsed events\n    const eventType = isExpanded ? 'expanded' : 'collapsed';\n    this.dispatchEvent(new CustomEvent(eventType, {\n      bubbles: true,\n      composed: true\n    }));\n  }\n  \n  _updateAriaExpanded() {\n    if (this._headerElement) {\n      this._headerElement.setAttribute('aria-expanded', this._isExpanded.toString());\n    }\n  }\n  \n  _updateReverseHeading() {\n    const isReversed = this.hasAttribute('reverse-heading') && \n                     this.getAttribute('reverse-heading') !== 'false';\n    \n    const header = this.shadowRoot?.querySelector('.collapsible-item__header');\n    const toggle = this.shadowRoot?.querySelector('.collapsible-item__toggle-container');\n    \n    if (header && toggle) {\n      if (isReversed) {\n        header.style.flexDirection = 'row-reverse';\n        toggle.style.margin = '0 0 0 8px';\n      } else {\n        header.style.flexDirection = 'row';\n        toggle.style.margin = '0 8px 0 0';\n      }\n    }\n  }\n  \n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === 'expanded' && oldValue !== newValue) {\n      this.expanded = newValue !== null;\n      this._updateAriaExpanded();\n    } else if (name === 'reverse-heading') {\n      this._updateReverseHeading();\n    }\n  }\n}\n\n// Define the custom element\nif (!customElements.get('collapsible-item')) {\n  customElements.define('collapsible-item', CollapsibleItem);\n}\n","// Core components\nexport * from './molecules/collapsible-list/CollapsibleList.js';\nexport * from './atoms/collapsible-item/CollapsibleItem.js';\n\n// Additional components (dynamically imported when needed)\nlet additionalComponents = {};\n\n// Function to load additional components\nexport async function loadAdditionalComponents() {\n  try {\n    const selectionMenuModule = await import('./organisms/selection-menu/SelectionMenu.js');\n    additionalComponents.SelectionMenu = selectionMenuModule.default || selectionMenuModule;\n  } catch (e) {\n    console.warn('SelectionMenu component not found or failed to load', e);\n  }\n\n  try {\n    const productLayoutModule = await import('./templates/product-layout/ProductLayout.js');\n    additionalComponents.ProductLayout = productLayoutModule.default || productLayoutModule;\n  } catch (e) {\n    console.warn('ProductLayout component not found or failed to load', e);\n  }\n  \n  return additionalComponents;\n}\n\n// Export a function to get additional components\nexport function getAdditionalComponents() {\n  return additionalComponents;\n}\n","import { useEffect, useRef, forwardRef } from 'react';\nimport * as webComponents from '../../components';\n\n// Auto-generate React wrappers for all web components\nconst wrappers = {};\n\nObject.entries(webComponents).forEach(([componentName, webComponent]) => {\n  if (typeof webComponent === 'function' && webComponent.name) {\n    const ReactComponent = forwardRef(({ children, ...props }, ref) => {\n      const elementRef = useRef(null);\n      const eventHandlers = useRef({});\n\n      // Handle event listeners\n      useEffect(() => {\n        const element = elementRef.current;\n        const currentEventHandlers = {};\n\n        // Add event listeners\n        Object.entries(props).forEach(([key, value]) => {\n          if (typeof value === 'function' && key.startsWith('on')) {\n            const eventName = key.substring(2).toLowerCase();\n            const handler = (e) => {\n              // Forward the event to the React event handler\n              value(e);\n            };\n            element.addEventListener(eventName, handler);\n            currentEventHandlers[eventName] = handler;\n          }\n        });\n\n        // Store current event handlers for cleanup\n        eventHandlers.current = currentEventHandlers;\n\n        // Cleanup event listeners\n        return () => {\n          Object.entries(eventHandlers.current).forEach(([eventName, handler]) => {\n            element.removeEventListener(eventName, handler);\n          });\n        };\n      }, [props]);\n\n      // Filter out event handlers from props to avoid React warnings\n      const elementProps = Object.entries(props).reduce((acc, [key, value]) => {\n        if (!(typeof value === 'function' && key.startsWith('on'))) {\n          acc[key] = value;\n        }\n        return acc;\n      }, {});\n\n      // Forward the ref\n      useEffect(() => {\n        if (ref) {\n          if (typeof ref === 'function') {\n            ref(elementRef.current);\n          } else {\n            ref.current = elementRef.current;\n          }\n        }\n      }, [ref]);\n\n      const TagName = webComponent.is || componentName.toLowerCase();\n      \n      return (\n        <TagName ref={elementRef} {...elementProps}>\n          {children}\n        </TagName>\n      );\n    });\n\n    // Set display name for better debugging\n    ReactComponent.displayName = componentName;\n    wrappers[componentName] = ReactComponent;\n  }\n});\n\nexport default wrappers;\n","import * as webComponents from '../../components';\n\nconst VuePlugin = {\n  install(app) {\n    // Register all web components as Vue components\n    Object.entries(webComponents).forEach(([componentName, webComponent]) => {\n      if (typeof webComponent === 'function' && webComponent.name) {\n        const tagName = webComponent.is || componentName.toLowerCase();\n        \n        // Create a Vue component definition\n        const vueComponent = {\n          name: componentName,\n          inheritAttrs: false,\n          emits: [], // Will be populated with event names\n          props: {},\n          render() {\n            // Convert kebab-case attributes to camelCase for web components\n            const attrs = Object.entries(this.$attrs).reduce((acc, [key, value]) => {\n              // Convert kebab-case to camelCase for props\n              const camelKey = key.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n              acc[camelKey] = value;\n              return acc;\n            }, {});\n\n            // Add event listeners\n            const on = {};\n            Object.keys(this.$listeners).forEach((event) => {\n              on[event] = this.$listeners[event];\n            });\n\n            return this.$createElement(\n              tagName,\n              {\n                attrs,\n                on,\n                ref: 'webComponent',\n              },\n              this.$slots.default\n            );\n          },\n        };\n\n        // Register the component globally\n        app.component(componentName, vueComponent);\n      }\n    });\n  },\n};\n\nexport default VuePlugin;\n","// Core web components\nexport * from './components';\n\n// Additional components that need to be loaded asynchronously\nimport { loadAdditionalComponents, getAdditionalComponents } from './components';\n\n// Export React wrappers\nexport { default as ReactWrappers } from './wrappers/react/index.jsx';\n\n// Export Vue plugin\nexport { default as VuePlugin } from './wrappers/vue';\n\n// Export component loader\nexport const Components = {\n  // Core components are already available via default export\n  ...getAdditionalComponents(),\n  \n  // Method to load additional components\n  async load() {\n    await loadAdditionalComponents();\n    Object.assign(this, getAdditionalComponents());\n    return this;\n  }\n};\n\n// Auto-load additional components in browser environment\nif (typeof window !== 'undefined') {\n  Components.load().catch(console.error);\n}\n"],"names":["items","lists"],"mappings":"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"}