{"version":3,"file":"index.umd.js","sources":["../../src/components/molecules/collapsible-list/CollapsibleList.js","../../src/components/atoms/icon-label/IconLabel.js","../../src/components/molecules/collapsible-item/CollapsibleItem.js","../../src/components/index.js","../../src/components/organisms/selection-menu/SelectionMenu.js","../../src/components/organisms/image-collection/ImageCollection.js","../../src/init.js","../../src/wrappers/vue/index.js","../../src/components/templates/product-layout/ProductLayout.js"],"sourcesContent":["/**\r\n * CollapsibleList Component\r\n * A custom element that creates a collapsible list container\r\n */\r\n\r\nexport class CollapsibleList extends HTMLElement {\r\n  static get observedAttributes() {\r\n    return ['reverse-heading', 'single-item', 'accordion'];\r\n  }\r\n  \r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this._isUpdating = false; // Track if we're currently updating to prevent reentrant calls\r\n    this._handleItemToggle = this._handleItemToggle.bind(this);\r\n    \r\n    const container = document.createElement('div');\r\n    const slot = document.createElement('slot');\r\n    \r\n    // Create styles for the component\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n        width: 100%;\r\n        --indent-size: 1.5rem;\r\n      }\r\n      \r\n      ::slotted(collapsible-item) {\r\n        display: block;\r\n        margin: 0.25rem 0;\r\n        padding: 0;\r\n        width: 100%;\r\n      }\r\n      \r\n      /* Nested lists should have a border */\r\n      ::slotted(collapsible-list) {\r\n        border-left: 1px solid #e0e0e0;\r\n        margin-left: 0.5rem;\r\n        padding-left: 0.5rem;\r\n      }\r\n      \r\n      /* Style for the header in collapsible items */\r\n      .collapsible-item__header {\r\n        display: flex;\r\n        align-items: center;\r\n        width: 100%;\r\n        flex-direction: row;\r\n      }\r\n      \r\n      /* Toggle container styles */\r\n      .collapsible-item__toggle-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: var(--toggle-size, 24px);\r\n        height: var(--toggle-size, 24px);\r\n        margin: var(--toggle-margin, 0 8px 0 0);\r\n        flex-shrink: 0;\r\n      }`;\r\n    \r\n    container.appendChild(slot);\r\n    this.shadowRoot.append(style, container);\r\n  }\r\n  \r\n  async connectedCallback() {\r\n    if (!this._initialized) {\r\n      this._initializeComponent();\r\n      this._initialized = true;\r\n      \r\n      // Set initial reverse heading state\r\n      await this._updateReverseHeading();\r\n      \r\n      // Set up event listeners for accordion behavior\r\n      this.addEventListener('toggle', this._handleItemToggle);\r\n      \r\n      // Ensure at least one item is expanded in accordion mode\r\n      if (this.hasAttribute('accordion')) {\r\n        this._ensureOneItemExpanded();\r\n      }\r\n    }\r\n    \r\n    // Set up mutation observer for dynamic content\r\n    this._setupMutationObserver();\r\n  }\r\n  \r\n  _initializeComponent() {\r\n    if (!this.hasAttribute('role')) {\r\n      this.setAttribute('role', 'list');\r\n    }\r\n    \r\n    if (!this.hasAttribute('aria-label') && !this.hasAttribute('aria-labelledby')) {\r\n      console.warn('collapsible-list: Add an aria-label or aria-labelledby attribute for accessibility');\r\n    }\r\n  }\r\n  \r\n  _setupMutationObserver() {\r\n    // Set up a mutation observer to handle dynamically added items and attribute changes\r\n    this._observer = new MutationObserver(async (mutations) => {\r\n      let shouldUpdate = false;\r\n      \r\n      for (const mutation of mutations) {\r\n        if (mutation.type === 'attributes' && mutation.attributeName === 'reverse-heading') {\r\n          shouldUpdate = true;\r\n          break;\r\n        } else if (mutation.type === 'childList') {\r\n          // Check if any added nodes are collapsible items or lists\r\n          for (const node of mutation.addedNodes) {\r\n            if (node.nodeType === Node.ELEMENT_NODE && \r\n                (node.matches('collapsible-item') || node.matches('collapsible-list'))) {\r\n              shouldUpdate = true;\r\n              break;\r\n            }\r\n          }\r\n          if (shouldUpdate) break;\r\n        }\r\n      }\r\n      \r\n      if (shouldUpdate) {\r\n        await this._updateReverseHeading();\r\n      }\r\n    });\r\n    \r\n    // Start observing the component for attribute changes and child list changes\r\n    this._observer.observe(this, {\r\n      attributes: true,\r\n      attributeFilter: ['reverse-heading'],\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Updates the reverse heading state for all child collapsible items\r\n   * @private\r\n   */\r\n  async _updateReverseHeading() {\r\n    // Prevent reentrant calls\r\n    if (this._isUpdating) return;\r\n    this._isUpdating = true;\r\n    \r\n    try {\r\n      const isReversed = this.hasAttribute('reverse-heading') && \r\n                       this.getAttribute('reverse-heading') !== 'false';\r\n      \r\n      // Temporarily disconnect observer to prevent infinite loop\r\n      if (this._observer) {\r\n        this._observer.disconnect();\r\n      }\r\n      \r\n      // Process direct child collapsible-items\r\n      const processItems = async (items) => {\r\n        for (const item of items) {\r\n          // Set the attribute on the item\r\n          if (isReversed) {\r\n            item.setAttribute('reverse-heading', '');\r\n          } else {\r\n            item.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any nested items in this item (only direct children)\r\n          const nestedItems = item.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any nested lists in this item (only direct children)\r\n          const nestedLists = item.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Process nested collapsible-lists\r\n      const processLists = async (lists) => {\r\n        for (const list of lists) {\r\n          // Skip if this is the current list to prevent cycles\r\n          if (list === this) continue;\r\n          \r\n          // Set the attribute on the list\r\n          if (isReversed) {\r\n            list.setAttribute('reverse-heading', '');\r\n          } else {\r\n            list.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any direct child items in this list\r\n          const nestedItems = list.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any direct child lists\r\n          const nestedLists = list.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Start processing from the current element\r\n      const items = this.querySelectorAll(':scope > collapsible-item');\r\n      if (items.length > 0) {\r\n        await processItems(Array.from(items));\r\n      }\r\n      \r\n      const lists = this.querySelectorAll(':scope > collapsible-list');\r\n      if (lists.length > 0) {\r\n        await processLists(Array.from(lists));\r\n      }\r\n      \r\n      // Force a reflow to ensure all attribute changes are applied\r\n      if (this.shadowRoot) {\r\n        this.shadowRoot.offsetHeight; // This forces a reflow\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating reverse heading:', error);\r\n    } finally {\r\n      // Reconnect observer if it exists\r\n      if (this._observer) {\r\n        this._observer.observe(this, {\r\n          attributes: true,\r\n          attributeFilter: ['reverse-heading'],\r\n          childList: true,\r\n          subtree: true\r\n        });\r\n      }\r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n\r\n  _handleItemToggle(e) {\r\n    if (this._isUpdating) return;\r\n    \r\n    const target = e.target;\r\n    \r\n    // Only process if this is a direct child\r\n    if (target.parentElement === this) {\r\n      this._isUpdating = true;\r\n      \r\n      if (this.hasAttribute('accordion')) {\r\n        // In accordion mode, close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      } else if (this.hasAttribute('single-item')) {\r\n        // In single-item mode, just close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      }\r\n      \r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n  \r\n  _closeOtherItems(exceptItem) {\r\n    // Don't close items if inside an image-collection\r\n    if (this.closest('image-collection')) {\r\n      return;\r\n    }\r\n    \r\n    const items = this.querySelectorAll('collapsible-item');\r\n    items.forEach(item => {\r\n      if (item !== exceptItem) {\r\n        item.expanded = false;\r\n      }\r\n    });\r\n  }\r\n  \r\n  _getOpenItems() {\r\n    return Array.from(this.querySelectorAll('collapsible-item[expanded]'));\r\n  }\r\n  \r\n  _ensureOneItemExpanded() {\r\n    if (!this.hasAttribute('accordion')) return;\r\n    \r\n    const openItems = this._getOpenItems();\r\n    if (openItems.length === 0) {\r\n      // If no items are open, open the first one\r\n      const firstItem = this.querySelector('collapsible-item');\r\n      if (firstItem) {\r\n        firstItem.setAttribute('expanded', '');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Define the custom element\r\nif (!customElements.get('collapsible-list')) {\r\n  customElements.define('collapsible-list', CollapsibleList);\r\n}\r\n","/**\n * IconLabel Component\n * A simple component that displays an icon next to a label\n */\n\nexport class IconLabel extends HTMLElement {\n  static get observedAttributes() {\n    return ['icon', 'label', 'reverse'];\n  }\n\n  constructor() {\n    super();\n    this._icon = '';\n    this._label = '';\n    this._reverse = false;\n  }\n\n  connectedCallback() {\n    this._render();\n  }\n\n  get icon() {\n    return this._icon;\n  }\n\n  set icon(value) {\n    this._icon = value || '';\n    this._render();\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  set label(value) {\n    this._label = value || '';\n    this._render();\n  }\n\n  get reverse() {\n    return this._reverse;\n  }\n\n  set reverse(value) {\n    this._reverse = value !== null && value !== 'false';\n    this._render();\n  }\n\n  _render() {\n    // Create container\n    const container = document.createElement('span');\n    container.style.display = 'inline-flex';\n    container.style.alignItems = 'center';\n    container.style.gap = '0.5rem';\n    container.style.fontFamily = 'inherit';\n    container.style.color = 'currentColor';\n    \n    if (this._reverse) {\n      container.style.flexDirection = 'row-reverse';\n    }\n\n    // Create icon element if icon is provided\n    if (this._icon) {\n      const isImage = this._icon.startsWith('data:') || \n                     this._icon.startsWith('http') || \n                     this._icon.startsWith('/') ||\n                     /\\.(png|jpg|jpeg|svg|gif|webp)(\\?.*)?$/i.test(this._icon);\n      \n      const icon = isImage ? document.createElement('img') : document.createElement('span');\n      icon.style.display = 'inline-flex';\n      icon.style.alignItems = 'center';\n      icon.style.justifyContent = 'center';\n      icon.style.width = '1em';\n      icon.style.height = '1em';\n\n      if (isImage) {\n        icon.src = this._icon;\n        icon.alt = '';\n        icon.loading = 'lazy';\n        icon.style.objectFit = 'contain';\n      } else {\n        icon.textContent = this._icon;\n        icon.style.fontSize = '1em';\n        icon.style.lineHeight = '1';\n      }\n      \n      container.appendChild(icon);\n    }\n\n    // Add label if provided\n    if (this._label) {\n      const label = document.createElement('span');\n      label.textContent = this._label;\n      container.appendChild(label);\n    }\n\n    // Update the component\n    this.innerHTML = '';\n    this.appendChild(container);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    \n    if (name === 'icon') {\n      this._icon = newValue || '';\n    } else if (name === 'label') {\n      this._label = newValue || '';\n    } else if (name === 'reverse') {\n      this._reverse = newValue !== null && newValue !== 'false';\n    }\n    \n    this._render();\n  }\n}\n\n// Define the custom element\nif (!customElements.get('icon-label')) {\n  customElements.define('icon-label', IconLabel);\n}\n","/**\n * CollapsibleItem Component\n * A custom element that creates a collapsible list item\n * \n * @attr {boolean} expanded - Whether the item is expanded or collapsed\n * @attr {string} icon - Optional icon to display next to the label\n * @attr {string} label - The text label for the collapsible item\n * @attr {boolean} removeshift - If true, removes the left padding from the content area\n */\n\nimport { IconLabel } from '../../atoms/icon-label/IconLabel.js';\n\n// Import regular CSS\nimport './CollapsibleItem.css';\n\nexport class CollapsibleItem extends HTMLLIElement {\n    static get observedAttributes() {\n        return ['expanded', 'icon', 'label', 'removeshift', 'hide-icon'];\n    }\n    \n    constructor() {\n        super();\n        this._isExpanded = false;\n        this._handleClick = this._handleClick.bind(this);\n        this._header = null;\n        this._content = null;\n        this._initialRender = true;\n        this._removeShift = false;\n        this.rendered = false;\n        \n        // Add base class to the host element\n        this.classList.add('collapsible-item');\n        \n        // Initialize expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        }\n        \n        // Initialize no-padding state\n        if (this.hasAttribute('removeshift')) {\n            this.classList.add('collapsible-item--no-padding');\n        }\n    }\n\n    connectedCallback() {\n        // Ensure the component has the correct role for accessibility\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'listitem');\n        }\n        \n        // Set up the component if not already rendered\n        if (!this.rendered) {\n            this._render();\n            this.rendered = true;\n            this._addEventListeners();\n            \n            // Ensure the content visibility is set correctly based on the expanded state\n            this._updateContentVisibility();\n        }\n        \n        // Ensure the component is properly styled\n        this.classList.add('collapsible-item');\n        \n        // Set initial expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        } else {\n            this._isExpanded = false;\n            this.classList.remove('collapsible-item--expanded');\n        }\n    }\n    \n    disconnectedCallback() {\n        this._removeEventListeners();\n    }\n    \n    _addEventListeners() {\n        // Add click listener to the component itself for event delegation\n        this.addEventListener('click', this._handleClick);\n    }\n    \n    _removeEventListeners() {\n        this.removeEventListener('click', this._handleClick);\n    }\n    \n    _handleClick(event) {\n        // Find the closest header from the click target\n        const header = event.target.closest('.collapsible-item__header');\n        if (!header) return; // Not a header click\n        \n        // Prevent the default action to avoid any native behavior\n        event.preventDefault();\n        event.stopPropagation();\n        \n        // Toggle the expanded state\n        const isExpanding = !this.hasAttribute('expanded');\n        \n        // Update the expanded attribute\n        if (isExpanding) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the internal state and UI\n        this._isExpanded = isExpanding;\n        this._updateContentVisibility();\n        \n        // Dispatch a custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: isExpanding },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _createHeader() {\n        const header = document.createElement('div');\n        header.className = 'collapsible-item__header';\n        \n        // Create a container for the icon and label\n        const contentWrapper = document.createElement('div');\n        contentWrapper.style.display = 'flex';\n        contentWrapper.style.alignItems = 'center';\n        contentWrapper.style.flex = '1';\n        \n        // Add icon if provided and not hidden\n        const hideIcon = this.hasAttribute('hide-icon');\n        const icon = this.getAttribute('icon');\n        if (icon && !hideIcon) {\n            const iconEl = document.createElement('span');\n            iconEl.className = 'collapsible-item__icon';\n            iconEl.textContent = icon;\n            iconEl.style.marginRight = '0.5rem';\n            contentWrapper.appendChild(iconEl);\n        }\n        \n        // Add label\n        const label = this.getAttribute('label') || '';\n        if (label) {\n            const labelEl = document.createElement('span');\n            labelEl.className = 'collapsible-item__label';\n            labelEl.textContent = label;\n            contentWrapper.appendChild(labelEl);\n        }\n        \n        // Add the content wrapper to the header\n        header.appendChild(contentWrapper);\n                \n        return header;\n    }\n    \n    _render() {\n        // Prevent re-entrancy during rendering\n        if (!this._isRendering) {\n            this._isRendering = true;\n            \n            // Store any existing content that should be preserved\n            const existingContent = [];\n            Array.from(this.children).forEach(child => {\n                if (child !== this._header && child !== this._content) {\n                    existingContent.push(child);\n                }\n            });\n            \n            // Clear existing content\n            while (this.firstChild) {\n                this.removeChild(this.firstChild);\n            }\n            \n            // Create and append header\n            this._header = this._createHeader();\n            this.appendChild(this._header);\n            \n            // Set header attributes for accessibility\n            if (this._header) {\n                this._header.setAttribute('role', 'button');\n                this._header.setAttribute('aria-expanded', this._isExpanded ? 'true' : 'false');\n                this._header.setAttribute('tabindex', '0');\n                \n                // Add keyboard support\n                this._header.addEventListener('keydown', (e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        this._toggleExpanded();\n                    }\n                });\n            }\n            \n            // Create and append content container\n            this._content = this._createContent();\n            if (this._content) {\n                this.appendChild(this._content);\n                \n                // Add back any existing content to the content container\n                existingContent.forEach(child => {\n                    this._content.appendChild(child);\n                });\n            }\n            \n            // Ensure proper ARIA attributes for accessibility\n            this.setAttribute('role', 'listitem');\n            \n            // Set initial content visibility\n            this._updateContentVisibility();\n            \n            // Mark as rendered\n            this.rendered = true;\n            this._isRendering = false;\n        }\n    }\n    \n    _createContent() {\n        const content = document.createElement('div');\n        content.className = 'collapsible-item__content';\n        \n        // Filter out any header elements and their content\n        const headerElements = this.querySelectorAll('.collapsible-item__header, .collapsible-item__label, .collapsible-item__icon');\n        const headerElementSet = new Set(headerElements);\n        \n        // Process direct children that are not part of the header\n        const filteredChildren = Array.from(this.childNodes).filter(node => {\n            // Keep only element nodes that are not in the header\n            if (node.nodeType === Node.ELEMENT_NODE) {\n                return !headerElementSet.has(node) && !node.closest('.collapsible-item__header');\n            }\n            // Keep text nodes that are not just whitespace\n            if (node.nodeType === Node.TEXT_NODE) {\n                return node.textContent.trim() !== '' && \n                       !node.textContent.includes('▶') && \n                       !node.textContent.includes('▼');\n            }\n            return false;\n        });\n        \n        // Add the filtered children to the content\n        filteredChildren.forEach(child => {\n            content.appendChild(child.cloneNode(true));\n        });\n        \n        return content;\n    }\n    \n    get expanded() {\n        return this._isExpanded;\n    }\n    \n    set expanded(value) {\n        if (this._isExpanded === value) return; // No change needed\n        \n        this._isExpanded = value;\n        \n        // Update the attribute to reflect the state in the DOM\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the content visibility immediately\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _toggleExpanded() {\n        this._isExpanded = !this._isExpanded;\n        \n        // Update the expanded attribute\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the UI\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _updateContentVisibility() {\n        if (!this._content || !this._header) return;\n        \n        const hideIcon = this.hasAttribute('hide-icon');\n        \n        if (this._isExpanded) {\n            this._content.classList.add('collapsible-item__content--expanded');\n            this._content.style.display = 'block';\n            this._header.setAttribute('aria-expanded', 'true');\n            this.classList.add('collapsible-item--expanded');\n            // Update icon to expanded state (down arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▼');\n            }\n        } else {\n            this._content.classList.remove('collapsible-item__content--expanded');\n            this._content.style.display = 'none';\n            this._header.setAttribute('aria-expanded', 'false');\n            this.classList.remove('collapsible-item--expanded');\n            // Update icon to collapsed state (right arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▶');\n            }\n        }\n    }\n    \n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'removeshift') {\n            this._removeShift = newValue !== null;\n            if (this._removeShift) {\n                this.classList.add('collapsible-item--no-padding');\n            } else {\n                this.classList.remove('collapsible-item--no-padding');\n            }\n        } else if (name === 'hide-icon' && this._header) {\n            // Handle hide-icon attribute changes\n            const iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue !== null) {\n                // hide-icon is set, remove the icon if it exists\n                if (iconEl) {\n                    iconEl.remove();\n                }\n            } else if (this.hasAttribute('icon')) {\n                // hide-icon is removed, add the icon back if we have an icon attribute\n                if (!iconEl) {\n                    const icon = this.getAttribute('icon');\n                    const newIconEl = document.createElement('span');\n                    newIconEl.className = 'collapsible-item__icon';\n                    newIconEl.textContent = icon;\n                    newIconEl.style.marginRight = '0.5rem';\n                    const contentWrapper = this._header.firstElementChild;\n                    if (contentWrapper) {\n                        contentWrapper.insertBefore(newIconEl, contentWrapper.firstChild);\n                    }\n                }\n            }\n        } else if (name === 'expanded') {\n            const wasExpanded = this._isExpanded;\n            this._isExpanded = newValue !== null;\n            \n            // Only update if the state actually changed\n            if (this._isExpanded !== wasExpanded) {\n                this._updateContentVisibility();\n            }\n        } else if (name === 'icon' && this._header) {\n            // Update the icon if it exists, or create it if it doesn't\n            let iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue) {\n                if (!iconEl) {\n                    iconEl = document.createElement('span');\n                    iconEl.className = 'collapsible-item__icon';\n                    this._header.insertBefore(iconEl, this._header.firstChild);\n                }\n                iconEl.textContent = newValue;\n            } else if (iconEl) {\n                this._header.removeChild(iconEl);\n            }\n        } else if (name === 'label' && this._header) {\n            // Update the label if it exists, or create it if it doesn't\n            let labelEl = this._header.querySelector('.collapsible-item__label');\n            if (labelEl) {\n                labelEl.textContent = newValue || '';\n            } else if (newValue) {\n                labelEl = document.createElement('span');\n                labelEl.className = 'collapsible-item__label';\n                labelEl.textContent = newValue;\n                this._header.appendChild(labelEl);\n            }\n        }\n    }\n}\n\n// Define the custom element with the correct name\nconst elementName = 'collapsible-item';\n\n// Check if the element is already defined and undefine it if necessary\nif (typeof window !== 'undefined' && window.customElements) {\n    // First, try to undefine the element if it exists\n    if (window.customElements.get(elementName)) {\n        const oldElement = window.customElements.get(elementName);\n        delete window.customElements._elements[elementName];\n    }\n    \n    // Define the element with the proper configuration\n    window.customElements.define(elementName, CollapsibleItem, { extends: 'li' });\n}","// Core components\nexport * from './molecules/collapsible-list/CollapsibleList.js';\nexport * from './molecules/collapsible-item/CollapsibleItem.js';\n\n// Additional components (dynamically imported when needed)\nlet additionalComponents = {};\n\n// Function to load additional components\nexport async function loadAdditionalComponents() {\n  try {\n    const selectionMenuModule = await import('./organisms/selection-menu/SelectionMenu.js');\n    additionalComponents.SelectionMenu = selectionMenuModule.default || selectionMenuModule;\n  } catch (e) {\n    console.warn('SelectionMenu component not found or failed to load', e);\n  }\n\n  try {\n    const productLayoutModule = await import('./templates/product-layout/ProductLayout.js');\n    additionalComponents.ProductLayout = productLayoutModule.default || productLayoutModule;\n  } catch (e) {\n    console.warn('ProductLayout component not found or failed to load', e);\n  }\n  \n  return additionalComponents;\n}\n\n// Export a function to get additional components\nexport function getAdditionalComponents() {\n  return additionalComponents;\n}\n","/**\n * SelectionMenu Component\n * A collapsible menu that allows selection of leaf nodes using CollapsibleItem\n * \n * @fires item-selected - Dispatched when a leaf node is selected\n * @property {string} items - JSON string representing the menu items structure\n * @property {string} selected - ID of the currently selected item\n */\n\nexport class SelectionMenu extends HTMLElement {\n  static get observedAttributes() {\n    return ['items', 'selected'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._items = [];\n    this._selectedId = null;\n    this._boundOnItemClick = this._onItemClick.bind(this);\n    \n    // Import the CollapsibleItem component\n    import('../../molecules/collapsible-item/CollapsibleItem.js');\n  }\n\n  connectedCallback() {\n    this._render();\n  }\n\n  disconnectedCallback() {\n    this._removeEventListeners();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'items':\n        this._items = newValue ? JSON.parse(newValue) : [];\n        this._render();\n        break;\n      case 'selected':\n        this._selectedId = newValue;\n        this._updateSelectedState();\n        break;\n    }\n  }\n\n  get items() {\n    return JSON.stringify(this._items);\n  }\n\n  set items(value) {\n    this._items = value ? JSON.parse(value) : [];\n    this._render();\n  }\n\n  get selected() {\n    return this._selectedId;\n  }\n\n  set selected(value) {\n    if (this._selectedId !== value) {\n      this._selectedId = value;\n      this._updateSelectedState();\n    }\n  }\n\n  _render() {\n    if (!this.shadowRoot) return;\n    \n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          --primary-color: #4a6cf7;\n          --hover-bg: #f5f8ff;\n          --selected-bg: #e6f0ff;\n          --border-color: #e2e8f0;\n          --text-color: #2d3748;\n          --text-secondary: #4a5568;\n        }\n        \n        .menu-container {\n          border: 1px solid var(--border-color);\n          border-radius: 6px;\n          overflow: hidden;\n        }\n        \n        .menu-item {\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          margin: 2px 0;\n          border-radius: 4px;\n        }\n        \n        .menu-item:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        .menu-item--selected:hover {\n          background-color: var(--selected-bg, #e6f0ff);\n        }\n        \n        /* Style for the collapsible item header */\n        .menu-item::part(header) {\n          padding: 8px 12px;\n          display: flex;\n          align-items: center;\n        }\n        \n        /* Style for the collapsible item content */\n        .menu-item::part(content) {\n          padding: 0;\n          overflow: hidden;\n          transition: max-height 0.3s ease, opacity 0.2s ease;\n          max-height: 0;\n          opacity: 0;\n          margin: 0;\n        }\n        \n        .menu-item::part(content).menu-item__content--expanded {\n          max-height: 1000px; /* Adjust based on your needs */\n          opacity: 1;\n          padding: 4px 0 4px 1rem;\n        }\n        \n        .menu-item__child-list {\n          list-style: none;\n          padding: 0;\n          margin: 0 0 0 1rem;\n        }\n        \n        /* Remove bullets from ul elements */\n        ul {\n          list-style-type: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Ensure list items have no default styling */\n        li {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Leaf item styles */\n        .menu-item__leaf {\n          display: flex;\n          align-items: center;\n          padding: 4px 12px;\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          border-radius: 4px;\n        }\n        \n        .menu-item__leaf:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item__leaf.menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        /* Arrow icon for collapsible items */\n        .menu-item__arrow {\n          display: inline-block;\n          width: 12px;\n          text-align: center;\n          transition: transform 0.2s ease;\n        }\n        \n        .menu-item[expanded] .menu-item__arrow {\n          transform: rotate(90deg);\n        }\n      </style>\n      <div class=\"menu-container\">\n        ${this._renderItems(this._items, 0)}\n      </div>\n    `;\n    \n    this._addEventListeners();\n  }\n  \n  _renderItems(items, level = 0) {\n    if (!items || !items.length) return '';\n    \n    // Create a container for the list\n    const listContainer = document.createElement('ul');\n    listContainer.style.listStyle = 'none';\n    listContainer.style.padding = '0';\n    listContainer.style.margin = '0';\n    \n    items.forEach(item => {\n      const hasChildren = item.children && item.children.length > 0;\n      const isSelected = this._selectedId === item.id;\n      \n      // Create list item\n      const li = document.createElement('li');\n      li.setAttribute('data-id', item.id);\n      \n      if (hasChildren) {\n        // For items with children, use collapsible-item\n        li.setAttribute('is', 'collapsible-item');\n        li.setAttribute('data-id', item.id);\n        li.setAttribute('label', item.name);\n        \n        // Determine initial state\n        const hasSelectedDescendant = this._hasSelectedDescendant(item);\n        const isExpanded = hasSelectedDescendant || isSelected;\n        \n        // Set initial expanded state\n        if (isExpanded) {\n          li.setAttribute('expanded', '');\n        }\n        \n        // Set the arrow icon using the icon attribute\n        li.setAttribute('icon', isExpanded ? '▼' : '▶');\n        li.style.marginRight = '8px';\n        li.style.transition = 'transform 0.2s ease';\n        \n        if (isSelected) {\n          li.classList.add('menu-item--selected');\n        }\n        \n        // Create and append child list\n        const childList = document.createElement('ul');\n        childList.className = 'menu-item__child-list';\n        childList.innerHTML = this._renderItems(item.children, level + 1);\n        \n        // Create content container with proper styling\n        const contentSlot = document.createElement('div');\n        contentSlot.slot = 'content';\n        contentSlot.className = 'menu-item__content';\n        \n        // Add the child list to the content slot\n        contentSlot.appendChild(childList);\n        \n        // Add the content slot to the collapsible item\n        li.appendChild(contentSlot);\n        \n        // Handle the toggle event to update the content visibility\n        li.addEventListener('toggle', (e) => {\n          contentSlot.style.display = e.detail.expanded ? 'block' : 'none';\n        });\n      } else {\n        // For leaf nodes, just use a span\n        const span = document.createElement('span');\n        span.className = 'menu-item__leaf';\n        if (isSelected) span.classList.add('menu-item--selected');\n        \n      \n        \n        // Add label\n        const label = document.createElement('span');\n        label.className = 'menu-item__label';\n        label.textContent = item.name;\n        span.appendChild(label);\n        \n        // Add click handler for selection\n        span.addEventListener('click', (e) => {\n          e.stopPropagation();\n          this._selectedId = item.id;\n          this._updateSelectedState();\n          this.dispatchEvent(new CustomEvent('item-selected', {\n            detail: {\n              id: item.id,\n              item: item,\n              name: item.name\n            },\n            bubbles: true,\n            composed: true\n          }));\n        });\n        \n        li.appendChild(span);\n      }\n      \n      listContainer.appendChild(li);\n    });\n    \n    return level === 0 ? listContainer.outerHTML : listContainer.innerHTML;\n  }\n  \n  _addEventListeners() {\n    this.shadowRoot.addEventListener('click', this._boundOnItemClick);\n  }\n  \n  _removeEventListeners() {\n    this.shadowRoot.removeEventListener('click', this._boundOnItemClick);\n  }\n  \n  _onItemClick(event) {\n    // Handle leaf node clicks\n    const leafNode = event.target.closest('.menu-item__leaf');\n    if (leafNode) {\n      event.stopPropagation();\n      const itemId = leafNode.getAttribute('data-id');\n      if (itemId) {\n        this.selected = itemId;\n        this._updateSelectedState();\n        this.dispatchEvent(new CustomEvent('item-selected', {\n          detail: { id: itemId },\n          bubbles: true,\n          composed: true\n        }));\n      }\n      return;\n    }\n    \n    // Handle collapsible item clicks\n    const header = event.target.closest('.collapsible-item__header');\n    if (!header) return;\n    \n    const itemElement = header.parentElement;\n    if (itemElement && itemElement.getAttribute('is') === 'collapsible-item') {\n      event.stopPropagation();\n      \n      // Toggle the expanded state\n      const isExpanded = itemElement.hasAttribute('expanded');\n      const arrowIcon = itemElement.querySelector('.menu-item__arrow');\n      \n      if (isExpanded) {\n        itemElement.removeAttribute('expanded');\n        if (arrowIcon) arrowIcon.textContent = '▶';\n      } else {\n        itemElement.setAttribute('expanded', '');\n        if (arrowIcon) arrowIcon.textContent = '▼';\n      }\n      \n      // Dispatch a custom event for the toggle action\n      itemElement.dispatchEvent(new CustomEvent('toggle', {\n        detail: { expanded: !isExpanded },\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n  \n  _updateSelectedState() {\n    if (!this.shadowRoot) return;\n    \n    // Remove selected class from all items\n    const allCollapsibleItems = this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]');\n    const allLeafItems = this.shadowRoot.querySelectorAll('.menu-item__leaf');\n    \n    allCollapsibleItems.forEach(item => {\n      item.classList.remove('menu-item--selected');\n      item.removeAttribute('selected');\n    });\n    \n    allLeafItems.forEach(leaf => {\n      leaf.classList.remove('menu-item--selected');\n    });\n    \n    // Add selected class to the selected item\n    if (this._selectedId) {\n      \n      // Check collapsible items\n      const selectedCollapsibleItem = this.shadowRoot.querySelector(`li[is=\"collapsible-item\"][data-id=\"${this._selectedId}\"]`);\n      if (selectedCollapsibleItem) {\n        selectedCollapsibleItem.classList.add('menu-item--selected');\n        selectedCollapsibleItem.setAttribute('selected', '');\n      }\n      \n      // Check leaf items\n      const selectedLeafItem = this.shadowRoot.querySelector(`li[data-id=\"${this._selectedId}\"] .menu-item__leaf`);\n      if (selectedLeafItem) {\n        selectedLeafItem.classList.add('menu-item--selected');\n      }\n      \n      // If we didn't find the item, it might be because it's in a closed collapsible item\n      if (!selectedCollapsibleItem && !selectedLeafItem) {\n        console.warn('Could not find selected item in the DOM. It might be in a closed collapsible section.');\n      }\n    }\n  }\n  \n  _hasSelectedDescendant(item) {\n    if (!item) return false;\n    \n    // Check if this item is selected\n    if (item.id === this._selectedId) return true;\n    \n    // Check if any child is selected\n    if (item.children) {\n      return item.children.some(child => this._hasSelectedDescendant(child));\n    }\n    \n    return false;\n  }\n  \n  _findItemById(items, id) {\n    if (!items || !items.length) return null;\n    \n    for (const item of items) {\n      if (item.id === id) return item;\n      if (item.children) {\n        const found = this._findItemById(item.children, id);\n        if (found) return found;\n      }\n    }\n    return null;\n  }\n}\n\n// Define the custom element\nif (!customElements.get('selection-menu')) {\n  customElements.define('selection-menu', SelectionMenu);\n}","import { CollapsibleItem } from '../../molecules/collapsible-item/CollapsibleItem.js';\n\nexport class ImageCollection extends HTMLElement {\n    static get observedAttributes() {\n        return ['images'];\n    }\n\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this._images = [];\n        this._handleToggle = this._handleToggle.bind(this);\n        this._currentOpenIndex = 0;\n    }\n\n    get images() {\n        return this._images;\n    }\n\n    set images(value) {\n        if (Array.isArray(value)) {\n            this._images = value;\n            this.render();\n        } else if (typeof value === 'string') {\n            try {\n                this._images = JSON.parse(value);\n                this.render();\n            } catch (e) {\n            }\n        }\n    }\n\n    connectedCallback() {\n        this.render();\n        this.shadowRoot.addEventListener('toggle', this._handleToggle);\n    }\n\n    disconnectedCallback() {\n        this.shadowRoot.removeEventListener('toggle', this._handleToggle);\n    }\n\n    _handleToggle(event) {\n        // Prevent event from bubbling up\n        event.stopPropagation();\n        \n        // Prevent reentrant calls\n        if (this._isHandlingToggle) return;\n        this._isHandlingToggle = true;\n        \n        let index = -1;\n        let wasExpanded = false;\n        \n        try {\n            \n            // Find the clicked collapsible item by traversing up the composed path\n            const target = event.composedPath().find(\n                node => node.nodeType === Node.ELEMENT_NODE && \n                       node.getAttribute && \n                       node.getAttribute('is') === 'collapsible-item'\n            );\n            \n            if (!target) {\n                return;\n            }\n\n            // Get all collapsible items\n            const allItems = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n            index = allItems.indexOf(target);\n            \n            if (index === -1) {\n                return;\n            }\n            \n            // Prevent toggling if this item is already open\n            if (index === this._currentOpenIndex) {\n                return;\n            }\n            \n            wasExpanded = target.expanded;\n            \n            // Update all items\n            \n            // First, close all items except the target\n            allItems.forEach((item, i) => {\n                if (i !== index && item.expanded) {\n                    item.expanded = false;\n                }\n            });\n            \n            // Then toggle the target item if needed\n            if (index === this._currentOpenIndex) {\n                // Clicked the currently open item - close it\n                target.expanded = false;\n                this._currentOpenIndex = -1;\n            } else {\n                // Open the clicked item\n                target.expanded = true;\n                this._currentOpenIndex = index;\n            }\n        } finally {\n            // Always clear the flag, even if an error occurred\n            this._isHandlingToggle = false;\n        }\n        \n        // Dispatch our custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { \n                index,\n                expanded: !wasExpanded,\n                source: 'image-collection'\n            },\n            bubbles: true,\n            composed: true\n        }));\n    }\n\n    \n    _onItemToggle(event) {\n        // Stop propagation to prevent double-handling\n        event.stopPropagation();\n        \n        const targetItem = event.target.closest('li[is=\"collapsible-item\"]');\n        if (!targetItem) return;\n\n        const items = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n        const index = items.indexOf(targetItem);\n        \n        if (index === -1) return;\n\n        // If the clicked item is being closed, just update our state\n        if (!event.detail.expanded) {\n            if (this._currentOpenIndex === index) {\n                this._currentOpenIndex = -1;\n            }\n            return;\n        }\n\n        // Close the previously open item if it's different from the clicked one\n        if (this._currentOpenIndex !== -1 && this._currentOpenIndex !== index) {\n            const previousItem = items[this._currentOpenIndex];\n            if (previousItem) {\n                previousItem.toggle(false);\n            }\n        }\n        \n        this._currentOpenIndex = index;\n    }\n\n    render() {\n        if (!this.shadowRoot) return;\n        \n        // Only expand the first item if no item is currently expanded\n        if (this._currentOpenIndex === -1 && this._images.length > 0) {\n            this._currentOpenIndex = 0;\n        }\n        \n        this.shadowRoot.innerHTML = `\n            <style>\n                .image-collection {\n                    width: 100%;\n                    max-width: 800px;\n                    margin: 0 auto;\n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n                }\n                \n                .image-collection__container {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 0;\n                    width: 100%;\n                    list-style: none;\n                    padding: 0;\n                }\n                \n                .image-collection__item {\n                    width: 100%;\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection__image {\n                    width: 100%;\n                    height: auto;\n                    display: block;\n                }\n                \n                .image-collection__title {\n                    font-weight: 600;\n                    padding: 0.8rem 1rem;\n                    background-color: #f8fafc;\n                    width: 100%;\n                    cursor: pointer;\n                    transition: background-color 0.2s;\n                }\n                \n                .image-collection__title:hover {\n                    background-color: #f1f5f9;\n                }\n                \n                .image-collection .collapsible-item__header {\n                    padding: 0.5rem 1rem;\n                    background: none;\n                    border: none;\n                    width: 100%;\n                    text-align: left;\n                    cursor: pointer;\n                }\n                \n                .image-collection .collapsible-item__content {\n                    margin: 0;\n                    transition: all 0.3s ease;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"] {\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"]:last-child {\n                    margin-bottom: 0;\n                }\n            </style>\n            <div class=\"image-collection\">\n                <ul class=\"image-collection__container\">\n                    ${this._images.map((image, index) => `\n                        <li is=\"collapsible-item\" \n                            label=\"${image.title}\" \n                            ${image.removeshift ? 'removeshift=\"true\"' : ''}\n                            ${this._currentOpenIndex === index ? 'expanded' : ''}\n                            hide-icon\n                            >\n                            <div slot=\"content\">\n                                <img \n                                    class=\"image-collection__image\" \n                                    src=\"${image.src}\" \n                                    alt=\"${image.title}\"\n                                    loading=\"lazy\"\n                                >\n                            </div>\n                        </li>\n                    `).join('')}\n                </ul>\n            </div>\n        `;\n    }\n}\n\nif (!customElements.get('image-collection')) {\n    customElements.define('image-collection', ImageCollection);\n}","// Import components\nimport { CollapsibleItem } from './components/molecules/collapsible-item/CollapsibleItem.js';\nimport { CollapsibleList } from './components/molecules/collapsible-list/CollapsibleList.js';\nimport { IconLabel } from './components/atoms/icon-label/IconLabel.js';\nimport { SelectionMenu } from './components/organisms/selection-menu/SelectionMenu.js';\nimport { ImageCollection } from './components/organisms/image-collection/ImageCollection.js';\n\n// Initialize web components\nexport function defineCustomElements() {\n  // Define all custom elements with their actual implementations\n  customElements.define('collapsible-list', CollapsibleList);\n  customElements.define('collapsible-item', CollapsibleItem, { extends: 'li' });\n  customElements.define('icon-label', IconLabel);\n  customElements.define('selection-menu', SelectionMenu);\n  customElements.define('image-collection', ImageCollection);\n  customElements.define('product-layout', class extends HTMLElement {\n    constructor() {\n      super();\n      // Implementation will be added based on actual component logic\n    }\n  });\n\n  // Wait for all elements to be defined\n  return Promise.all([\n    customElements.whenDefined('collapsible-list'),\n    customElements.whenDefined('collapsible-item'),\n    customElements.whenDefined('icon-label'),\n    customElements.whenDefined('selection-menu'),\n    customElements.whenDefined('image-collection'),\n    customElements.whenDefined('product-layout')\n  ]);\n}\n\n// Auto-define components if in a browser environment\nif (typeof window !== 'undefined' && !window.__GENERIC_WEBCOMPONENTS_DEFINED__) {\n  window.__GENERIC_WEBCOMPONENTS_DEFINED__ = true;\n  defineCustomElements().catch(console.error);\n}\n","import * as webComponents from '../../components';\nimport { defineCustomElements } from '../../init.js';\n\nconst VuePlugin = {\n  install(app) {\n    // Initialize web components\n    defineCustomElements().catch(console.error);\n    // Register all web components as Vue components\n    Object.entries(webComponents).forEach(([componentName, webComponent]) => {\n      if (typeof webComponent === 'function' && webComponent.name) {\n        const tagName = webComponent.is || componentName.toLowerCase();\n        \n        // Create a Vue component definition\n        const vueComponent = {\n          name: componentName,\n          inheritAttrs: false,\n          emits: [], // Will be populated with event names\n          props: {},\n          render() {\n            // Convert kebab-case attributes to camelCase for web components\n            const attrs = Object.entries(this.$attrs).reduce((acc, [key, value]) => {\n              // Convert kebab-case to camelCase for props\n              const camelKey = key.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n              acc[camelKey] = value;\n              return acc;\n            }, {});\n\n            // Add event listeners\n            const on = {};\n            Object.keys(this.$listeners).forEach((event) => {\n              on[event] = this.$listeners[event];\n            });\n\n            return this.$createElement(\n              tagName,\n              {\n                attrs,\n                on,\n                ref: 'webComponent',\n              },\n              this.$slots.default\n            );\n          },\n        };\n\n        // Register the component globally\n        app.component(componentName, vueComponent);\n      }\n    });\n  },\n};\n\nexport default VuePlugin;\n","/**\n * ProductLayout\n * A layout component that displays an image collection, title, and content\n */\nimport { ImageCollection } from '../../organisms/image-collection/ImageCollection.js';\n\n// Import sample images\nconst defaultImages = [\n  {\n    title: 'Nature',\n    src: 'images/samples/nature.jpg',\n    alt: 'Scenic nature landscape',\n    description: 'A beautiful landscape showcasing nature\\'s beauty.'\n  },\n  {\n    title: 'Architecture',\n    src: 'images/samples/architecture.jpg',\n    alt: 'Modern architecture building',\n    description: 'Stunning modern architecture design.'\n  },\n  {\n    title: 'Technology',\n    src: 'images/samples/technology.jpg',\n    alt: 'Technology circuit board',\n    description: 'Close-up of an advanced circuit board.'\n  }\n];\n\nexport class ProductLayout extends HTMLElement {\n  static get observedAttributes() {\n    return ['title', 'images'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._title = 'Product Name';\n    this._images = [];\n    this._isConnected = false;\n    this._hasRendered = false;\n    this._isUpdating = false;\n    this._elements = null;\n    this._render = this._render.bind(this);\n  }\n\n  connectedCallback() {\n    this._isConnected = true;\n    this._render();\n  }\n\n  disconnectedCallback() {\n    this._isConnected = false;\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    \n    if (name === 'title') {\n      this._title = newValue || 'Product Name';\n      this._updateTitle();\n    } else if (name === 'images') {\n      if (typeof newValue === 'string') {\n        try {\n          const parsed = JSON.parse(newValue);\n          this.images = Array.isArray(parsed) ? parsed : [];\n        } catch (e) {\n          console.error('Invalid images JSON:', e);\n          this.images = [];\n        }\n      } else if (Array.isArray(newValue)) {\n        this.images = newValue;\n      } else {\n        this.images = [];\n      }\n    }\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  set title(value) {\n    if (this._title === value) return;\n    this._title = value || '';\n    this._updateTitle();\n  }\n\n  get images() {\n    return this._images;\n  }\n\n  set images(value) {\n    if (Array.isArray(value)) {\n      this._images = value.length > 0 ? value : [...defaultImages];\n    } else if (typeof value === 'string') {\n      try {\n        const parsed = JSON.parse(value);\n        this._images = Array.isArray(parsed) ? parsed : [...defaultImages];\n      } catch (e) {\n        console.error('Invalid images JSON:', e);\n        this._images = [...defaultImages];\n      }\n    } else {\n      this._images = [...defaultImages];\n    }\n    this._updateImages();\n  }\n\n  _updateTitle() {\n    if (!this._elements?.title) return;\n    this._elements.title.textContent = this._title;\n  }\n\n  _updateImages() {\n    if (!this._elements?.imageCollection) return;\n    // Ensure we're passing a fresh copy of the array to trigger the setter\n    this._elements.imageCollection.images = [...this._images];\n    \n    // Ensure the ImageCollection is visible\n    if (this._elements.imageCollectionContainer) {\n      this._elements.imageCollectionContainer.style.display = 'block';\n    }\n  }\n\n  _render() {\n    if (this._isUpdating || !this.shadowRoot) return;\n    this._isUpdating = true;\n\n    try {\n      if (!this._hasRendered) {\n        this.shadowRoot.innerHTML = `\n          <style>\n            :host {\n              display: block;\n              max-width: 1200px;\n              margin: 0 auto;\n              padding: 2rem;\n              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n            }\n            \n            .product-layout {\n              display: grid;\n              grid-template-columns: 1fr;\n              gap: 2rem;\n            }\n            \n            .product-header {\n              text-align: center;\n              margin-bottom: 2rem;\n            }\n            \n            .product-title {\n              font-size: 2.5rem;\n              color: #2d3748;\n              margin: 0 0 1rem;\n            }\n            \n            .content {\n              line-height: 1.6;\n              color: #4a5568;\n            }\n            \n            .image-collection-container {\n              margin: 2rem 0;\n            }\n            \n            /* Remove padding from collapsible items */\n            image-collection::part(content) {\n              padding: 0;\n            }\n            \n            @media (min-width: 1024px) {\n              .product-layout {\n                grid-template-columns: 1fr 1fr;\n                align-items: start;\n              }\n            }\n          </style>\n          <div class=\"product-layout\">\n            <div class=\"product-content\">\n              <div class=\"product-header\">\n                <h1 class=\"product-title\" id=\"title\"></h1>\n              </div>\n              <div class=\"content\" id=\"content\">\n                <slot></slot>\n              </div>\n            </div>\n            <div class=\"image-collection-container\" id=\"imageCollectionContainer\" style=\"display: none;\">\n              <image-collection id=\"imageCollection\"></image-collection>\n            </div>\n          </div>\n        `;\n\n        this._elements = {\n          title: this.shadowRoot.getElementById('title'),\n          content: this.shadowRoot.getElementById('content'),\n          imageCollection: this.shadowRoot.getElementById('imageCollection'),\n          imageCollectionContainer: this.shadowRoot.getElementById('imageCollectionContainer')\n        };\n        \n        // Initialize with default images if none provided\n        if (this._images.length === 0) {\n          this._images = [...defaultImages];\n        }\n\n        this._hasRendered = true;\n      }\n\n      this._updateTitle();\n      this._updateImages();\n    } finally {\n      this._isUpdating = false;\n    }\n  }\n}\n\n// Auto-register the component when loaded directly\nif (typeof window !== 'undefined' && !customElements.get('product-layout')) {\n  customElements.define('product-layout', ProductLayout);\n}\n"],"names":["CollapsibleList","container","slot","style","mutations","shouldUpdate","mutation","node","isReversed","processItems","items","item","nestedItems","nestedLists","processLists","lists","list","error","target","exceptItem","firstItem","IconLabel","value","isImage","icon","label","name","oldValue","newValue","CollapsibleItem","event","isExpanding","header","contentWrapper","hideIcon","iconEl","labelEl","existingContent","child","e","content","headerElements","headerElementSet","newIconEl","wasExpanded","elementName","additionalComponents","loadAdditionalComponents","selectionMenuModule","SelectionMenu$1","productLayoutModule","ProductLayout$1","getAdditionalComponents","SelectionMenu","CollapsibleItem$1","level","listContainer","hasChildren","isSelected","li","isExpanded","childList","contentSlot","span","leafNode","itemId","itemElement","arrowIcon","allCollapsibleItems","allLeafItems","leaf","selectedCollapsibleItem","selectedLeafItem","id","found","ImageCollection","index","allItems","i","targetItem","previousItem","image","defineCustomElements","VuePlugin","app","webComponents","componentName","webComponent","tagName","vueComponent","attrs","acc","key","camelKey","g","on","defaultImages","ProductLayout","parsed","_a"],"mappings":"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"}