{"version":3,"file":"index-C0yFguPQ.js","sources":["../../src/components/molecules/collapsible-list/CollapsibleList.js","../../src/components/atoms/icon-label/IconLabel.js","../../src/components/molecules/collapsible-item/CollapsibleItem.js","../../src/components/index.js","../../src/init.js","../../src/wrappers/vue/index.js"],"sourcesContent":["/**\r\n * CollapsibleList Component\r\n * A custom element that creates a collapsible list container\r\n */\r\n\r\nexport class CollapsibleList extends HTMLElement {\r\n  static get observedAttributes() {\r\n    return ['reverse-heading', 'single-item', 'accordion'];\r\n  }\r\n  \r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this._isUpdating = false; // Track if we're currently updating to prevent reentrant calls\r\n    this._handleItemToggle = this._handleItemToggle.bind(this);\r\n    \r\n    const container = document.createElement('div');\r\n    const slot = document.createElement('slot');\r\n    \r\n    // Create styles for the component\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n        width: 100%;\r\n        --indent-size: 1.5rem;\r\n      }\r\n      \r\n      ::slotted(collapsible-item) {\r\n        display: block;\r\n        margin: 0.25rem 0;\r\n        padding: 0;\r\n        width: 100%;\r\n      }\r\n      \r\n      /* Nested lists should have a border */\r\n      ::slotted(collapsible-list) {\r\n        border-left: 1px solid #e0e0e0;\r\n        margin-left: 0.5rem;\r\n        padding-left: 0.5rem;\r\n      }\r\n      \r\n      /* Style for the header in collapsible items */\r\n      .collapsible-item__header {\r\n        display: flex;\r\n        align-items: center;\r\n        width: 100%;\r\n        flex-direction: row;\r\n      }\r\n      \r\n      /* Toggle container styles */\r\n      .collapsible-item__toggle-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: var(--toggle-size, 24px);\r\n        height: var(--toggle-size, 24px);\r\n        margin: var(--toggle-margin, 0 8px 0 0);\r\n        flex-shrink: 0;\r\n      }`;\r\n    \r\n    container.appendChild(slot);\r\n    this.shadowRoot.append(style, container);\r\n  }\r\n  \r\n  async connectedCallback() {\r\n    if (!this._initialized) {\r\n      this._initializeComponent();\r\n      this._initialized = true;\r\n      \r\n      // Set initial reverse heading state\r\n      await this._updateReverseHeading();\r\n      \r\n      // Set up event listeners for accordion behavior\r\n      this.addEventListener('toggle', this._handleItemToggle);\r\n      \r\n      // Ensure at least one item is expanded in accordion mode\r\n      if (this.hasAttribute('accordion')) {\r\n        this._ensureOneItemExpanded();\r\n      }\r\n    }\r\n    \r\n    // Set up mutation observer for dynamic content\r\n    this._setupMutationObserver();\r\n  }\r\n  \r\n  _initializeComponent() {\r\n    if (!this.hasAttribute('role')) {\r\n      this.setAttribute('role', 'list');\r\n    }\r\n    \r\n    if (!this.hasAttribute('aria-label') && !this.hasAttribute('aria-labelledby')) {\r\n      console.warn('collapsible-list: Add an aria-label or aria-labelledby attribute for accessibility');\r\n    }\r\n  }\r\n  \r\n  _setupMutationObserver() {\r\n    // Set up a mutation observer to handle dynamically added items and attribute changes\r\n    this._observer = new MutationObserver(async (mutations) => {\r\n      let shouldUpdate = false;\r\n      \r\n      for (const mutation of mutations) {\r\n        if (mutation.type === 'attributes' && mutation.attributeName === 'reverse-heading') {\r\n          shouldUpdate = true;\r\n          break;\r\n        } else if (mutation.type === 'childList') {\r\n          // Check if any added nodes are collapsible items or lists\r\n          for (const node of mutation.addedNodes) {\r\n            if (node.nodeType === Node.ELEMENT_NODE && \r\n                (node.matches('collapsible-item') || node.matches('collapsible-list'))) {\r\n              shouldUpdate = true;\r\n              break;\r\n            }\r\n          }\r\n          if (shouldUpdate) break;\r\n        }\r\n      }\r\n      \r\n      if (shouldUpdate) {\r\n        await this._updateReverseHeading();\r\n      }\r\n    });\r\n    \r\n    // Start observing the component for attribute changes and child list changes\r\n    this._observer.observe(this, {\r\n      attributes: true,\r\n      attributeFilter: ['reverse-heading'],\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Updates the reverse heading state for all child collapsible items\r\n   * @private\r\n   */\r\n  async _updateReverseHeading() {\r\n    // Prevent reentrant calls\r\n    if (this._isUpdating) return;\r\n    this._isUpdating = true;\r\n    \r\n    try {\r\n      const isReversed = this.hasAttribute('reverse-heading') && \r\n                       this.getAttribute('reverse-heading') !== 'false';\r\n      \r\n      // Temporarily disconnect observer to prevent infinite loop\r\n      if (this._observer) {\r\n        this._observer.disconnect();\r\n      }\r\n      \r\n      // Process direct child collapsible-items\r\n      const processItems = async (items) => {\r\n        for (const item of items) {\r\n          // Set the attribute on the item\r\n          if (isReversed) {\r\n            item.setAttribute('reverse-heading', '');\r\n          } else {\r\n            item.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any nested items in this item (only direct children)\r\n          const nestedItems = item.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any nested lists in this item (only direct children)\r\n          const nestedLists = item.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Process nested collapsible-lists\r\n      const processLists = async (lists) => {\r\n        for (const list of lists) {\r\n          // Skip if this is the current list to prevent cycles\r\n          if (list === this) continue;\r\n          \r\n          // Set the attribute on the list\r\n          if (isReversed) {\r\n            list.setAttribute('reverse-heading', '');\r\n          } else {\r\n            list.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any direct child items in this list\r\n          const nestedItems = list.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any direct child lists\r\n          const nestedLists = list.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Start processing from the current element\r\n      const items = this.querySelectorAll(':scope > collapsible-item');\r\n      if (items.length > 0) {\r\n        await processItems(Array.from(items));\r\n      }\r\n      \r\n      const lists = this.querySelectorAll(':scope > collapsible-list');\r\n      if (lists.length > 0) {\r\n        await processLists(Array.from(lists));\r\n      }\r\n      \r\n      // Force a reflow to ensure all attribute changes are applied\r\n      if (this.shadowRoot) {\r\n        this.shadowRoot.offsetHeight; // This forces a reflow\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating reverse heading:', error);\r\n    } finally {\r\n      // Reconnect observer if it exists\r\n      if (this._observer) {\r\n        this._observer.observe(this, {\r\n          attributes: true,\r\n          attributeFilter: ['reverse-heading'],\r\n          childList: true,\r\n          subtree: true\r\n        });\r\n      }\r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n\r\n  _handleItemToggle(e) {\r\n    if (this._isUpdating) return;\r\n    \r\n    const target = e.target;\r\n    \r\n    // Only process if this is a direct child\r\n    if (target.parentElement === this) {\r\n      this._isUpdating = true;\r\n      \r\n      if (this.hasAttribute('accordion')) {\r\n        // In accordion mode, close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      } else if (this.hasAttribute('single-item')) {\r\n        // In single-item mode, just close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      }\r\n      \r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n  \r\n  _closeOtherItems(exceptItem) {\r\n    // Don't close items if inside an image-collection\r\n    if (this.closest('image-collection')) {\r\n      return;\r\n    }\r\n    \r\n    const items = this.querySelectorAll('collapsible-item');\r\n    items.forEach(item => {\r\n      if (item !== exceptItem) {\r\n        item.expanded = false;\r\n      }\r\n    });\r\n  }\r\n  \r\n  _getOpenItems() {\r\n    return Array.from(this.querySelectorAll('collapsible-item[expanded]'));\r\n  }\r\n  \r\n  _ensureOneItemExpanded() {\r\n    if (!this.hasAttribute('accordion')) return;\r\n    \r\n    const openItems = this._getOpenItems();\r\n    if (openItems.length === 0) {\r\n      // If no items are open, open the first one\r\n      const firstItem = this.querySelector('collapsible-item');\r\n      if (firstItem) {\r\n        firstItem.setAttribute('expanded', '');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Define the custom element\r\nif (!customElements.get('collapsible-list')) {\r\n  customElements.define('collapsible-list', CollapsibleList);\r\n}\r\n","/**\n * IconLabel Component\n * A custom element that displays an icon with a label\n */\n\nexport class IconLabel extends HTMLElement {\n  static get observedAttributes() {\n    return ['icon', 'label', 'reverse'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    \n    // Default values\n    this._icon = '';\n    this._label = '';\n    this._reverse = false;\n    this._initialized = false;\n  }\n\n  connectedCallback() {\n    if (!this._initialized) {\n      this._initializeComponent();\n      this._initialized = true;\n    }\n    this._render();\n  }\n\n  _initializeComponent() {\n    // Create styles\n    const style = document.createElement('style');\n    style.textContent = `\n      :host {\n        display: inline-flex;\n        align-items: center;\n        font-family: inherit;\n        color: currentColor;\n      }\n\n      .icon-label {\n        display: inline-flex;\n        align-items: center;\n        gap: 0.5rem;\n      }\n\n      .icon-label--reverse {\n        flex-direction: row-reverse;\n      }\n\n      .icon-label__icon {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        width: 1em;\n        height: 1em;\n      }\n      \n      .icon-label__icon img,\n      .icon-label__char {\n        width: 1em;\n        height: 1em;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      \n      .icon-label__char {\n        font-size: 1em;\n        line-height: 1;\n      }\n    `;\n\n\n    // Create container\n    const container = document.createElement('span');\n    container.className = 'icon-label';\n    container.setAttribute('part', 'container');\n\n    // Create icon slot\n    const iconSlot = document.createElement('slot');\n    iconSlot.name = 'icon';\n    iconSlot.className = 'icon-label__icon';\n    iconSlot.setAttribute('part', 'icon');\n\n    // Create label slot\n    const labelSlot = document.createElement('slot');\n    labelSlot.className = 'icon-label__label';\n    labelSlot.setAttribute('part', 'label');\n\n    // Append slots to container\n    container.appendChild(iconSlot);\n    container.appendChild(labelSlot);\n\n    // Append elements to shadow root\n    this.shadowRoot.appendChild(style);\n    this.shadowRoot.appendChild(container);\n\n    // Store references\n    this._container = container;\n    this._iconSlot = iconSlot;\n    this._labelSlot = labelSlot;\n  }\n\n  _render() {\n    if (!this._initialized) return;\n\n    // Update classes based on properties\n    this._container.className = 'icon-label';\n    if (this._reverse) {\n      this._container.classList.add('icon-label--reverse');\n    }\n\n    // Update icon if provided\n    if (this._icon && this._iconSlot) {\n      this._iconSlot.innerHTML = '';\n      \n      // Check if the icon is a single character (likely an emoji or icon character)\n      const isIconChar = this._icon.length === 1 || \n                       (this._icon.length === 2 && this._icon.codePointAt(0) > 0xFFFF);\n      \n      if (isIconChar) {\n        // For single character icons (emojis, etc.)\n        const charSpan = document.createElement('span');\n        charSpan.className = 'icon-label__char';\n        charSpan.textContent = this._icon;\n        this._iconSlot.appendChild(charSpan);\n      } else {\n        // For image paths (URLs or data URIs)\n        const img = document.createElement('img');\n        img.src = this._icon;\n        img.alt = ''; // Decorative image\n        this._iconSlot.appendChild(img);\n      }\n    }\n\n    // Set the label text\n    const labelText = this._label || this.textContent.trim();\n    if (labelText && this._labelSlot) {\n      // Clear any existing content in the label slot\n      this._labelSlot.textContent = '';\n      \n      // If there's no explicit label attribute but there is text content,\n      // move the text content to the label slot\n      if (!this._label && this.textContent.trim()) {\n        while (this.firstChild) {\n          this._labelSlot.appendChild(this.firstChild);\n        }\n      } else {\n        // Otherwise, just set the text content\n        this._labelSlot.textContent = labelText;\n      }\n    }\n  }\n\n  // Getters and setters for properties\n  get icon() {\n    return this._icon;\n  }\n\n  set icon(value) {\n    this._icon = value;\n    this.setAttribute('icon', value);\n  }\n\n  get label() {\n    return this._label || this.textContent.trim();\n  }\n\n  set label(value) {\n    this._label = value;\n    if (this._labelSlot) {\n      this._labelSlot.textContent = value;\n    }\n  }\n\n  get reverse() {\n    return this._reverse;\n  }\n\n  set reverse(value) {\n    this._reverse = value !== null && value !== false;\n    this._render();\n  }\n\n  // Handle attribute changes\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'icon':\n        this._icon = newValue || '';\n        break;\n      case 'label':\n        this._label = newValue || '';\n        if (this._labelSlot) {\n          this._labelSlot.textContent = this._label;\n        }\n        break;\n      case 'reverse':\n        this._reverse = newValue !== null;\n        this._render();\n        break;\n    }\n  }\n}\n\n// Define the custom element\nif (!customElements.get('icon-label')) {\n  customElements.define('icon-label', IconLabel);\n}\n","/**\n * CollapsibleItem Component\n * A custom element that creates a collapsible list item\n * \n * @attr {boolean} expanded - Whether the item is expanded or collapsed\n * @attr {string} icon - Optional icon to display next to the label\n * @attr {string} label - The text label for the collapsible item\n * @attr {boolean} removeshift - If true, removes the left padding from the content area\n */\n\nimport { IconLabel } from '../../atoms/icon-label/IconLabel.js';\n\n// Import regular CSS\nimport './CollapsibleItem.css';\n\nexport class CollapsibleItem extends HTMLLIElement {\n    static get observedAttributes() {\n        return ['expanded', 'icon', 'label', 'removeshift', 'hide-icon'];\n    }\n    \n    constructor() {\n        super();\n        this._isExpanded = false;\n        this._handleClick = this._handleClick.bind(this);\n        this._header = null;\n        this._content = null;\n        this._initialRender = true;\n        this._removeShift = false;\n        this.rendered = false;\n        \n        // Add base class to the host element\n        this.classList.add('collapsible-item');\n        \n        // Initialize expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        }\n        \n        // Initialize no-padding state\n        if (this.hasAttribute('removeshift')) {\n            this.classList.add('collapsible-item--no-padding');\n        }\n    }\n\n    connectedCallback() {\n        // Ensure the component has the correct role for accessibility\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'listitem');\n        }\n        \n        // Set up the component if not already rendered\n        if (!this.rendered) {\n            this._render();\n            this.rendered = true;\n            this._addEventListeners();\n            \n            // Ensure the content visibility is set correctly based on the expanded state\n            this._updateContentVisibility();\n        }\n        \n        // Ensure the component is properly styled\n        this.classList.add('collapsible-item');\n        \n        // Set initial expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        } else {\n            this._isExpanded = false;\n            this.classList.remove('collapsible-item--expanded');\n        }\n    }\n    \n    disconnectedCallback() {\n        this._removeEventListeners();\n    }\n    \n    _addEventListeners() {\n        // Add click listener to the component itself for event delegation\n        this.addEventListener('click', this._handleClick);\n    }\n    \n    _removeEventListeners() {\n        this.removeEventListener('click', this._handleClick);\n    }\n    \n    _handleClick(event) {\n        // Find the closest header from the click target\n        const header = event.target.closest('.collapsible-item__header');\n        if (!header) return; // Not a header click\n        \n        // Prevent the default action to avoid any native behavior\n        event.preventDefault();\n        event.stopPropagation();\n        \n        // Toggle the expanded state\n        const isExpanding = !this.hasAttribute('expanded');\n        \n        // Update the expanded attribute\n        if (isExpanding) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the internal state and UI\n        this._isExpanded = isExpanding;\n        this._updateContentVisibility();\n        \n        // Dispatch a custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: isExpanding },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _createHeader() {\n        const header = document.createElement('div');\n        header.className = 'collapsible-item__header';\n        \n        // Create a container for the icon and label\n        const contentWrapper = document.createElement('div');\n        contentWrapper.style.display = 'flex';\n        contentWrapper.style.alignItems = 'center';\n        contentWrapper.style.flex = '1';\n        \n        // Add icon if provided and not hidden\n        const hideIcon = this.hasAttribute('hide-icon');\n        const icon = this.getAttribute('icon');\n        if (icon && !hideIcon) {\n            const iconEl = document.createElement('span');\n            iconEl.className = 'collapsible-item__icon';\n            iconEl.textContent = icon;\n            iconEl.style.marginRight = '0.5rem';\n            contentWrapper.appendChild(iconEl);\n        }\n        \n        // Add label\n        const label = this.getAttribute('label') || '';\n        if (label) {\n            const labelEl = document.createElement('span');\n            labelEl.className = 'collapsible-item__label';\n            labelEl.textContent = label;\n            contentWrapper.appendChild(labelEl);\n        }\n        \n        // Add the content wrapper to the header\n        header.appendChild(contentWrapper);\n                \n        return header;\n    }\n    \n    _render() {\n        // Prevent re-entrancy during rendering\n        if (!this._isRendering) {\n            this._isRendering = true;\n            \n            // Store any existing content that should be preserved\n            const existingContent = [];\n            Array.from(this.children).forEach(child => {\n                if (child !== this._header && child !== this._content) {\n                    existingContent.push(child);\n                }\n            });\n            \n            // Clear existing content\n            while (this.firstChild) {\n                this.removeChild(this.firstChild);\n            }\n            \n            // Create and append header\n            this._header = this._createHeader();\n            this.appendChild(this._header);\n            \n            // Set header attributes for accessibility\n            if (this._header) {\n                this._header.setAttribute('role', 'button');\n                this._header.setAttribute('aria-expanded', this._isExpanded ? 'true' : 'false');\n                this._header.setAttribute('tabindex', '0');\n                \n                // Add keyboard support\n                this._header.addEventListener('keydown', (e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        this._toggleExpanded();\n                    }\n                });\n            }\n            \n            // Create and append content container\n            this._content = this._createContent();\n            if (this._content) {\n                this.appendChild(this._content);\n                \n                // Add back any existing content to the content container\n                existingContent.forEach(child => {\n                    this._content.appendChild(child);\n                });\n            }\n            \n            // Ensure proper ARIA attributes for accessibility\n            this.setAttribute('role', 'listitem');\n            \n            // Set initial content visibility\n            this._updateContentVisibility();\n            \n            // Mark as rendered\n            this.rendered = true;\n            this._isRendering = false;\n        }\n    }\n    \n    _createContent() {\n        const content = document.createElement('div');\n        content.className = 'collapsible-item__content';\n        \n        // Filter out any header elements and their content\n        const headerElements = this.querySelectorAll('.collapsible-item__header, .collapsible-item__label, .collapsible-item__icon');\n        const headerElementSet = new Set(headerElements);\n        \n        // Process direct children that are not part of the header\n        const filteredChildren = Array.from(this.childNodes).filter(node => {\n            // Keep only element nodes that are not in the header\n            if (node.nodeType === Node.ELEMENT_NODE) {\n                return !headerElementSet.has(node) && !node.closest('.collapsible-item__header');\n            }\n            // Keep text nodes that are not just whitespace\n            if (node.nodeType === Node.TEXT_NODE) {\n                return node.textContent.trim() !== '' && \n                       !node.textContent.includes('▶') && \n                       !node.textContent.includes('▼');\n            }\n            return false;\n        });\n        \n        // Add the filtered children to the content\n        filteredChildren.forEach(child => {\n            content.appendChild(child.cloneNode(true));\n        });\n        \n        return content;\n    }\n    \n    get expanded() {\n        return this._isExpanded;\n    }\n    \n    set expanded(value) {\n        if (this._isExpanded === value) return; // No change needed\n        \n        this._isExpanded = value;\n        \n        // Update the attribute to reflect the state in the DOM\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the content visibility immediately\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _toggleExpanded() {\n        this._isExpanded = !this._isExpanded;\n        \n        // Update the expanded attribute\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the UI\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _updateContentVisibility() {\n        if (!this._content || !this._header) return;\n        \n        const hideIcon = this.hasAttribute('hide-icon');\n        \n        if (this._isExpanded) {\n            this._content.classList.add('collapsible-item__content--expanded');\n            this._content.style.display = 'block';\n            this._header.setAttribute('aria-expanded', 'true');\n            this.classList.add('collapsible-item--expanded');\n            // Update icon to expanded state (down arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▼');\n            }\n        } else {\n            this._content.classList.remove('collapsible-item__content--expanded');\n            this._content.style.display = 'none';\n            this._header.setAttribute('aria-expanded', 'false');\n            this.classList.remove('collapsible-item--expanded');\n            // Update icon to collapsed state (right arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▶');\n            }\n        }\n    }\n    \n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'removeshift') {\n            this._removeShift = newValue !== null;\n            if (this._removeShift) {\n                this.classList.add('collapsible-item--no-padding');\n            } else {\n                this.classList.remove('collapsible-item--no-padding');\n            }\n        } else if (name === 'hide-icon' && this._header) {\n            // Handle hide-icon attribute changes\n            const iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue !== null) {\n                // hide-icon is set, remove the icon if it exists\n                if (iconEl) {\n                    iconEl.remove();\n                }\n            } else if (this.hasAttribute('icon')) {\n                // hide-icon is removed, add the icon back if we have an icon attribute\n                if (!iconEl) {\n                    const icon = this.getAttribute('icon');\n                    const newIconEl = document.createElement('span');\n                    newIconEl.className = 'collapsible-item__icon';\n                    newIconEl.textContent = icon;\n                    newIconEl.style.marginRight = '0.5rem';\n                    const contentWrapper = this._header.firstElementChild;\n                    if (contentWrapper) {\n                        contentWrapper.insertBefore(newIconEl, contentWrapper.firstChild);\n                    }\n                }\n            }\n        } else if (name === 'expanded') {\n            const wasExpanded = this._isExpanded;\n            this._isExpanded = newValue !== null;\n            \n            // Only update if the state actually changed\n            if (this._isExpanded !== wasExpanded) {\n                this._updateContentVisibility();\n            }\n        } else if (name === 'icon' && this._header) {\n            // Update the icon if it exists, or create it if it doesn't\n            let iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue) {\n                if (!iconEl) {\n                    iconEl = document.createElement('span');\n                    iconEl.className = 'collapsible-item__icon';\n                    this._header.insertBefore(iconEl, this._header.firstChild);\n                }\n                iconEl.textContent = newValue;\n            } else if (iconEl) {\n                this._header.removeChild(iconEl);\n            }\n        } else if (name === 'label' && this._header) {\n            // Update the label if it exists, or create it if it doesn't\n            let labelEl = this._header.querySelector('.collapsible-item__label');\n            if (labelEl) {\n                labelEl.textContent = newValue || '';\n            } else if (newValue) {\n                labelEl = document.createElement('span');\n                labelEl.className = 'collapsible-item__label';\n                labelEl.textContent = newValue;\n                this._header.appendChild(labelEl);\n            }\n        }\n    }\n}\n\n// Define the custom element with the correct name\nconst elementName = 'collapsible-item';\n\n// Check if the element is already defined and undefine it if necessary\nif (typeof window !== 'undefined' && window.customElements) {\n    // First, try to undefine the element if it exists\n    if (window.customElements.get(elementName)) {\n        const oldElement = window.customElements.get(elementName);\n        delete window.customElements._elements[elementName];\n    }\n    \n    // Define the element with the proper configuration\n    window.customElements.define(elementName, CollapsibleItem, { extends: 'li' });\n}","// Core components\nexport * from './molecules/collapsible-list/CollapsibleList.js';\nexport * from './molecules/collapsible-item/CollapsibleItem.js';\n\n// Additional components (dynamically imported when needed)\nlet additionalComponents = {};\n\n// Function to load additional components\nexport async function loadAdditionalComponents() {\n  try {\n    const selectionMenuModule = await import('./organisms/selection-menu/SelectionMenu.js');\n    additionalComponents.SelectionMenu = selectionMenuModule.default || selectionMenuModule;\n  } catch (e) {\n    console.warn('SelectionMenu component not found or failed to load', e);\n  }\n\n  try {\n    const productLayoutModule = await import('./templates/product-layout/ProductLayout.js');\n    additionalComponents.ProductLayout = productLayoutModule.default || productLayoutModule;\n  } catch (e) {\n    console.warn('ProductLayout component not found or failed to load', e);\n  }\n  \n  return additionalComponents;\n}\n\n// Export a function to get additional components\nexport function getAdditionalComponents() {\n  return additionalComponents;\n}\n","// Initialize web components\nexport function defineCustomElements() {\n  return Promise.all([\n    customElements.whenDefined('collapsible-list'),\n    customElements.whenDefined('collapsible-item'),\n    customElements.whenDefined('icon-label'),\n    customElements.whenDefined('selection-menu'),\n    customElements.whenDefined('image-collection'),\n    customElements.whenDefined('product-layout')\n  ]);\n}\n\n// Auto-define components if in a browser environment\nif (typeof window !== 'undefined' && !window.__GENERIC_WEBCOMPONENTS_DEFINED__) {\n  window.__GENERIC_WEBCOMPONENTS_DEFINED__ = true;\n  defineCustomElements().catch(console.error);\n}\n","import * as webComponents from '../../components';\nimport { defineCustomElements } from '../../init.js';\n\nconst VuePlugin = {\n  install(app) {\n    // Initialize web components\n    defineCustomElements().catch(console.error);\n    // Register all web components as Vue components\n    Object.entries(webComponents).forEach(([componentName, webComponent]) => {\n      if (typeof webComponent === 'function' && webComponent.name) {\n        const tagName = webComponent.is || componentName.toLowerCase();\n        \n        // Create a Vue component definition\n        const vueComponent = {\n          name: componentName,\n          inheritAttrs: false,\n          emits: [], // Will be populated with event names\n          props: {},\n          render() {\n            // Convert kebab-case attributes to camelCase for web components\n            const attrs = Object.entries(this.$attrs).reduce((acc, [key, value]) => {\n              // Convert kebab-case to camelCase for props\n              const camelKey = key.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n              acc[camelKey] = value;\n              return acc;\n            }, {});\n\n            // Add event listeners\n            const on = {};\n            Object.keys(this.$listeners).forEach((event) => {\n              on[event] = this.$listeners[event];\n            });\n\n            return this.$createElement(\n              tagName,\n              {\n                attrs,\n                on,\n                ref: 'webComponent',\n              },\n              this.$slots.default\n            );\n          },\n        };\n\n        // Register the component globally\n        app.component(componentName, vueComponent);\n      }\n    });\n  },\n};\n\nexport default VuePlugin;\n"],"names":["CollapsibleList","container","slot","style","mutations","shouldUpdate","mutation","node","isReversed","processItems","items","item","nestedItems","nestedLists","processLists","lists","list","error","target","exceptItem","firstItem","IconLabel","iconSlot","labelSlot","charSpan","img","labelText","value","name","oldValue","newValue","CollapsibleItem","event","isExpanding","header","contentWrapper","hideIcon","icon","iconEl","label","labelEl","existingContent","child","e","content","headerElements","headerElementSet","newIconEl","wasExpanded","elementName","additionalComponents","loadAdditionalComponents","selectionMenuModule","productLayoutModule","getAdditionalComponents","defineCustomElements","VuePlugin","app","webComponents","componentName","webComponent","tagName","vueComponent","attrs","acc","key","camelKey","g","on"],"mappings":"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"}