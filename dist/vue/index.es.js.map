{"version":3,"file":"index.es.js","sources":["../../src/components/molecules/collapsible-list/CollapsibleList.js","../../src/components/atoms/icon-label/IconLabel.js","../../src/components/molecules/collapsible-item/CollapsibleItem.js","../../src/components/index.js","../../src/components/organisms/selection-menu/SelectionMenu.js","../../src/components/organisms/image-collection/ImageCollection.js","../../src/init.js","../../src/wrappers/vue/index.js"],"sourcesContent":["/**\r\n * CollapsibleList Component\r\n * A custom element that creates a collapsible list container\r\n */\r\n\r\nexport class CollapsibleList extends HTMLElement {\r\n  static get observedAttributes() {\r\n    return ['reverse-heading', 'single-item', 'accordion'];\r\n  }\r\n  \r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this._isUpdating = false; // Track if we're currently updating to prevent reentrant calls\r\n    this._handleItemToggle = this._handleItemToggle.bind(this);\r\n    \r\n    const container = document.createElement('div');\r\n    const slot = document.createElement('slot');\r\n    \r\n    // Create styles for the component\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n        width: 100%;\r\n        --indent-size: 1.5rem;\r\n      }\r\n      \r\n      ::slotted(collapsible-item) {\r\n        display: block;\r\n        margin: 0.25rem 0;\r\n        padding: 0;\r\n        width: 100%;\r\n      }\r\n      \r\n      /* Nested lists should have a border */\r\n      ::slotted(collapsible-list) {\r\n        border-left: 1px solid #e0e0e0;\r\n        margin-left: 0.5rem;\r\n        padding-left: 0.5rem;\r\n      }\r\n      \r\n      /* Style for the header in collapsible items */\r\n      .collapsible-item__header {\r\n        display: flex;\r\n        align-items: center;\r\n        width: 100%;\r\n        flex-direction: row;\r\n      }\r\n      \r\n      /* Toggle container styles */\r\n      .collapsible-item__toggle-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: var(--toggle-size, 24px);\r\n        height: var(--toggle-size, 24px);\r\n        margin: var(--toggle-margin, 0 8px 0 0);\r\n        flex-shrink: 0;\r\n      }`;\r\n    \r\n    container.appendChild(slot);\r\n    this.shadowRoot.append(style, container);\r\n  }\r\n  \r\n  async connectedCallback() {\r\n    if (!this._initialized) {\r\n      this._initializeComponent();\r\n      this._initialized = true;\r\n      \r\n      // Set initial reverse heading state\r\n      await this._updateReverseHeading();\r\n      \r\n      // Set up event listeners for accordion behavior\r\n      this.addEventListener('toggle', this._handleItemToggle);\r\n      \r\n      // Ensure at least one item is expanded in accordion mode\r\n      if (this.hasAttribute('accordion')) {\r\n        this._ensureOneItemExpanded();\r\n      }\r\n    }\r\n    \r\n    // Set up mutation observer for dynamic content\r\n    this._setupMutationObserver();\r\n  }\r\n  \r\n  _initializeComponent() {\r\n    if (!this.hasAttribute('role')) {\r\n      this.setAttribute('role', 'list');\r\n    }\r\n    \r\n    if (!this.hasAttribute('aria-label') && !this.hasAttribute('aria-labelledby')) {\r\n      console.warn('collapsible-list: Add an aria-label or aria-labelledby attribute for accessibility');\r\n    }\r\n  }\r\n  \r\n  _setupMutationObserver() {\r\n    // Set up a mutation observer to handle dynamically added items and attribute changes\r\n    this._observer = new MutationObserver(async (mutations) => {\r\n      let shouldUpdate = false;\r\n      \r\n      for (const mutation of mutations) {\r\n        if (mutation.type === 'attributes' && mutation.attributeName === 'reverse-heading') {\r\n          shouldUpdate = true;\r\n          break;\r\n        } else if (mutation.type === 'childList') {\r\n          // Check if any added nodes are collapsible items or lists\r\n          for (const node of mutation.addedNodes) {\r\n            if (node.nodeType === Node.ELEMENT_NODE && \r\n                (node.matches('collapsible-item') || node.matches('collapsible-list'))) {\r\n              shouldUpdate = true;\r\n              break;\r\n            }\r\n          }\r\n          if (shouldUpdate) break;\r\n        }\r\n      }\r\n      \r\n      if (shouldUpdate) {\r\n        await this._updateReverseHeading();\r\n      }\r\n    });\r\n    \r\n    // Start observing the component for attribute changes and child list changes\r\n    this._observer.observe(this, {\r\n      attributes: true,\r\n      attributeFilter: ['reverse-heading'],\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Updates the reverse heading state for all child collapsible items\r\n   * @private\r\n   */\r\n  async _updateReverseHeading() {\r\n    // Prevent reentrant calls\r\n    if (this._isUpdating) return;\r\n    this._isUpdating = true;\r\n    \r\n    try {\r\n      const isReversed = this.hasAttribute('reverse-heading') && \r\n                       this.getAttribute('reverse-heading') !== 'false';\r\n      \r\n      // Temporarily disconnect observer to prevent infinite loop\r\n      if (this._observer) {\r\n        this._observer.disconnect();\r\n      }\r\n      \r\n      // Process direct child collapsible-items\r\n      const processItems = async (items) => {\r\n        for (const item of items) {\r\n          // Set the attribute on the item\r\n          if (isReversed) {\r\n            item.setAttribute('reverse-heading', '');\r\n          } else {\r\n            item.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any nested items in this item (only direct children)\r\n          const nestedItems = item.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any nested lists in this item (only direct children)\r\n          const nestedLists = item.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Process nested collapsible-lists\r\n      const processLists = async (lists) => {\r\n        for (const list of lists) {\r\n          // Skip if this is the current list to prevent cycles\r\n          if (list === this) continue;\r\n          \r\n          // Set the attribute on the list\r\n          if (isReversed) {\r\n            list.setAttribute('reverse-heading', '');\r\n          } else {\r\n            list.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any direct child items in this list\r\n          const nestedItems = list.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any direct child lists\r\n          const nestedLists = list.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Start processing from the current element\r\n      const items = this.querySelectorAll(':scope > collapsible-item');\r\n      if (items.length > 0) {\r\n        await processItems(Array.from(items));\r\n      }\r\n      \r\n      const lists = this.querySelectorAll(':scope > collapsible-list');\r\n      if (lists.length > 0) {\r\n        await processLists(Array.from(lists));\r\n      }\r\n      \r\n      // Force a reflow to ensure all attribute changes are applied\r\n      if (this.shadowRoot) {\r\n        this.shadowRoot.offsetHeight; // This forces a reflow\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating reverse heading:', error);\r\n    } finally {\r\n      // Reconnect observer if it exists\r\n      if (this._observer) {\r\n        this._observer.observe(this, {\r\n          attributes: true,\r\n          attributeFilter: ['reverse-heading'],\r\n          childList: true,\r\n          subtree: true\r\n        });\r\n      }\r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n\r\n  _handleItemToggle(e) {\r\n    if (this._isUpdating) return;\r\n    \r\n    const target = e.target;\r\n    \r\n    // Only process if this is a direct child\r\n    if (target.parentElement === this) {\r\n      this._isUpdating = true;\r\n      \r\n      if (this.hasAttribute('accordion')) {\r\n        // In accordion mode, close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      } else if (this.hasAttribute('single-item')) {\r\n        // In single-item mode, just close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      }\r\n      \r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n  \r\n  _closeOtherItems(exceptItem) {\r\n    // Don't close items if inside an image-collection\r\n    if (this.closest('image-collection')) {\r\n      return;\r\n    }\r\n    \r\n    const items = this.querySelectorAll('collapsible-item');\r\n    items.forEach(item => {\r\n      if (item !== exceptItem) {\r\n        item.expanded = false;\r\n      }\r\n    });\r\n  }\r\n  \r\n  _getOpenItems() {\r\n    return Array.from(this.querySelectorAll('collapsible-item[expanded]'));\r\n  }\r\n  \r\n  _ensureOneItemExpanded() {\r\n    if (!this.hasAttribute('accordion')) return;\r\n    \r\n    const openItems = this._getOpenItems();\r\n    if (openItems.length === 0) {\r\n      // If no items are open, open the first one\r\n      const firstItem = this.querySelector('collapsible-item');\r\n      if (firstItem) {\r\n        firstItem.setAttribute('expanded', '');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Define the custom element\r\nif (!customElements.get('collapsible-list')) {\r\n  customElements.define('collapsible-list', CollapsibleList);\r\n}\r\n","/**\n * IconLabel Component\n * A simple component that displays an icon next to a label\n */\n\nexport class IconLabel extends HTMLElement {\n  static get observedAttributes() {\n    return ['icon', 'label', 'reverse'];\n  }\n\n  constructor() {\n    super();\n    this._icon = '';\n    this._label = '';\n    this._reverse = false;\n  }\n\n  connectedCallback() {\n    this._render();\n  }\n\n  get icon() {\n    return this._icon;\n  }\n\n  set icon(value) {\n    this._icon = value || '';\n    this._render();\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  set label(value) {\n    this._label = value || '';\n    this._render();\n  }\n\n  get reverse() {\n    return this._reverse;\n  }\n\n  set reverse(value) {\n    this._reverse = value !== null && value !== 'false';\n    this._render();\n  }\n\n  _render() {\n    // Create container\n    const container = document.createElement('span');\n    container.style.display = 'inline-flex';\n    container.style.alignItems = 'center';\n    container.style.gap = '0.5rem';\n    container.style.fontFamily = 'inherit';\n    container.style.color = 'currentColor';\n    \n    if (this._reverse) {\n      container.style.flexDirection = 'row-reverse';\n    }\n\n    // Create icon element if icon is provided\n    if (this._icon) {\n      const isImage = this._icon.startsWith('data:') || \n                     this._icon.startsWith('http') || \n                     this._icon.startsWith('/') ||\n                     /\\.(png|jpg|jpeg|svg|gif|webp)(\\?.*)?$/i.test(this._icon);\n      \n      const icon = isImage ? document.createElement('img') : document.createElement('span');\n      icon.style.display = 'inline-flex';\n      icon.style.alignItems = 'center';\n      icon.style.justifyContent = 'center';\n      icon.style.width = '1em';\n      icon.style.height = '1em';\n\n      if (isImage) {\n        icon.src = this._icon;\n        icon.alt = '';\n        icon.loading = 'lazy';\n        icon.style.objectFit = 'contain';\n      } else {\n        icon.textContent = this._icon;\n        icon.style.fontSize = '1em';\n        icon.style.lineHeight = '1';\n      }\n      \n      container.appendChild(icon);\n    }\n\n    // Add label if provided\n    if (this._label) {\n      const label = document.createElement('span');\n      label.textContent = this._label;\n      container.appendChild(label);\n    }\n\n    // Update the component\n    this.innerHTML = '';\n    this.appendChild(container);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    \n    if (name === 'icon') {\n      this._icon = newValue || '';\n    } else if (name === 'label') {\n      this._label = newValue || '';\n    } else if (name === 'reverse') {\n      this._reverse = newValue !== null && newValue !== 'false';\n    }\n    \n    this._render();\n  }\n}\n\n// Define the custom element\nif (!customElements.get('icon-label')) {\n  customElements.define('icon-label', IconLabel);\n}\n","/**\n * CollapsibleItem Component\n * A custom element that creates a collapsible list item\n * \n * @attr {boolean} expanded - Whether the item is expanded or collapsed\n * @attr {string} icon - Optional icon to display next to the label\n * @attr {string} label - The text label for the collapsible item\n * @attr {boolean} removeshift - If true, removes the left padding from the content area\n */\n\nimport { IconLabel } from '../../atoms/icon-label/IconLabel.js';\n\n// Import regular CSS\nimport './CollapsibleItem.css';\n\nexport class CollapsibleItem extends HTMLLIElement {\n    static get observedAttributes() {\n        return ['expanded', 'icon', 'label', 'removeshift', 'hide-icon'];\n    }\n    \n    constructor() {\n        super();\n        this._isExpanded = false;\n        this._handleClick = this._handleClick.bind(this);\n        this._header = null;\n        this._content = null;\n        this._initialRender = true;\n        this._removeShift = false;\n        this.rendered = false;\n        \n        // Add base class to the host element\n        this.classList.add('collapsible-item');\n        \n        // Initialize expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        }\n        \n        // Initialize no-padding state\n        if (this.hasAttribute('removeshift')) {\n            this.classList.add('collapsible-item--no-padding');\n        }\n    }\n\n    connectedCallback() {\n        // Ensure the component has the correct role for accessibility\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'listitem');\n        }\n        \n        // Set up the component if not already rendered\n        if (!this.rendered) {\n            this._render();\n            this.rendered = true;\n            this._addEventListeners();\n            \n            // Ensure the content visibility is set correctly based on the expanded state\n            this._updateContentVisibility();\n        }\n        \n        // Ensure the component is properly styled\n        this.classList.add('collapsible-item');\n        \n        // Set initial expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        } else {\n            this._isExpanded = false;\n            this.classList.remove('collapsible-item--expanded');\n        }\n    }\n    \n    disconnectedCallback() {\n        this._removeEventListeners();\n    }\n    \n    _addEventListeners() {\n        // Add click listener to the component itself for event delegation\n        this.addEventListener('click', this._handleClick);\n    }\n    \n    _removeEventListeners() {\n        this.removeEventListener('click', this._handleClick);\n    }\n    \n    _handleClick(event) {\n        // Find the closest header from the click target\n        const header = event.target.closest('.collapsible-item__header');\n        if (!header) return; // Not a header click\n        \n        // Prevent the default action to avoid any native behavior\n        event.preventDefault();\n        event.stopPropagation();\n        \n        // Toggle the expanded state\n        const isExpanding = !this.hasAttribute('expanded');\n        \n        // Update the expanded attribute\n        if (isExpanding) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the internal state and UI\n        this._isExpanded = isExpanding;\n        this._updateContentVisibility();\n        \n        // Dispatch a custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: isExpanding },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _createHeader() {\n        const header = document.createElement('div');\n        header.className = 'collapsible-item__header';\n        \n        // Create a container for the icon and label\n        const contentWrapper = document.createElement('div');\n        contentWrapper.style.display = 'flex';\n        contentWrapper.style.alignItems = 'center';\n        contentWrapper.style.flex = '1';\n        \n        // Add icon if provided and not hidden\n        const hideIcon = this.hasAttribute('hide-icon');\n        const icon = this.getAttribute('icon');\n        if (icon && !hideIcon) {\n            const iconEl = document.createElement('span');\n            iconEl.className = 'collapsible-item__icon';\n            iconEl.textContent = icon;\n            iconEl.style.marginRight = '0.5rem';\n            contentWrapper.appendChild(iconEl);\n        }\n        \n        // Add label\n        const label = this.getAttribute('label') || '';\n        if (label) {\n            const labelEl = document.createElement('span');\n            labelEl.className = 'collapsible-item__label';\n            labelEl.textContent = label;\n            contentWrapper.appendChild(labelEl);\n        }\n        \n        // Add the content wrapper to the header\n        header.appendChild(contentWrapper);\n                \n        return header;\n    }\n    \n    _render() {\n        // Prevent re-entrancy during rendering\n        if (!this._isRendering) {\n            this._isRendering = true;\n            \n            // Store any existing content that should be preserved\n            const existingContent = [];\n            Array.from(this.children).forEach(child => {\n                if (child !== this._header && child !== this._content) {\n                    existingContent.push(child);\n                }\n            });\n            \n            // Clear existing content\n            while (this.firstChild) {\n                this.removeChild(this.firstChild);\n            }\n            \n            // Create and append header\n            this._header = this._createHeader();\n            this.appendChild(this._header);\n            \n            // Set header attributes for accessibility\n            if (this._header) {\n                this._header.setAttribute('role', 'button');\n                this._header.setAttribute('aria-expanded', this._isExpanded ? 'true' : 'false');\n                this._header.setAttribute('tabindex', '0');\n                \n                // Add keyboard support\n                this._header.addEventListener('keydown', (e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        this._toggleExpanded();\n                    }\n                });\n            }\n            \n            // Create and append content container\n            this._content = this._createContent();\n            if (this._content) {\n                this.appendChild(this._content);\n                \n                // Add back any existing content to the content container\n                existingContent.forEach(child => {\n                    this._content.appendChild(child);\n                });\n            }\n            \n            // Ensure proper ARIA attributes for accessibility\n            this.setAttribute('role', 'listitem');\n            \n            // Set initial content visibility\n            this._updateContentVisibility();\n            \n            // Mark as rendered\n            this.rendered = true;\n            this._isRendering = false;\n        }\n    }\n    \n    _createContent() {\n        const content = document.createElement('div');\n        content.className = 'collapsible-item__content';\n        \n        // Filter out any header elements and their content\n        const headerElements = this.querySelectorAll('.collapsible-item__header, .collapsible-item__label, .collapsible-item__icon');\n        const headerElementSet = new Set(headerElements);\n        \n        // Process direct children that are not part of the header\n        const filteredChildren = Array.from(this.childNodes).filter(node => {\n            // Keep only element nodes that are not in the header\n            if (node.nodeType === Node.ELEMENT_NODE) {\n                return !headerElementSet.has(node) && !node.closest('.collapsible-item__header');\n            }\n            // Keep text nodes that are not just whitespace\n            if (node.nodeType === Node.TEXT_NODE) {\n                return node.textContent.trim() !== '' && \n                       !node.textContent.includes('▶') && \n                       !node.textContent.includes('▼');\n            }\n            return false;\n        });\n        \n        // Add the filtered children to the content\n        filteredChildren.forEach(child => {\n            content.appendChild(child.cloneNode(true));\n        });\n        \n        return content;\n    }\n    \n    get expanded() {\n        return this._isExpanded;\n    }\n    \n    set expanded(value) {\n        if (this._isExpanded === value) return; // No change needed\n        \n        this._isExpanded = value;\n        \n        // Update the attribute to reflect the state in the DOM\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the content visibility immediately\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _toggleExpanded() {\n        this._isExpanded = !this._isExpanded;\n        \n        // Update the expanded attribute\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the UI\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _updateContentVisibility() {\n        if (!this._content || !this._header) return;\n        \n        const hideIcon = this.hasAttribute('hide-icon');\n        \n        if (this._isExpanded) {\n            this._content.classList.add('collapsible-item__content--expanded');\n            this._content.style.display = 'block';\n            this._header.setAttribute('aria-expanded', 'true');\n            this.classList.add('collapsible-item--expanded');\n            // Update icon to expanded state (down arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▼');\n            }\n        } else {\n            this._content.classList.remove('collapsible-item__content--expanded');\n            this._content.style.display = 'none';\n            this._header.setAttribute('aria-expanded', 'false');\n            this.classList.remove('collapsible-item--expanded');\n            // Update icon to collapsed state (right arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▶');\n            }\n        }\n    }\n    \n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'removeshift') {\n            this._removeShift = newValue !== null;\n            if (this._removeShift) {\n                this.classList.add('collapsible-item--no-padding');\n            } else {\n                this.classList.remove('collapsible-item--no-padding');\n            }\n        } else if (name === 'hide-icon' && this._header) {\n            // Handle hide-icon attribute changes\n            const iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue !== null) {\n                // hide-icon is set, remove the icon if it exists\n                if (iconEl) {\n                    iconEl.remove();\n                }\n            } else if (this.hasAttribute('icon')) {\n                // hide-icon is removed, add the icon back if we have an icon attribute\n                if (!iconEl) {\n                    const icon = this.getAttribute('icon');\n                    const newIconEl = document.createElement('span');\n                    newIconEl.className = 'collapsible-item__icon';\n                    newIconEl.textContent = icon;\n                    newIconEl.style.marginRight = '0.5rem';\n                    const contentWrapper = this._header.firstElementChild;\n                    if (contentWrapper) {\n                        contentWrapper.insertBefore(newIconEl, contentWrapper.firstChild);\n                    }\n                }\n            }\n        } else if (name === 'expanded') {\n            const wasExpanded = this._isExpanded;\n            this._isExpanded = newValue !== null;\n            \n            // Only update if the state actually changed\n            if (this._isExpanded !== wasExpanded) {\n                this._updateContentVisibility();\n            }\n        } else if (name === 'icon' && this._header) {\n            // Update the icon if it exists, or create it if it doesn't\n            let iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue) {\n                if (!iconEl) {\n                    iconEl = document.createElement('span');\n                    iconEl.className = 'collapsible-item__icon';\n                    this._header.insertBefore(iconEl, this._header.firstChild);\n                }\n                iconEl.textContent = newValue;\n            } else if (iconEl) {\n                this._header.removeChild(iconEl);\n            }\n        } else if (name === 'label' && this._header) {\n            // Update the label if it exists, or create it if it doesn't\n            let labelEl = this._header.querySelector('.collapsible-item__label');\n            if (labelEl) {\n                labelEl.textContent = newValue || '';\n            } else if (newValue) {\n                labelEl = document.createElement('span');\n                labelEl.className = 'collapsible-item__label';\n                labelEl.textContent = newValue;\n                this._header.appendChild(labelEl);\n            }\n        }\n    }\n}\n\n// Define the custom element with the correct name\nconst elementName = 'collapsible-item';\n\n// Check if the element is already defined and undefine it if necessary\nif (typeof window !== 'undefined' && window.customElements) {\n    // First, try to undefine the element if it exists\n    if (window.customElements.get(elementName)) {\n        const oldElement = window.customElements.get(elementName);\n        delete window.customElements._elements[elementName];\n    }\n    \n    // Define the element with the proper configuration\n    window.customElements.define(elementName, CollapsibleItem, { extends: 'li' });\n}","// Core components\nexport * from './molecules/collapsible-list/CollapsibleList.js';\nexport * from './molecules/collapsible-item/CollapsibleItem.js';\n\n// Additional components (dynamically imported when needed)\nlet additionalComponents = {};\n\n// Function to load additional components\nexport async function loadAdditionalComponents() {\n  try {\n    const selectionMenuModule = await import('./organisms/selection-menu/SelectionMenu.js');\n    additionalComponents.SelectionMenu = selectionMenuModule.default || selectionMenuModule;\n  } catch (e) {\n    console.warn('SelectionMenu component not found or failed to load', e);\n  }\n\n  try {\n    const productLayoutModule = await import('./templates/product-layout/ProductLayout.js');\n    additionalComponents.ProductLayout = productLayoutModule.default || productLayoutModule;\n  } catch (e) {\n    console.warn('ProductLayout component not found or failed to load', e);\n  }\n  \n  return additionalComponents;\n}\n\n// Export a function to get additional components\nexport function getAdditionalComponents() {\n  return additionalComponents;\n}\n","/**\n * SelectionMenu Component\n * A collapsible menu that allows selection of leaf nodes using CollapsibleItem\n * \n * @fires item-selected - Dispatched when a leaf node is selected\n * @property {string} items - JSON string representing the menu items structure\n * @property {string} selected - ID of the currently selected item\n */\n\nexport class SelectionMenu extends HTMLElement {\n  static get observedAttributes() {\n    return ['items', 'selected'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._items = [];\n    this._selectedId = null;\n    this._boundOnItemClick = this._onItemClick.bind(this);\n    \n    // Import the CollapsibleItem component\n    import('../../molecules/collapsible-item/CollapsibleItem.js');\n  }\n\n  connectedCallback() {\n    this._render();\n  }\n\n  disconnectedCallback() {\n    this._removeEventListeners();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'items':\n        this._items = newValue ? JSON.parse(newValue) : [];\n        this._render();\n        break;\n      case 'selected':\n        this._selectedId = newValue;\n        this._updateSelectedState();\n        break;\n    }\n  }\n\n  get items() {\n    return JSON.stringify(this._items);\n  }\n\n  set items(value) {\n    this._items = value ? JSON.parse(value) : [];\n    this._render();\n  }\n\n  get selected() {\n    return this._selectedId;\n  }\n\n  set selected(value) {\n    if (this._selectedId !== value) {\n      this._selectedId = value;\n      this._updateSelectedState();\n    }\n  }\n\n  _render() {\n    if (!this.shadowRoot) return;\n    \n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          --primary-color: #4a6cf7;\n          --hover-bg: #f5f8ff;\n          --selected-bg: #e6f0ff;\n          --border-color: #e2e8f0;\n          --text-color: #2d3748;\n          --text-secondary: #4a5568;\n        }\n        \n        .menu-container {\n          border: 1px solid var(--border-color);\n          border-radius: 6px;\n          overflow: hidden;\n        }\n        \n        .menu-item {\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          margin: 2px 0;\n          border-radius: 4px;\n        }\n        \n        .menu-item:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        .menu-item--selected:hover {\n          background-color: var(--selected-bg, #e6f0ff);\n        }\n        \n        /* Style for the collapsible item header */\n        .menu-item::part(header) {\n          padding: 8px 12px;\n          display: flex;\n          align-items: center;\n        }\n        \n        /* Style for the collapsible item content */\n        .menu-item::part(content) {\n          padding: 0;\n          overflow: hidden;\n          transition: max-height 0.3s ease, opacity 0.2s ease;\n          max-height: 0;\n          opacity: 0;\n          margin: 0;\n        }\n        \n        .menu-item::part(content).menu-item__content--expanded {\n          max-height: 1000px; /* Adjust based on your needs */\n          opacity: 1;\n          padding: 4px 0 4px 1rem;\n        }\n        \n        .menu-item__child-list {\n          list-style: none;\n          padding: 0;\n          margin: 0 0 0 1rem;\n        }\n        \n        /* Remove bullets from ul elements */\n        ul {\n          list-style-type: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Ensure list items have no default styling */\n        li {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Leaf item styles */\n        .menu-item__leaf {\n          display: flex;\n          align-items: center;\n          padding: 4px 12px;\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          border-radius: 4px;\n        }\n        \n        .menu-item__leaf:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item__leaf.menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        /* Arrow icon for collapsible items */\n        .menu-item__arrow {\n          display: inline-block;\n          width: 12px;\n          text-align: center;\n          transition: transform 0.2s ease;\n        }\n        \n        .menu-item[expanded] .menu-item__arrow {\n          transform: rotate(90deg);\n        }\n      </style>\n      <div class=\"menu-container\">\n        ${this._renderItems(this._items, 0)}\n      </div>\n    `;\n    \n    this._addEventListeners();\n  }\n  \n  _renderItems(items, level = 0) {\n    if (!items || !items.length) return '';\n    \n    // Create a container for the list\n    const listContainer = document.createElement('ul');\n    listContainer.style.listStyle = 'none';\n    listContainer.style.padding = '0';\n    listContainer.style.margin = '0';\n    \n    items.forEach(item => {\n      const hasChildren = item.children && item.children.length > 0;\n      const isSelected = this._selectedId === item.id;\n      \n      // Create list item\n      const li = document.createElement('li');\n      li.setAttribute('data-id', item.id);\n      \n      if (hasChildren) {\n        // For items with children, use collapsible-item\n        li.setAttribute('is', 'collapsible-item');\n        li.setAttribute('data-id', item.id);\n        li.setAttribute('label', item.name);\n        \n        // Determine initial state\n        const hasSelectedDescendant = this._hasSelectedDescendant(item);\n        const isExpanded = hasSelectedDescendant || isSelected;\n        \n        // Set initial expanded state\n        if (isExpanded) {\n          li.setAttribute('expanded', '');\n        }\n        \n        // Set the arrow icon using the icon attribute\n        li.setAttribute('icon', isExpanded ? '▼' : '▶');\n        li.style.marginRight = '8px';\n        li.style.transition = 'transform 0.2s ease';\n        \n        if (isSelected) {\n          li.classList.add('menu-item--selected');\n        }\n        \n        // Create and append child list\n        const childList = document.createElement('ul');\n        childList.className = 'menu-item__child-list';\n        childList.innerHTML = this._renderItems(item.children, level + 1);\n        \n        // Create content container with proper styling\n        const contentSlot = document.createElement('div');\n        contentSlot.slot = 'content';\n        contentSlot.className = 'menu-item__content';\n        \n        // Add the child list to the content slot\n        contentSlot.appendChild(childList);\n        \n        // Add the content slot to the collapsible item\n        li.appendChild(contentSlot);\n        \n        // Handle the toggle event to update the content visibility\n        li.addEventListener('toggle', (e) => {\n          contentSlot.style.display = e.detail.expanded ? 'block' : 'none';\n        });\n      } else {\n        // For leaf nodes, just use a span\n        const span = document.createElement('span');\n        span.className = 'menu-item__leaf';\n        if (isSelected) span.classList.add('menu-item--selected');\n        \n      \n        \n        // Add label\n        const label = document.createElement('span');\n        label.className = 'menu-item__label';\n        label.textContent = item.name;\n        span.appendChild(label);\n        \n        // Add click handler for selection\n        span.addEventListener('click', (e) => {\n          e.stopPropagation();\n          this._selectedId = item.id;\n          this._updateSelectedState();\n          this.dispatchEvent(new CustomEvent('item-selected', {\n            detail: {\n              id: item.id,\n              item: item,\n              name: item.name\n            },\n            bubbles: true,\n            composed: true\n          }));\n        });\n        \n        li.appendChild(span);\n      }\n      \n      listContainer.appendChild(li);\n    });\n    \n    return level === 0 ? listContainer.outerHTML : listContainer.innerHTML;\n  }\n  \n  _addEventListeners() {\n    this.shadowRoot.addEventListener('click', this._boundOnItemClick);\n  }\n  \n  _removeEventListeners() {\n    this.shadowRoot.removeEventListener('click', this._boundOnItemClick);\n  }\n  \n  _onItemClick(event) {\n    // Handle leaf node clicks\n    const leafNode = event.target.closest('.menu-item__leaf');\n    if (leafNode) {\n      event.stopPropagation();\n      const itemId = leafNode.getAttribute('data-id');\n      if (itemId) {\n        this.selected = itemId;\n        this._updateSelectedState();\n        this.dispatchEvent(new CustomEvent('item-selected', {\n          detail: { id: itemId },\n          bubbles: true,\n          composed: true\n        }));\n      }\n      return;\n    }\n    \n    // Handle collapsible item clicks\n    const header = event.target.closest('.collapsible-item__header');\n    if (!header) return;\n    \n    const itemElement = header.parentElement;\n    if (itemElement && itemElement.getAttribute('is') === 'collapsible-item') {\n      event.stopPropagation();\n      \n      // Toggle the expanded state\n      const isExpanded = itemElement.hasAttribute('expanded');\n      const arrowIcon = itemElement.querySelector('.menu-item__arrow');\n      \n      if (isExpanded) {\n        itemElement.removeAttribute('expanded');\n        if (arrowIcon) arrowIcon.textContent = '▶';\n      } else {\n        itemElement.setAttribute('expanded', '');\n        if (arrowIcon) arrowIcon.textContent = '▼';\n      }\n      \n      // Dispatch a custom event for the toggle action\n      itemElement.dispatchEvent(new CustomEvent('toggle', {\n        detail: { expanded: !isExpanded },\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n  \n  _updateSelectedState() {\n    if (!this.shadowRoot) return;\n    \n    // Remove selected class from all items\n    const allCollapsibleItems = this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]');\n    const allLeafItems = this.shadowRoot.querySelectorAll('.menu-item__leaf');\n    \n    allCollapsibleItems.forEach(item => {\n      item.classList.remove('menu-item--selected');\n      item.removeAttribute('selected');\n    });\n    \n    allLeafItems.forEach(leaf => {\n      leaf.classList.remove('menu-item--selected');\n    });\n    \n    // Add selected class to the selected item\n    if (this._selectedId) {\n      \n      // Check collapsible items\n      const selectedCollapsibleItem = this.shadowRoot.querySelector(`li[is=\"collapsible-item\"][data-id=\"${this._selectedId}\"]`);\n      if (selectedCollapsibleItem) {\n        selectedCollapsibleItem.classList.add('menu-item--selected');\n        selectedCollapsibleItem.setAttribute('selected', '');\n      }\n      \n      // Check leaf items\n      const selectedLeafItem = this.shadowRoot.querySelector(`li[data-id=\"${this._selectedId}\"] .menu-item__leaf`);\n      if (selectedLeafItem) {\n        selectedLeafItem.classList.add('menu-item--selected');\n      }\n      \n      // If we didn't find the item, it might be because it's in a closed collapsible item\n      if (!selectedCollapsibleItem && !selectedLeafItem) {\n        console.warn('Could not find selected item in the DOM. It might be in a closed collapsible section.');\n      }\n    }\n  }\n  \n  _hasSelectedDescendant(item) {\n    if (!item) return false;\n    \n    // Check if this item is selected\n    if (item.id === this._selectedId) return true;\n    \n    // Check if any child is selected\n    if (item.children) {\n      return item.children.some(child => this._hasSelectedDescendant(child));\n    }\n    \n    return false;\n  }\n  \n  _findItemById(items, id) {\n    if (!items || !items.length) return null;\n    \n    for (const item of items) {\n      if (item.id === id) return item;\n      if (item.children) {\n        const found = this._findItemById(item.children, id);\n        if (found) return found;\n      }\n    }\n    return null;\n  }\n}\n\n// Define the custom element\nif (!customElements.get('selection-menu')) {\n  customElements.define('selection-menu', SelectionMenu);\n}","import { CollapsibleItem } from '../../molecules/collapsible-item/CollapsibleItem.js';\n\nexport class ImageCollection extends HTMLElement {\n    static get observedAttributes() {\n        return ['images'];\n    }\n\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this._images = [];\n        this._handleToggle = this._handleToggle.bind(this);\n        this._currentOpenIndex = 0;\n    }\n\n    get images() {\n        return this._images;\n    }\n\n    set images(value) {\n        if (Array.isArray(value)) {\n            this._images = value;\n            this.render();\n        } else if (typeof value === 'string') {\n            try {\n                this._images = JSON.parse(value);\n                this.render();\n            } catch (e) {\n            }\n        }\n    }\n\n    connectedCallback() {\n        this.render();\n        this.shadowRoot.addEventListener('toggle', this._handleToggle);\n    }\n\n    disconnectedCallback() {\n        this.shadowRoot.removeEventListener('toggle', this._handleToggle);\n    }\n\n    _handleToggle(event) {\n        // Prevent event from bubbling up\n        event.stopPropagation();\n        \n        // Prevent reentrant calls\n        if (this._isHandlingToggle) return;\n        this._isHandlingToggle = true;\n        \n        let index = -1;\n        let wasExpanded = false;\n        \n        try {\n            \n            // Find the clicked collapsible item by traversing up the composed path\n            const target = event.composedPath().find(\n                node => node.nodeType === Node.ELEMENT_NODE && \n                       node.getAttribute && \n                       node.getAttribute('is') === 'collapsible-item'\n            );\n            \n            if (!target) {\n                return;\n            }\n\n            // Get all collapsible items\n            const allItems = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n            index = allItems.indexOf(target);\n            \n            if (index === -1) {\n                return;\n            }\n            \n            // Prevent toggling if this item is already open\n            if (index === this._currentOpenIndex) {\n                return;\n            }\n            \n            wasExpanded = target.expanded;\n            \n            // Update all items\n            \n            // First, close all items except the target\n            allItems.forEach((item, i) => {\n                if (i !== index && item.expanded) {\n                    item.expanded = false;\n                }\n            });\n            \n            // Then toggle the target item if needed\n            if (index === this._currentOpenIndex) {\n                // Clicked the currently open item - close it\n                target.expanded = false;\n                this._currentOpenIndex = -1;\n            } else {\n                // Open the clicked item\n                target.expanded = true;\n                this._currentOpenIndex = index;\n            }\n        } finally {\n            // Always clear the flag, even if an error occurred\n            this._isHandlingToggle = false;\n        }\n        \n        // Dispatch our custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { \n                index,\n                expanded: !wasExpanded,\n                source: 'image-collection'\n            },\n            bubbles: true,\n            composed: true\n        }));\n    }\n\n    \n    _onItemToggle(event) {\n        // Stop propagation to prevent double-handling\n        event.stopPropagation();\n        \n        const targetItem = event.target.closest('li[is=\"collapsible-item\"]');\n        if (!targetItem) return;\n\n        const items = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n        const index = items.indexOf(targetItem);\n        \n        if (index === -1) return;\n\n        // If the clicked item is being closed, just update our state\n        if (!event.detail.expanded) {\n            if (this._currentOpenIndex === index) {\n                this._currentOpenIndex = -1;\n            }\n            return;\n        }\n\n        // Close the previously open item if it's different from the clicked one\n        if (this._currentOpenIndex !== -1 && this._currentOpenIndex !== index) {\n            const previousItem = items[this._currentOpenIndex];\n            if (previousItem) {\n                previousItem.toggle(false);\n            }\n        }\n        \n        this._currentOpenIndex = index;\n    }\n\n    render() {\n        if (!this.shadowRoot) return;\n        \n        // Only expand the first item if no item is currently expanded\n        if (this._currentOpenIndex === -1 && this._images.length > 0) {\n            this._currentOpenIndex = 0;\n        }\n        \n        this.shadowRoot.innerHTML = `\n            <style>\n                .image-collection {\n                    width: 100%;\n                    max-width: 800px;\n                    margin: 0 auto;\n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n                }\n                \n                .image-collection__container {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 0;\n                    width: 100%;\n                    list-style: none;\n                    padding: 0;\n                }\n                \n                .image-collection__item {\n                    width: 100%;\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection__image {\n                    width: 100%;\n                    height: auto;\n                    display: block;\n                }\n                \n                .image-collection__title {\n                    font-weight: 600;\n                    padding: 0.8rem 1rem;\n                    background-color: #f8fafc;\n                    width: 100%;\n                    cursor: pointer;\n                    transition: background-color 0.2s;\n                }\n                \n                .image-collection__title:hover {\n                    background-color: #f1f5f9;\n                }\n                \n                .image-collection .collapsible-item__header {\n                    padding: 0.5rem 1rem;\n                    background: none;\n                    border: none;\n                    width: 100%;\n                    text-align: left;\n                    cursor: pointer;\n                }\n                \n                .image-collection .collapsible-item__content {\n                    margin: 0;\n                    transition: all 0.3s ease;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"] {\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"]:last-child {\n                    margin-bottom: 0;\n                }\n            </style>\n            <div class=\"image-collection\">\n                <ul class=\"image-collection__container\">\n                    ${this._images.map((image, index) => `\n                        <li is=\"collapsible-item\" \n                            label=\"${image.title}\" \n                            ${image.removeshift ? 'removeshift=\"true\"' : ''}\n                            ${this._currentOpenIndex === index ? 'expanded' : ''}\n                            hide-icon\n                            >\n                            <div slot=\"content\">\n                                <img \n                                    class=\"image-collection__image\" \n                                    src=\"${image.src}\" \n                                    alt=\"${image.title}\"\n                                    loading=\"lazy\"\n                                >\n                            </div>\n                        </li>\n                    `).join('')}\n                </ul>\n            </div>\n        `;\n    }\n}\n\nif (!customElements.get('image-collection')) {\n    customElements.define('image-collection', ImageCollection);\n}","// Import components\nimport { CollapsibleItem } from './components/molecules/collapsible-item/CollapsibleItem.js';\nimport { CollapsibleList } from './components/molecules/collapsible-list/CollapsibleList.js';\nimport { IconLabel } from './components/atoms/icon-label/IconLabel.js';\nimport { SelectionMenu } from './components/organisms/selection-menu/SelectionMenu.js';\nimport { ImageCollection } from './components/organisms/image-collection/ImageCollection.js';\n\n// Initialize web components\nexport function defineCustomElements() {\n  // Define all custom elements with their actual implementations\n  customElements.define('collapsible-list', CollapsibleList);\n  customElements.define('collapsible-item', CollapsibleItem, { extends: 'li' });\n  customElements.define('icon-label', IconLabel);\n  customElements.define('selection-menu', SelectionMenu);\n  customElements.define('image-collection', ImageCollection);\n  customElements.define('product-layout', class extends HTMLElement {\n    constructor() {\n      super();\n      // Implementation will be added based on actual component logic\n    }\n  });\n\n  // Wait for all elements to be defined\n  return Promise.all([\n    customElements.whenDefined('collapsible-list'),\n    customElements.whenDefined('collapsible-item'),\n    customElements.whenDefined('icon-label'),\n    customElements.whenDefined('selection-menu'),\n    customElements.whenDefined('image-collection'),\n    customElements.whenDefined('product-layout')\n  ]);\n}\n\n// Auto-define components if in a browser environment\nif (typeof window !== 'undefined' && !window.__GENERIC_WEBCOMPONENTS_DEFINED__) {\n  window.__GENERIC_WEBCOMPONENTS_DEFINED__ = true;\n  defineCustomElements().catch(console.error);\n}\n","import * as webComponents from '../../components';\nimport { defineCustomElements } from '../../init.js';\n\nconst VuePlugin = {\n  install(app) {\n    // Initialize web components\n    defineCustomElements().catch(console.error);\n    // Register all web components as Vue components\n    Object.entries(webComponents).forEach(([componentName, webComponent]) => {\n      if (typeof webComponent === 'function' && webComponent.name) {\n        const tagName = webComponent.is || componentName.toLowerCase();\n        \n        // Create a Vue component definition\n        const vueComponent = {\n          name: componentName,\n          inheritAttrs: false,\n          emits: [], // Will be populated with event names\n          props: {},\n          render() {\n            // Convert kebab-case attributes to camelCase for web components\n            const attrs = Object.entries(this.$attrs).reduce((acc, [key, value]) => {\n              // Convert kebab-case to camelCase for props\n              const camelKey = key.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n              acc[camelKey] = value;\n              return acc;\n            }, {});\n\n            // Add event listeners\n            const on = {};\n            Object.keys(this.$listeners).forEach((event) => {\n              on[event] = this.$listeners[event];\n            });\n\n            return this.$createElement(\n              tagName,\n              {\n                attrs,\n                on,\n                ref: 'webComponent',\n              },\n              this.$slots.default\n            );\n          },\n        };\n\n        // Register the component globally\n        app.component(componentName, vueComponent);\n      }\n    });\n  },\n};\n\nexport default VuePlugin;\n"],"names":["CollapsibleList","container","slot","style","mutations","shouldUpdate","mutation","node","isReversed","processItems","items","item","nestedItems","nestedLists","processLists","lists","list","error","target","exceptItem","firstItem","IconLabel","value","isImage","icon","label","name","oldValue","newValue","CollapsibleItem","event","isExpanding","header","contentWrapper","hideIcon","iconEl","labelEl","existingContent","child","e","content","headerElements","headerElementSet","newIconEl","wasExpanded","elementName","additionalComponents","loadAdditionalComponents","selectionMenuModule","SelectionMenu$1","productLayoutModule","getAdditionalComponents","SelectionMenu","CollapsibleItem$1","level","listContainer","hasChildren","isSelected","li","isExpanded","childList","contentSlot","span","leafNode","itemId","itemElement","arrowIcon","allCollapsibleItems","allLeafItems","leaf","selectedCollapsibleItem","selectedLeafItem","id","found","ImageCollection","index","allItems","i","targetItem","previousItem","image","defineCustomElements","VuePlugin","app","webComponents","componentName","webComponent","tagName","vueComponent","attrs","acc","key","camelKey","g","on"],"mappings":"AAKO,MAAMA,UAAwB,YAAY;AAAA,EAC/C,WAAW,qBAAqB;AAC9B,WAAO,CAAC,mBAAmB,eAAe,WAAW;AAAA,EACtD;AAAA,EAED,cAAc;AACZ,aACA,KAAK,aAAa,EAAE,MAAM,OAAQ,CAAA,GAClC,KAAK,cAAc,IACnB,KAAK,oBAAoB,KAAK,kBAAkB,KAAK,IAAI;AAEzD,UAAMC,IAAY,SAAS,cAAc,KAAK,GACxCC,IAAO,SAAS,cAAc,MAAM,GAGpCC,IAAQ,SAAS,cAAc,OAAO;AAC5C,IAAAA,EAAM,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAwCpBF,EAAU,YAAYC,CAAI,GAC1B,KAAK,WAAW,OAAOC,GAAOF,CAAS;AAAA,EACxC;AAAA,EAED,MAAM,oBAAoB;AACxB,IAAK,KAAK,iBACR,KAAK,qBAAoB,GACzB,KAAK,eAAe,IAGpB,MAAM,KAAK,yBAGX,KAAK,iBAAiB,UAAU,KAAK,iBAAiB,GAGlD,KAAK,aAAa,WAAW,KAC/B,KAAK,uBAAsB,IAK/B,KAAK,uBAAsB;AAAA,EAC5B;AAAA,EAED,uBAAuB;AACrB,IAAK,KAAK,aAAa,MAAM,KAC3B,KAAK,aAAa,QAAQ,MAAM,GAG9B,CAAC,KAAK,aAAa,YAAY,KAAK,CAAC,KAAK,aAAa,iBAAiB,KAC1E,QAAQ,KAAK,oFAAoF;AAAA,EAEpG;AAAA,EAED,yBAAyB;AAEvB,SAAK,YAAY,IAAI,iBAAiB,OAAOG,MAAc;AACzD,UAAIC,IAAe;AAEnB,iBAAWC,KAAYF;AACrB,YAAIE,EAAS,SAAS,gBAAgBA,EAAS,kBAAkB,mBAAmB;AAClF,UAAAD,IAAe;AACf;AAAA,QACV,WAAmBC,EAAS,SAAS,aAAa;AAExC,qBAAWC,KAAQD,EAAS;AAC1B,gBAAIC,EAAK,aAAa,KAAK,iBACtBA,EAAK,QAAQ,kBAAkB,KAAKA,EAAK,QAAQ,kBAAkB,IAAI;AAC1E,cAAAF,IAAe;AACf;AAAA,YACD;AAEH,cAAIA,EAAc;AAAA,QACnB;AAGH,MAAIA,KACF,MAAM,KAAK;IAEnB,CAAK,GAGD,KAAK,UAAU,QAAQ,MAAM;AAAA,MAC3B,YAAY;AAAA,MACZ,iBAAiB,CAAC,iBAAiB;AAAA,MACnC,WAAW;AAAA,MACX,SAAS;AAAA,IACf,CAAK;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAMD,MAAM,wBAAwB;AAE5B,QAAI,MAAK,aACT;AAAA,WAAK,cAAc;AAEnB,UAAI;AACF,cAAMG,IAAa,KAAK,aAAa,iBAAiB,KACrC,KAAK,aAAa,iBAAiB,MAAM;AAG1D,QAAI,KAAK,aACP,KAAK,UAAU;AAIjB,cAAMC,IAAe,OAAOC,MAAU;AACpC,qBAAWC,KAAQD,GAAO;AAExB,YAAIF,IACFG,EAAK,aAAa,mBAAmB,EAAE,IAEvCA,EAAK,gBAAgB,iBAAiB;AAIxC,kBAAMC,IAAcD,EAAK,iBAAiB,2BAA2B;AACrE,YAAIC,EAAY,SAAS,KACvB,MAAMH,EAAa,MAAM,KAAKG,CAAW,CAAC;AAI5C,kBAAMC,IAAcF,EAAK,iBAAiB,2BAA2B;AACrE,YAAIE,EAAY,SAAS,KACvB,MAAMC,EAAa,MAAM,KAAKD,CAAW,CAAC;AAAA,UAE7C;AAAA,QACT,GAGYC,IAAe,OAAOC,MAAU;AACpC,qBAAWC,KAAQD,GAAO;AAExB,gBAAIC,MAAS,KAAM;AAGnB,YAAIR,IACFQ,EAAK,aAAa,mBAAmB,EAAE,IAEvCA,EAAK,gBAAgB,iBAAiB;AAIxC,kBAAMJ,IAAcI,EAAK,iBAAiB,2BAA2B;AACrE,YAAIJ,EAAY,SAAS,KACvB,MAAMH,EAAa,MAAM,KAAKG,CAAW,CAAC;AAI5C,kBAAMC,IAAcG,EAAK,iBAAiB,2BAA2B;AACrE,YAAIH,EAAY,SAAS,KACvB,MAAMC,EAAa,MAAM,KAAKD,CAAW,CAAC;AAAA,UAE7C;AAAA,QACT,GAGYH,IAAQ,KAAK,iBAAiB,2BAA2B;AAC/D,QAAIA,EAAM,SAAS,KACjB,MAAMD,EAAa,MAAM,KAAKC,CAAK,CAAC;AAGtC,cAAMK,IAAQ,KAAK,iBAAiB,2BAA2B;AAC/D,QAAIA,EAAM,SAAS,KACjB,MAAMD,EAAa,MAAM,KAAKC,CAAK,CAAC,GAIlC,KAAK,cACP,KAAK,WAAW;AAAA,MAEnB,SAAQE,GAAO;AACd,gBAAQ,MAAM,mCAAmCA,CAAK;AAAA,MAC5D,UAAc;AAER,QAAI,KAAK,aACP,KAAK,UAAU,QAAQ,MAAM;AAAA,UAC3B,YAAY;AAAA,UACZ,iBAAiB,CAAC,iBAAiB;AAAA,UACnC,WAAW;AAAA,UACX,SAAS;AAAA,QACnB,CAAS,GAEH,KAAK,cAAc;AAAA,MACpB;AAAA;AAAA,EACF;AAAA,EAED,kBAAkB,GAAG;AACnB,QAAI,KAAK,YAAa;AAEtB,UAAMC,IAAS,EAAE;AAGjB,IAAIA,EAAO,kBAAkB,SAC3B,KAAK,cAAc,IAEf,KAAK,aAAa,WAAW,IAE3BA,EAAO,YACT,KAAK,iBAAiBA,CAAM,IAErB,KAAK,aAAa,aAAa,KAEpCA,EAAO,YACT,KAAK,iBAAiBA,CAAM,GAIhC,KAAK,cAAc;AAAA,EAEtB;AAAA,EAED,iBAAiBC,GAAY;AAE3B,QAAI,KAAK,QAAQ,kBAAkB;AACjC;AAIF,IADc,KAAK,iBAAiB,kBAAkB,EAChD,QAAQ,CAAAR,MAAQ;AACpB,MAAIA,MAASQ,MACXR,EAAK,WAAW;AAAA,IAExB,CAAK;AAAA,EACF;AAAA,EAED,gBAAgB;AACd,WAAO,MAAM,KAAK,KAAK,iBAAiB,4BAA4B,CAAC;AAAA,EACtE;AAAA,EAED,yBAAyB;AACvB,QAAI,CAAC,KAAK,aAAa,WAAW,EAAG;AAGrC,QADkB,KAAK,gBACT,WAAW,GAAG;AAE1B,YAAMS,IAAY,KAAK,cAAc,kBAAkB;AACvD,MAAIA,KACFA,EAAU,aAAa,YAAY,EAAE;AAAA,IAExC;AAAA,EACF;AACH;AAGK,eAAe,IAAI,kBAAkB,KACxC,eAAe,OAAO,oBAAoBpB,CAAe;AC9RpD,MAAMqB,UAAkB,YAAY;AAAA,EACzC,WAAW,qBAAqB;AAC9B,WAAO,CAAC,QAAQ,SAAS,SAAS;AAAA,EACtC;AAAA,EAEE,cAAc;AACZ,UAAO,GACP,KAAK,QAAQ,IACb,KAAK,SAAS,IACd,KAAK,WAAW;AAAA,EACpB;AAAA,EAEE,oBAAoB;AAClB,SAAK,QAAS;AAAA,EAClB;AAAA,EAEE,IAAI,OAAO;AACT,WAAO,KAAK;AAAA,EAChB;AAAA,EAEE,IAAI,KAAKC,GAAO;AACd,SAAK,QAAQA,KAAS,IACtB,KAAK,QAAS;AAAA,EAClB;AAAA,EAEE,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EAChB;AAAA,EAEE,IAAI,MAAMA,GAAO;AACf,SAAK,SAASA,KAAS,IACvB,KAAK,QAAS;AAAA,EAClB;AAAA,EAEE,IAAI,UAAU;AACZ,WAAO,KAAK;AAAA,EAChB;AAAA,EAEE,IAAI,QAAQA,GAAO;AACjB,SAAK,WAAWA,MAAU,QAAQA,MAAU,SAC5C,KAAK,QAAS;AAAA,EAClB;AAAA,EAEE,UAAU;AAER,UAAMrB,IAAY,SAAS,cAAc,MAAM;AAY/C,QAXAA,EAAU,MAAM,UAAU,eAC1BA,EAAU,MAAM,aAAa,UAC7BA,EAAU,MAAM,MAAM,UACtBA,EAAU,MAAM,aAAa,WAC7BA,EAAU,MAAM,QAAQ,gBAEpB,KAAK,aACPA,EAAU,MAAM,gBAAgB,gBAI9B,KAAK,OAAO;AACd,YAAMsB,IAAU,KAAK,MAAM,WAAW,OAAO,KAC9B,KAAK,MAAM,WAAW,MAAM,KAC5B,KAAK,MAAM,WAAW,GAAG,KACzB,yCAAyC,KAAK,KAAK,KAAK,GAEjEC,IAAOD,IAAU,SAAS,cAAc,KAAK,IAAI,SAAS,cAAc,MAAM;AACpF,MAAAC,EAAK,MAAM,UAAU,eACrBA,EAAK,MAAM,aAAa,UACxBA,EAAK,MAAM,iBAAiB,UAC5BA,EAAK,MAAM,QAAQ,OACnBA,EAAK,MAAM,SAAS,OAEhBD,KACFC,EAAK,MAAM,KAAK,OAChBA,EAAK,MAAM,IACXA,EAAK,UAAU,QACfA,EAAK,MAAM,YAAY,cAEvBA,EAAK,cAAc,KAAK,OACxBA,EAAK,MAAM,WAAW,OACtBA,EAAK,MAAM,aAAa,MAG1BvB,EAAU,YAAYuB,CAAI;AAAA,IAChC;AAGI,QAAI,KAAK,QAAQ;AACf,YAAMC,IAAQ,SAAS,cAAc,MAAM;AAC3C,MAAAA,EAAM,cAAc,KAAK,QACzBxB,EAAU,YAAYwB,CAAK;AAAA,IACjC;AAGI,SAAK,YAAY,IACjB,KAAK,YAAYxB,CAAS;AAAA,EAC9B;AAAA,EAEE,yBAAyByB,GAAMC,GAAUC,GAAU;AACjD,IAAID,MAAaC,MAEbF,MAAS,SACX,KAAK,QAAQE,KAAY,KAChBF,MAAS,UAClB,KAAK,SAASE,KAAY,KACjBF,MAAS,cAClB,KAAK,WAAWE,MAAa,QAAQA,MAAa,UAGpD,KAAK,QAAS;AAAA,EAClB;AACA;AAGK,eAAe,IAAI,YAAY,KAClC,eAAe,OAAO,cAAcP,CAAS;ACvGxC,MAAMQ,UAAwB,cAAc;AAAA,EAC/C,WAAW,qBAAqB;AAC5B,WAAO,CAAC,YAAY,QAAQ,SAAS,eAAe,WAAW;AAAA,EACvE;AAAA,EAEI,cAAc;AACV,UAAO,GACP,KAAK,cAAc,IACnB,KAAK,eAAe,KAAK,aAAa,KAAK,IAAI,GAC/C,KAAK,UAAU,MACf,KAAK,WAAW,MAChB,KAAK,iBAAiB,IACtB,KAAK,eAAe,IACpB,KAAK,WAAW,IAGhB,KAAK,UAAU,IAAI,kBAAkB,GAGjC,KAAK,aAAa,UAAU,MAC5B,KAAK,cAAc,IACnB,KAAK,UAAU,IAAI,4BAA4B,IAI/C,KAAK,aAAa,aAAa,KAC/B,KAAK,UAAU,IAAI,8BAA8B;AAAA,EAE7D;AAAA,EAEI,oBAAoB;AAEhB,IAAK,KAAK,aAAa,MAAM,KACzB,KAAK,aAAa,QAAQ,UAAU,GAInC,KAAK,aACN,KAAK,QAAS,GACd,KAAK,WAAW,IAChB,KAAK,mBAAoB,GAGzB,KAAK,yBAA0B,IAInC,KAAK,UAAU,IAAI,kBAAkB,GAGjC,KAAK,aAAa,UAAU,KAC5B,KAAK,cAAc,IACnB,KAAK,UAAU,IAAI,4BAA4B,MAE/C,KAAK,cAAc,IACnB,KAAK,UAAU,OAAO,4BAA4B;AAAA,EAE9D;AAAA,EAEI,uBAAuB;AACnB,SAAK,sBAAuB;AAAA,EACpC;AAAA,EAEI,qBAAqB;AAEjB,SAAK,iBAAiB,SAAS,KAAK,YAAY;AAAA,EACxD;AAAA,EAEI,wBAAwB;AACpB,SAAK,oBAAoB,SAAS,KAAK,YAAY;AAAA,EAC3D;AAAA,EAEI,aAAaC,GAAO;AAGhB,QAAI,CADWA,EAAM,OAAO,QAAQ,2BAA2B,EAClD;AAGb,IAAAA,EAAM,eAAgB,GACtBA,EAAM,gBAAiB;AAGvB,UAAMC,IAAc,CAAC,KAAK,aAAa,UAAU;AAGjD,IAAIA,IACA,KAAK,aAAa,YAAY,EAAE,IAEhC,KAAK,gBAAgB,UAAU,GAInC,KAAK,cAAcA,GACnB,KAAK,yBAA0B,GAG/B,KAAK,cAAc,IAAI,YAAY,UAAU;AAAA,MACzC,QAAQ,EAAE,UAAUA,EAAa;AAAA,MACjC,SAAS;AAAA,MACT,UAAU;AAAA,IACtB,CAAS,CAAC;AAAA,EACV;AAAA,EAEI,gBAAgB;AACZ,UAAMC,IAAS,SAAS,cAAc,KAAK;AAC3C,IAAAA,EAAO,YAAY;AAGnB,UAAMC,IAAiB,SAAS,cAAc,KAAK;AACnD,IAAAA,EAAe,MAAM,UAAU,QAC/BA,EAAe,MAAM,aAAa,UAClCA,EAAe,MAAM,OAAO;AAG5B,UAAMC,IAAW,KAAK,aAAa,WAAW,GACxCV,IAAO,KAAK,aAAa,MAAM;AACrC,QAAIA,KAAQ,CAACU,GAAU;AACnB,YAAMC,IAAS,SAAS,cAAc,MAAM;AAC5C,MAAAA,EAAO,YAAY,0BACnBA,EAAO,cAAcX,GACrBW,EAAO,MAAM,cAAc,UAC3BF,EAAe,YAAYE,CAAM;AAAA,IAC7C;AAGQ,UAAMV,IAAQ,KAAK,aAAa,OAAO,KAAK;AAC5C,QAAIA,GAAO;AACP,YAAMW,IAAU,SAAS,cAAc,MAAM;AAC7C,MAAAA,EAAQ,YAAY,2BACpBA,EAAQ,cAAcX,GACtBQ,EAAe,YAAYG,CAAO;AAAA,IAC9C;AAGQ,WAAAJ,EAAO,YAAYC,CAAc,GAE1BD;AAAA,EACf;AAAA,EAEI,UAAU;AAEN,QAAI,CAAC,KAAK,cAAc;AACpB,WAAK,eAAe;AAGpB,YAAMK,IAAkB,CAAE;AAQ1B,WAPA,MAAM,KAAK,KAAK,QAAQ,EAAE,QAAQ,CAAAC,MAAS;AACvC,QAAIA,MAAU,KAAK,WAAWA,MAAU,KAAK,YACzCD,EAAgB,KAAKC,CAAK;AAAA,MAE9C,CAAa,GAGM,KAAK;AACR,aAAK,YAAY,KAAK,UAAU;AAIpC,WAAK,UAAU,KAAK,cAAe,GACnC,KAAK,YAAY,KAAK,OAAO,GAGzB,KAAK,YACL,KAAK,QAAQ,aAAa,QAAQ,QAAQ,GAC1C,KAAK,QAAQ,aAAa,iBAAiB,KAAK,cAAc,SAAS,OAAO,GAC9E,KAAK,QAAQ,aAAa,YAAY,GAAG,GAGzC,KAAK,QAAQ,iBAAiB,WAAW,CAACC,MAAM;AAC5C,SAAIA,EAAE,QAAQ,WAAWA,EAAE,QAAQ,SAC/BA,EAAE,eAAgB,GAClB,KAAK,gBAAiB;AAAA,MAE9C,CAAiB,IAIL,KAAK,WAAW,KAAK,eAAgB,GACjC,KAAK,aACL,KAAK,YAAY,KAAK,QAAQ,GAG9BF,EAAgB,QAAQ,CAAAC,MAAS;AAC7B,aAAK,SAAS,YAAYA,CAAK;AAAA,MACnD,CAAiB,IAIL,KAAK,aAAa,QAAQ,UAAU,GAGpC,KAAK,yBAA0B,GAG/B,KAAK,WAAW,IAChB,KAAK,eAAe;AAAA,IAChC;AAAA,EACA;AAAA,EAEI,iBAAiB;AACb,UAAME,IAAU,SAAS,cAAc,KAAK;AAC5C,IAAAA,EAAQ,YAAY;AAGpB,UAAMC,IAAiB,KAAK,iBAAiB,8EAA8E,GACrHC,IAAmB,IAAI,IAAID,CAAc;AAkB/C,WAfyB,MAAM,KAAK,KAAK,UAAU,EAAE,OAAO,CAAAlC,MAEpDA,EAAK,aAAa,KAAK,eAChB,CAACmC,EAAiB,IAAInC,CAAI,KAAK,CAACA,EAAK,QAAQ,2BAA2B,IAG/EA,EAAK,aAAa,KAAK,YAChBA,EAAK,YAAY,KAAI,MAAO,MAC5B,CAACA,EAAK,YAAY,SAAS,GAAG,KAC9B,CAACA,EAAK,YAAY,SAAS,GAAG,IAElC,EACV,EAGgB,QAAQ,CAAA+B,MAAS;AAC9B,MAAAE,EAAQ,YAAYF,EAAM,UAAU,EAAI,CAAC;AAAA,IACrD,CAAS,GAEME;AAAA,EACf;AAAA,EAEI,IAAI,WAAW;AACX,WAAO,KAAK;AAAA,EACpB;AAAA,EAEI,IAAI,SAASlB,GAAO;AAChB,IAAI,KAAK,gBAAgBA,MAEzB,KAAK,cAAcA,GAGf,KAAK,cACL,KAAK,aAAa,YAAY,EAAE,IAEhC,KAAK,gBAAgB,UAAU,GAInC,KAAK,yBAA0B,GAG/B,KAAK,cAAc,IAAI,YAAY,UAAU;AAAA,MACzC,QAAQ,EAAE,UAAU,KAAK,YAAa;AAAA,MACtC,SAAS;AAAA,MACT,UAAU;AAAA,IACtB,CAAS,CAAC;AAAA,EACV;AAAA,EAEI,kBAAkB;AACd,SAAK,cAAc,CAAC,KAAK,aAGrB,KAAK,cACL,KAAK,aAAa,YAAY,EAAE,IAEhC,KAAK,gBAAgB,UAAU,GAInC,KAAK,yBAA0B,GAG/B,KAAK,cAAc,IAAI,YAAY,UAAU;AAAA,MACzC,QAAQ,EAAE,UAAU,KAAK,YAAa;AAAA,MACtC,SAAS;AAAA,MACT,UAAU;AAAA,IACtB,CAAS,CAAC;AAAA,EACV;AAAA,EAEI,2BAA2B;AACvB,QAAI,CAAC,KAAK,YAAY,CAAC,KAAK,QAAS;AAErC,UAAMY,IAAW,KAAK,aAAa,WAAW;AAE9C,IAAI,KAAK,eACL,KAAK,SAAS,UAAU,IAAI,qCAAqC,GACjE,KAAK,SAAS,MAAM,UAAU,SAC9B,KAAK,QAAQ,aAAa,iBAAiB,MAAM,GACjD,KAAK,UAAU,IAAI,4BAA4B,GAE1CA,KACD,KAAK,aAAa,QAAQ,GAAG,MAGjC,KAAK,SAAS,UAAU,OAAO,qCAAqC,GACpE,KAAK,SAAS,MAAM,UAAU,QAC9B,KAAK,QAAQ,aAAa,iBAAiB,OAAO,GAClD,KAAK,UAAU,OAAO,4BAA4B,GAE7CA,KACD,KAAK,aAAa,QAAQ,GAAG;AAAA,EAG7C;AAAA,EAEI,yBAAyBR,GAAMC,GAAUC,GAAU;AAC/C,QAAIF,MAAS;AACT,WAAK,eAAeE,MAAa,MAC7B,KAAK,eACL,KAAK,UAAU,IAAI,8BAA8B,IAEjD,KAAK,UAAU,OAAO,8BAA8B;AAAA,aAEjDF,MAAS,eAAe,KAAK,SAAS;AAE7C,YAAMS,IAAS,KAAK,QAAQ,cAAc,yBAAyB;AACnE,UAAIP,MAAa;AAEb,QAAIO,KACAA,EAAO,OAAQ;AAAA,eAEZ,KAAK,aAAa,MAAM,KAE3B,CAACA,GAAQ;AACT,cAAMX,IAAO,KAAK,aAAa,MAAM,GAC/BmB,IAAY,SAAS,cAAc,MAAM;AAC/C,QAAAA,EAAU,YAAY,0BACtBA,EAAU,cAAcnB,GACxBmB,EAAU,MAAM,cAAc;AAC9B,cAAMV,IAAiB,KAAK,QAAQ;AACpC,QAAIA,KACAA,EAAe,aAAaU,GAAWV,EAAe,UAAU;AAAA,MAExF;AAAA,IAEA,WAAmBP,MAAS,YAAY;AAC5B,YAAMkB,IAAc,KAAK;AACzB,WAAK,cAAchB,MAAa,MAG5B,KAAK,gBAAgBgB,KACrB,KAAK,yBAA0B;AAAA,IAEtC,WAAUlB,MAAS,UAAU,KAAK,SAAS;AAExC,UAAIS,IAAS,KAAK,QAAQ,cAAc,yBAAyB;AACjE,MAAIP,KACKO,MACDA,IAAS,SAAS,cAAc,MAAM,GACtCA,EAAO,YAAY,0BACnB,KAAK,QAAQ,aAAaA,GAAQ,KAAK,QAAQ,UAAU,IAE7DA,EAAO,cAAcP,KACdO,KACP,KAAK,QAAQ,YAAYA,CAAM;AAAA,IAEtC,WAAUT,MAAS,WAAW,KAAK,SAAS;AAEzC,UAAIU,IAAU,KAAK,QAAQ,cAAc,0BAA0B;AACnE,MAAIA,IACAA,EAAQ,cAAcR,KAAY,KAC3BA,MACPQ,IAAU,SAAS,cAAc,MAAM,GACvCA,EAAQ,YAAY,2BACpBA,EAAQ,cAAcR,GACtB,KAAK,QAAQ,YAAYQ,CAAO;AAAA,IAEhD;AAAA,EACA;AACA;AAGA,MAAMS,IAAc;AAGhB,OAAO,SAAW,OAAe,OAAO,mBAEpC,OAAO,eAAe,IAAIA,CAAW,MAClB,OAAO,eAAe,IAAIA,CAAW,GACxD,OAAO,OAAO,eAAe,UAAUA,CAAW,IAItD,OAAO,eAAe,OAAOA,GAAahB,GAAiB,EAAE,SAAS,MAAM;;;;;ACxYhF,IAAIiB,IAAuB,CAAE;AAGtB,eAAeC,IAA2B;AAC/C,MAAI;AACF,UAAMC,IAAsB,MAAM,QAAqD,QAAA,EAAA,KAAA,MAAAC,CAAA;AACvF,IAAAH,EAAqB,gBAAgBE,EAAoB,WAAWA;AAAA,EACrE,SAAQT,GAAG;AACV,YAAQ,KAAK,uDAAuDA,CAAC;AAAA,EACzE;AAEE,MAAI;AACF,UAAMW,IAAsB,MAAM,OAAO,6BAA6C;AACtF,IAAAJ,EAAqB,gBAAgBI,EAAoB,WAAWA;AAAA,EACrE,SAAQX,GAAG;AACV,YAAQ,KAAK,uDAAuDA,CAAC;AAAA,EACzE;AAEE,SAAOO;AACT;AAGO,SAASK,IAA0B;AACxC,SAAOL;AACT;;;;;;;;ACpBO,MAAMM,UAAsB,YAAY;AAAA,EAC7C,WAAW,qBAAqB;AAC9B,WAAO,CAAC,SAAS,UAAU;AAAA,EAC/B;AAAA,EAEE,cAAc;AACZ,UAAO,GACP,KAAK,aAAa,EAAE,MAAM,OAAM,CAAE,GAClC,KAAK,SAAS,CAAE,GAChB,KAAK,cAAc,MACnB,KAAK,oBAAoB,KAAK,aAAa,KAAK,IAAI,GAGpD,QAA6D,QAAA,EAAA,KAAA,MAAAC,CAAA;AAAA,EACjE;AAAA,EAEE,oBAAoB;AAClB,SAAK,QAAS;AAAA,EAClB;AAAA,EAEE,uBAAuB;AACrB,SAAK,sBAAuB;AAAA,EAChC;AAAA,EAEE,yBAAyB3B,GAAMC,GAAUC,GAAU;AACjD,QAAID,MAAaC;AAEjB,cAAQF,GAAI;AAAA,QACV,KAAK;AACH,eAAK,SAASE,IAAW,KAAK,MAAMA,CAAQ,IAAI,CAAE,GAClD,KAAK,QAAS;AACd;AAAA,QACF,KAAK;AACH,eAAK,cAAcA,GACnB,KAAK,qBAAsB;AAC3B;AAAA,MACR;AAAA,EACA;AAAA,EAEE,IAAI,QAAQ;AACV,WAAO,KAAK,UAAU,KAAK,MAAM;AAAA,EACrC;AAAA,EAEE,IAAI,MAAMN,GAAO;AACf,SAAK,SAASA,IAAQ,KAAK,MAAMA,CAAK,IAAI,CAAE,GAC5C,KAAK,QAAS;AAAA,EAClB;AAAA,EAEE,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EAChB;AAAA,EAEE,IAAI,SAASA,GAAO;AAClB,IAAI,KAAK,gBAAgBA,MACvB,KAAK,cAAcA,GACnB,KAAK,qBAAsB;AAAA,EAEjC;AAAA,EAEE,UAAU;AACR,IAAK,KAAK,eoHtB,KAAK,aAAa,KAAK,QAAQ,CAAC,CAAC;AAAA;AAAA,OAIvC,KAAK,mBAAoB;AAAA,EAC7B;AAAA,EAEE,aAAaZ,GAAO4C,IAAQ,GAAG;AAC7B,QAAI,CAAC5C,KAAS,CAACA,EAAM,OAAQ,QAAO;AAGpC,UAAM6C,IAAgB,SAAS,cAAc,IAAI;AACjD,WAAAA,EAAc,MAAM,YAAY,QAChCA,EAAc,MAAM,UAAU,KAC9BA,EAAc,MAAM,SAAS,KAE7B7C,EAAM,QAAQ,CAAAC,MAAQ;AACpB,YAAM6C,IAAc7C,EAAK,YAAYA,EAAK,SAAS,SAAS,GACtD8C,IAAa,KAAK,gBAAgB9C,EAAK,IAGvC+C,IAAK,SAAS,cAAc,IAAI;AAGtC,UAFAA,EAAG,aAAa,WAAW/C,EAAK,EAAE,GAE9B6C,GAAa;AAEf,QAAAE,EAAG,aAAa,MAAM,kBAAkB,GACxCA,EAAG,aAAa,WAAW/C,EAAK,EAAE,GAClC+C,EAAG,aAAa,SAAS/C,EAAK,IAAI;AAIlC,cAAMgD,IADwB,KAAK,uBAAuBhD,CAAI,KAClB8C;AAG5C,QAAIE,KACFD,EAAG,aAAa,YAAY,EAAE,GAIhCA,EAAG,aAAa,QAAQC,IAAa,MAAM,GAAG,GAC9CD,EAAG,MAAM,cAAc,OACvBA,EAAG,MAAM,aAAa,uBAElBD,KACFC,EAAG,UAAU,IAAI,qBAAqB;AAIxC,cAAME,IAAY,SAAS,cAAc,IAAI;AAC7C,QAAAA,EAAU,YAAY,yBACtBA,EAAU,YAAY,KAAK,aAAajD,EAAK,UAAU2C,IAAQ,CAAC;AAGhE,cAAMO,IAAc,SAAS,cAAc,KAAK;AAChD,QAAAA,EAAY,OAAO,WACnBA,EAAY,YAAY,sBAGxBA,EAAY,YAAYD,CAAS,GAGjCF,EAAG,YAAYG,CAAW,GAG1BH,EAAG,iBAAiB,UAAU,CAACnB,MAAM;AACnC,UAAAsB,EAAY,MAAM,UAAUtB,EAAE,OAAO,WAAW,UAAU;AAAA,QACpE,CAAS;AAAA,MACT,OAAa;AAEL,cAAMuB,IAAO,SAAS,cAAc,MAAM;AAC1C,QAAAA,EAAK,YAAY,mBACbL,KAAYK,EAAK,UAAU,IAAI,qBAAqB;AAKxD,cAAMrC,IAAQ,SAAS,cAAc,MAAM;AAC3C,QAAAA,EAAM,YAAY,oBAClBA,EAAM,cAAcd,EAAK,MACzBmD,EAAK,YAAYrC,CAAK,GAGtBqC,EAAK,iBAAiB,SAAS,CAACvB,MAAM;AACpC,UAAAA,EAAE,gBAAiB,GACnB,KAAK,cAAc5B,EAAK,IACxB,KAAK,qBAAsB,GAC3B,KAAK,cAAc,IAAI,YAAY,iBAAiB;AAAA,YAClD,QAAQ;AAAA,cACN,IAAIA,EAAK;AAAA,cACT,MAAMA;AAAA,cACN,MAAMA,EAAK;AAAA,YACZ;AAAA,YACD,SAAS;AAAA,YACT,UAAU;AAAA,UACtB,CAAW,CAAC;AAAA,QACZ,CAAS,GAED+C,EAAG,YAAYI,CAAI;AAAA,MAC3B;AAEM,MAAAP,EAAc,YAAYG,CAAE;AAAA,IAClC,CAAK,GAEMJ,MAAU,IAAIC,EAAc,YAAYA,EAAc;AAAA,EACjE;AAAA,EAEE,qBAAqB;AACnB,SAAK,WAAW,iBAAiB,SAAS,KAAK,iBAAiB;AAAA,EACpE;AAAA,EAEE,wBAAwB;AACtB,SAAK,WAAW,oBAAoB,SAAS,KAAK,iBAAiB;AAAA,EACvE;AAAA,EAEE,aAAazB,GAAO;AAElB,UAAMiC,IAAWjC,EAAM,OAAO,QAAQ,kBAAkB;AACxD,QAAIiC,GAAU;AACZ,MAAAjC,EAAM,gBAAiB;AACvB,YAAMkC,IAASD,EAAS,aAAa,SAAS;AAC9C,MAAIC,MACF,KAAK,WAAWA,GAChB,KAAK,qBAAsB,GAC3B,KAAK,cAAc,IAAI,YAAY,iBAAiB;AAAA,QAClD,QAAQ,EAAE,IAAIA,EAAQ;AAAA,QACtB,SAAS;AAAA,QACT,UAAU;AAAA,MACpB,CAAS,CAAC;AAEJ;AAAA,IACN;AAGI,UAAMhC,IAASF,EAAM,OAAO,QAAQ,2BAA2B;AAC/D,QAAI,CAACE,EAAQ;AAEb,UAAMiC,IAAcjC,EAAO;AAC3B,QAAIiC,KAAeA,EAAY,aAAa,IAAI,MAAM,oBAAoB;AACxE,MAAAnC,EAAM,gBAAiB;AAGvB,YAAM6B,IAAaM,EAAY,aAAa,UAAU,GAChDC,IAAYD,EAAY,cAAc,mBAAmB;AAE/D,MAAIN,KACFM,EAAY,gBAAgB,UAAU,GAClCC,MAAWA,EAAU,cAAc,SAEvCD,EAAY,aAAa,YAAY,EAAE,GACnCC,MAAWA,EAAU,cAAc,OAIzCD,EAAY,cAAc,IAAI,YAAY,UAAU;AAAA,QAClD,QAAQ,EAAE,UAAU,CAACN,EAAY;AAAA,QACjC,SAAS;AAAA,QACT,UAAU;AAAA,MAClB,CAAO,CAAC;AAAA,IACR;AAAA,EACA;AAAA,EAEE,uBAAuB;AACrB,QAAI,CAAC,KAAK,WAAY;AAGtB,UAAMQ,IAAsB,KAAK,WAAW,iBAAiB,2BAA2B,GAClFC,IAAe,KAAK,WAAW,iBAAiB,kBAAkB;AAYxE,QAVAD,EAAoB,QAAQ,CAAAxD,MAAQ;AAClC,MAAAA,EAAK,UAAU,OAAO,qBAAqB,GAC3CA,EAAK,gBAAgB,UAAU;AAAA,IACrC,CAAK,GAEDyD,EAAa,QAAQ,CAAAC,MAAQ;AAC3B,MAAAA,EAAK,UAAU,OAAO,qBAAqB;AAAA,IACjD,CAAK,GAGG,KAAK,aAAa;AAGpB,YAAMC,IAA0B,KAAK,WAAW,cAAc,sCAAsC,KAAK,WAAW,IAAI;AACxH,MAAIA,MACFA,EAAwB,UAAU,IAAI,qBAAqB,GAC3DA,EAAwB,aAAa,YAAY,EAAE;AAIrD,YAAMC,IAAmB,KAAK,WAAW,cAAc,eAAe,KAAK,WAAW,qBAAqB;AAC3G,MAAIA,KACFA,EAAiB,UAAU,IAAI,qBAAqB,GAIlD,CAACD,KAA2B,CAACC,KAC/B,QAAQ,KAAK,uFAAuF;AAAA,IAE5G;AAAA,EACA;AAAA,EAEE,uBAAuB5D,GAAM;AAC3B,WAAKA,IAGDA,EAAK,OAAO,KAAK,cAAoB,KAGrCA,EAAK,WACAA,EAAK,SAAS,KAAK,CAAA2B,MAAS,KAAK,uBAAuBA,CAAK,CAAC,IAGhE,KAVW;AAAA,EAWtB;AAAA,EAEE,cAAc5B,GAAO8D,GAAI;AACvB,QAAI,CAAC9D,KAAS,CAACA,EAAM,OAAQ,QAAO;AAEpC,eAAWC,KAAQD,GAAO;AACxB,UAAIC,EAAK,OAAO6D,EAAI,QAAO7D;AAC3B,UAAIA,EAAK,UAAU;AACjB,cAAM8D,IAAQ,KAAK,cAAc9D,EAAK,UAAU6D,CAAE;AAClD,YAAIC,EAAO,QAAOA;AAAA,MAC1B;AAAA,IACA;AACI,WAAO;AAAA,EACX;AACA;AAGK,eAAe,IAAI,gBAAgB,KACtC,eAAe,OAAO,kBAAkBrB,CAAa;;;;;AChahD,MAAMsB,UAAwB,YAAY;AAAA,EAC7C,WAAW,qBAAqB;AAC5B,WAAO,CAAC,QAAQ;AAAA,EACxB;AAAA,EAEI,cAAc;AACV,UAAO,GACP,KAAK,aAAa,EAAE,MAAM,OAAM,CAAE,GAClC,KAAK,UAAU,CAAE,GACjB,KAAK,gBAAgB,KAAK,cAAc,KAAK,IAAI,GACjD,KAAK,oBAAoB;AAAA,EACjC;AAAA,EAEI,IAAI,SAAS;AACT,WAAO,KAAK;AAAA,EACpB;AAAA,EAEI,IAAI,OAAOpD,GAAO;AACd,QAAI,MAAM,QAAQA,CAAK;AACnB,WAAK,UAAUA,GACf,KAAK,OAAQ;AAAA,aACN,OAAOA,KAAU;AACxB,UAAI;AACA,aAAK,UAAU,KAAK,MAAMA,CAAK,GAC/B,KAAK,OAAQ;AAAA,MAChB,QAAW;AAAA,MACxB;AAAA,EAEA;AAAA,EAEI,oBAAoB;AAChB,SAAK,OAAQ,GACb,KAAK,WAAW,iBAAiB,UAAU,KAAK,aAAa;AAAA,EACrE;AAAA,EAEI,uBAAuB;AACnB,SAAK,WAAW,oBAAoB,UAAU,KAAK,aAAa;AAAA,EACxE;AAAA,EAEI,cAAcQ,GAAO;AAKjB,QAHAA,EAAM,gBAAiB,GAGnB,KAAK,kBAAmB;AAC5B,SAAK,oBAAoB;AAEzB,QAAI6C,IAAQ,IACR/B,IAAc;AAElB,QAAI;AAGA,YAAM1B,IAASY,EAAM,aAAY,EAAG;AAAA,QAChC,CAAAvB,MAAQA,EAAK,aAAa,KAAK,gBACxBA,EAAK,gBACLA,EAAK,aAAa,IAAI,MAAM;AAAA,MACtC;AAED,UAAI,CAACW;AACD;AAIJ,YAAM0D,IAAW,MAAM,KAAK,KAAK,WAAW,iBAAiB,2BAA2B,CAAC;AAQzF,UAPAD,IAAQC,EAAS,QAAQ1D,CAAM,GAE3ByD,MAAU,MAKVA,MAAU,KAAK;AACf;AAGJ,MAAA/B,IAAc1B,EAAO,UAKrB0D,EAAS,QAAQ,CAACjE,GAAMkE,MAAM;AAC1B,QAAIA,MAAMF,KAAShE,EAAK,aACpBA,EAAK,WAAW;AAAA,MAEpC,CAAa,GAGGgE,MAAU,KAAK,qBAEfzD,EAAO,WAAW,IAClB,KAAK,oBAAoB,OAGzBA,EAAO,WAAW,IAClB,KAAK,oBAAoByD;AAAA,IAEzC,UAAkB;AAEN,WAAK,oBAAoB;AAAA,IACrC;AAGQ,SAAK,cAAc,IAAI,YAAY,UAAU;AAAA,MACzC,QAAQ;AAAA,QACJ,OAAAA;AAAA,QACA,UAAU,CAAC/B;AAAA,QACX,QAAQ;AAAA,MACX;AAAA,MACD,SAAS;AAAA,MACT,UAAU;AAAA,IACtB,CAAS,CAAC;AAAA,EACV;AAAA,EAGI,cAAcd,GAAO;AAEjB,IAAAA,EAAM,gBAAiB;AAEvB,UAAMgD,IAAahD,EAAM,OAAO,QAAQ,2BAA2B;AACnE,QAAI,CAACgD,EAAY;AAEjB,UAAMpE,IAAQ,MAAM,KAAK,KAAK,WAAW,iBAAiB,2BAA2B,CAAC,GAChFiE,IAAQjE,EAAM,QAAQoE,CAAU;AAEtC,QAAIH,MAAU,IAGd;AAAA,UAAI,CAAC7C,EAAM,OAAO,UAAU;AACxB,QAAI,KAAK,sBAAsB6C,MAC3B,KAAK,oBAAoB;AAE7B;AAAA,MACZ;AAGQ,UAAI,KAAK,sBAAsB,MAAM,KAAK,sBAAsBA,GAAO;AACnE,cAAMI,IAAerE,EAAM,KAAK,iBAAiB;AACjD,QAAIqE,KACAA,EAAa,OAAO,EAAK;AAAA,MAEzC;AAEQ,WAAK,oBAAoBJ;AAAA;AAAA,EACjC;AAAA,EAEI,SAAS;AACL,IAAK,KAAK,eAGN,KAAK,sBAAsB,MAAM,KAAK,QAAQ,SAAS,MACvD,KAAK,oBAAoB,IAG7B,KAAK,WAAW,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAsEd,KAAK,QAAQ,IAAI,CAACK,GAAOL,MAAU;AAAA;AAAA,qCAEpBK,EAAM,KAAK;AAAA,8BAClBA,EAAM,cAAc,uBAAuB,EAAE;AAAA,8BAC7C,KAAK,sBAAsBL,IAAQ,aAAa,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAMrCK,EAAM,GAAG;AAAA,2CACTA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKjC,EAAE,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA,EAI/B;AACA;AAEK,eAAe,IAAI,kBAAkB,KACtC,eAAe,OAAO,oBAAoBN,CAAe;AClPtD,SAASO,IAAuB;AAErC,wBAAe,OAAO,oBAAoBjF,CAAe,GACzD,eAAe,OAAO,oBAAoB6B,GAAiB,EAAE,SAAS,MAAM,GAC5E,eAAe,OAAO,cAAcR,CAAS,GAC7C,eAAe,OAAO,kBAAkB+B,CAAa,GACrD,eAAe,OAAO,oBAAoBsB,CAAe,GACzD,eAAe,OAAO,kBAAkB,cAAc,YAAY;AAAA,IAChE,cAAc;AACZ,YAAO;AAAA,IAEb;AAAA,EACA,CAAG,GAGM,QAAQ,IAAI;AAAA,IACjB,eAAe,YAAY,kBAAkB;AAAA,IAC7C,eAAe,YAAY,kBAAkB;AAAA,IAC7C,eAAe,YAAY,YAAY;AAAA,IACvC,eAAe,YAAY,gBAAgB;AAAA,IAC3C,eAAe,YAAY,kBAAkB;AAAA,IAC7C,eAAe,YAAY,gBAAgB;AAAA,EAC/C,CAAG;AACH;AAGI,OAAO,SAAW,OAAe,CAAC,OAAO,sCAC3C,OAAO,oCAAoC,IAC3CO,IAAuB,MAAM,QAAQ,KAAK;ACjCvC,MAACC,IAAY;AAAA,EAChB,QAAQC,GAAK;AAEX,IAAAF,IAAuB,MAAM,QAAQ,KAAK,GAE1C,OAAO,QAAQG,CAAa,EAAE,QAAQ,CAAC,CAACC,GAAeC,CAAY,MAAM;AACvE,UAAI,OAAOA,KAAiB,cAAcA,EAAa,MAAM;AAC3D,cAAMC,IAAUD,EAAa,MAAMD,EAAc,YAAa,GAGxDG,IAAe;AAAA,UACnB,MAAMH;AAAA,UACN,cAAc;AAAA,UACd,OAAO,CAAE;AAAA;AAAA,UACT,OAAO,CAAE;AAAA,UACT,SAAS;AAEP,kBAAMI,IAAQ,OAAO,QAAQ,KAAK,MAAM,EAAE,OAAO,CAACC,GAAK,CAACC,GAAKrE,CAAK,MAAM;AAEtE,oBAAMsE,IAAWD,EAAI,QAAQ,aAAa,CAACE,MAAMA,EAAE,CAAC,EAAE,aAAa;AACnE,qBAAAH,EAAIE,CAAQ,IAAItE,GACToE;AAAA,YACR,GAAE,EAAE,GAGCI,IAAK,CAAE;AACb,0BAAO,KAAK,KAAK,UAAU,EAAE,QAAQ,CAAChE,MAAU;AAC9C,cAAAgE,EAAGhE,CAAK,IAAI,KAAK,WAAWA,CAAK;AAAA,YAC/C,CAAa,GAEM,KAAK;AAAA,cACVyD;AAAA,cACA;AAAA,gBACE,OAAAE;AAAA,gBACA,IAAAK;AAAA,gBACA,KAAK;AAAA,cACN;AAAA,cACD,KAAK,OAAO;AAAA,YACb;AAAA,UACF;AAAA,QACF;AAGD,QAAAX,EAAI,UAAUE,GAAeG,CAAY;AAAA,MACjD;AAAA,IACA,CAAK;AAAA,EACF;AACH;"}