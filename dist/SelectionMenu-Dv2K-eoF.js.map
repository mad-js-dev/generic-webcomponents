{"version":3,"file":"SelectionMenu-Dv2K-eoF.js","sources":["../src/components/organisms/selection-menu/SelectionMenu.js"],"sourcesContent":["/**\n * SelectionMenu Component\n * A collapsible menu that allows selection of leaf nodes using CollapsibleItem\n * \n * @fires item-selected - Dispatched when a leaf node is selected\n * @property {string} items - JSON string representing the menu items structure\n * @property {string} selected - ID of the currently selected item\n */\n\nexport class SelectionMenu extends HTMLElement {\n  static get observedAttributes() {\n    return ['items', 'selected'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._items = [];\n    this._selectedId = null;\n    this._boundOnItemClick = this._onItemClick.bind(this);\n    \n    // Import the CollapsibleItem component\n    import('../../molecules/collapsible-item/CollapsibleItem.js');\n  }\n\n  connectedCallback() {\n    this._render();\n  }\n\n  disconnectedCallback() {\n    this._removeEventListeners();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'items':\n        this._items = newValue ? JSON.parse(newValue) : [];\n        this._render();\n        break;\n      case 'selected':\n        this._selectedId = newValue;\n        this._updateSelectedState();\n        break;\n    }\n  }\n\n  get items() {\n    return JSON.stringify(this._items);\n  }\n\n  set items(value) {\n    this._items = value ? JSON.parse(value) : [];\n    this._render();\n  }\n\n  get selected() {\n    return this._selectedId;\n  }\n\n  set selected(value) {\n    if (this._selectedId !== value) {\n      this._selectedId = value;\n      this._updateSelectedState();\n    }\n  }\n\n  _render() {\n    if (!this.shadowRoot) return;\n    \n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          --primary-color: #4a6cf7;\n          --hover-bg: #f5f8ff;\n          --selected-bg: #e6f0ff;\n          --border-color: #e2e8f0;\n          --text-color: #2d3748;\n          --text-secondary: #4a5568;\n        }\n        \n        .menu-container {\n          border: 1px solid var(--border-color);\n          border-radius: 6px;\n          overflow: hidden;\n        }\n        \n        .menu-item {\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          margin: 2px 0;\n          border-radius: 4px;\n        }\n        \n        .menu-item:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        .menu-item--selected:hover {\n          background-color: var(--selected-bg, #e6f0ff);\n        }\n        \n        /* Style for the collapsible item header */\n        .menu-item::part(header) {\n          padding: 8px 12px;\n          display: flex;\n          align-items: center;\n        }\n        \n        /* Style for the collapsible item content */\n        .menu-item::part(content) {\n          padding: 0;\n          overflow: hidden;\n          transition: max-height 0.3s ease, opacity 0.2s ease;\n          max-height: 0;\n          opacity: 0;\n          margin: 0;\n        }\n        \n        .menu-item::part(content).menu-item__content--expanded {\n          max-height: 1000px; /* Adjust based on your needs */\n          opacity: 1;\n          padding: 4px 0 4px 1rem;\n        }\n        \n        .menu-item__child-list {\n          list-style: none;\n          padding: 0;\n          margin: 0 0 0 1rem;\n        }\n        \n        /* Remove bullets from ul elements */\n        ul {\n          list-style-type: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Ensure list items have no default styling */\n        li {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Leaf item styles */\n        .menu-item__leaf {\n          display: flex;\n          align-items: center;\n          padding: 4px 12px;\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          border-radius: 4px;\n        }\n        \n        .menu-item__leaf:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item__leaf.menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        /* Arrow icon for collapsible items */\n        .menu-item__arrow {\n          display: inline-block;\n          width: 12px;\n          text-align: center;\n          transition: transform 0.2s ease;\n        }\n        \n        .menu-item[expanded] .menu-item__arrow {\n          transform: rotate(90deg);\n        }\n      </style>\n      <div class=\"menu-container\">\n        ${this._renderItems(this._items, 0)}\n      </div>\n    `;\n    \n    this._addEventListeners();\n  }\n  \n  _renderItems(items, level = 0) {\n    if (!items || !items.length) return '';\n    \n    // Create a container for the list\n    const listContainer = document.createElement('ul');\n    listContainer.style.listStyle = 'none';\n    listContainer.style.padding = '0';\n    listContainer.style.margin = '0';\n    \n    items.forEach(item => {\n      const hasChildren = item.children && item.children.length > 0;\n      const isSelected = this._selectedId === item.id;\n      \n      // Create list item\n      const li = document.createElement('li');\n      li.setAttribute('data-id', item.id);\n      \n      if (hasChildren) {\n        // For items with children, use collapsible-item\n        li.setAttribute('is', 'collapsible-item');\n        li.setAttribute('data-id', item.id);\n        li.setAttribute('label', item.name);\n        \n        // Determine initial state\n        const hasSelectedDescendant = this._hasSelectedDescendant(item);\n        const isExpanded = hasSelectedDescendant || isSelected;\n        \n        // Set initial expanded state\n        if (isExpanded) {\n          li.setAttribute('expanded', '');\n        }\n        \n        // Set the arrow icon using the icon attribute\n        li.setAttribute('icon', isExpanded ? '▼' : '▶');\n        li.style.marginRight = '8px';\n        li.style.transition = 'transform 0.2s ease';\n        \n        if (isSelected) {\n          li.classList.add('menu-item--selected');\n        }\n        \n        // Create and append child list\n        const childList = document.createElement('ul');\n        childList.className = 'menu-item__child-list';\n        childList.innerHTML = this._renderItems(item.children, level + 1);\n        \n        // Create content container with proper styling\n        const contentSlot = document.createElement('div');\n        contentSlot.slot = 'content';\n        contentSlot.className = 'menu-item__content';\n        \n        // Add the child list to the content slot\n        contentSlot.appendChild(childList);\n        \n        // Add the content slot to the collapsible item\n        li.appendChild(contentSlot);\n        \n        // Handle the toggle event to update the content visibility\n        li.addEventListener('toggle', (e) => {\n          contentSlot.style.display = e.detail.expanded ? 'block' : 'none';\n        });\n      } else {\n        // For leaf nodes, just use a span\n        const span = document.createElement('span');\n        span.className = 'menu-item__leaf';\n        if (isSelected) span.classList.add('menu-item--selected');\n        \n      \n        \n        // Add label\n        const label = document.createElement('span');\n        label.className = 'menu-item__label';\n        label.textContent = item.name;\n        span.appendChild(label);\n        \n        // Add click handler for selection\n        span.addEventListener('click', (e) => {\n          e.stopPropagation();\n          this._selectedId = item.id;\n          this._updateSelectedState();\n          this.dispatchEvent(new CustomEvent('item-selected', {\n            detail: {\n              id: item.id,\n              item: item,\n              name: item.name\n            },\n            bubbles: true,\n            composed: true\n          }));\n        });\n        \n        li.appendChild(span);\n      }\n      \n      listContainer.appendChild(li);\n    });\n    \n    return level === 0 ? listContainer.outerHTML : listContainer.innerHTML;\n  }\n  \n  _addEventListeners() {\n    this.shadowRoot.addEventListener('click', this._boundOnItemClick);\n  }\n  \n  _removeEventListeners() {\n    this.shadowRoot.removeEventListener('click', this._boundOnItemClick);\n  }\n  \n  _onItemClick(event) {\n    // Handle leaf node clicks\n    const leafNode = event.target.closest('.menu-item__leaf');\n    if (leafNode) {\n      event.stopPropagation();\n      const itemId = leafNode.getAttribute('data-id');\n      if (itemId) {\n        this.selected = itemId;\n        this._updateSelectedState();\n        this.dispatchEvent(new CustomEvent('item-selected', {\n          detail: { id: itemId },\n          bubbles: true,\n          composed: true\n        }));\n      }\n      return;\n    }\n    \n    // Handle collapsible item clicks\n    const header = event.target.closest('.collapsible-item__header');\n    if (!header) return;\n    \n    const itemElement = header.parentElement;\n    if (itemElement && itemElement.getAttribute('is') === 'collapsible-item') {\n      event.stopPropagation();\n      \n      // Toggle the expanded state\n      const isExpanded = itemElement.hasAttribute('expanded');\n      const arrowIcon = itemElement.querySelector('.menu-item__arrow');\n      \n      if (isExpanded) {\n        itemElement.removeAttribute('expanded');\n        if (arrowIcon) arrowIcon.textContent = '▶';\n      } else {\n        itemElement.setAttribute('expanded', '');\n        if (arrowIcon) arrowIcon.textContent = '▼';\n      }\n      \n      // Dispatch a custom event for the toggle action\n      itemElement.dispatchEvent(new CustomEvent('toggle', {\n        detail: { expanded: !isExpanded },\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n  \n  _updateSelectedState() {\n    if (!this.shadowRoot) return;\n    \n    // Remove selected class from all items\n    const allCollapsibleItems = this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]');\n    const allLeafItems = this.shadowRoot.querySelectorAll('.menu-item__leaf');\n    \n    allCollapsibleItems.forEach(item => {\n      item.classList.remove('menu-item--selected');\n      item.removeAttribute('selected');\n    });\n    \n    allLeafItems.forEach(leaf => {\n      leaf.classList.remove('menu-item--selected');\n    });\n    \n    // Add selected class to the selected item\n    if (this._selectedId) {\n      \n      // Check collapsible items\n      const selectedCollapsibleItem = this.shadowRoot.querySelector(`li[is=\"collapsible-item\"][data-id=\"${this._selectedId}\"]`);\n      if (selectedCollapsibleItem) {\n        selectedCollapsibleItem.classList.add('menu-item--selected');\n        selectedCollapsibleItem.setAttribute('selected', '');\n      }\n      \n      // Check leaf items\n      const selectedLeafItem = this.shadowRoot.querySelector(`li[data-id=\"${this._selectedId}\"] .menu-item__leaf`);\n      if (selectedLeafItem) {\n        selectedLeafItem.classList.add('menu-item--selected');\n      }\n      \n      // If we didn't find the item, it might be because it's in a closed collapsible item\n      if (!selectedCollapsibleItem && !selectedLeafItem) {\n        console.warn('Could not find selected item in the DOM. It might be in a closed collapsible section.');\n      }\n    }\n  }\n  \n  _hasSelectedDescendant(item) {\n    if (!item) return false;\n    \n    // Check if this item is selected\n    if (item.id === this._selectedId) return true;\n    \n    // Check if any child is selected\n    if (item.children) {\n      return item.children.some(child => this._hasSelectedDescendant(child));\n    }\n    \n    return false;\n  }\n  \n  _findItemById(items, id) {\n    if (!items || !items.length) return null;\n    \n    for (const item of items) {\n      if (item.id === id) return item;\n      if (item.children) {\n        const found = this._findItemById(item.children, id);\n        if (found) return found;\n      }\n    }\n    return null;\n  }\n}\n\n// Define the custom element\nif (!customElements.get('selection-menu')) {\n  customElements.define('selection-menu', SelectionMenu);\n}"],"names":[],"mappings":"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"}