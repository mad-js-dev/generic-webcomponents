{"version":3,"file":"ImageCollection.js","sources":["../../../src/components/organisms/image-collection/ImageCollection.js"],"sourcesContent":["import { CollapsibleItem } from '../../molecules/collapsible-item/CollapsibleItem.js';\n\nexport class ImageCollection extends HTMLElement {\n    static get observedAttributes() {\n        return ['images'];\n    }\n\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this._images = [];\n        this._handleToggle = this._handleToggle.bind(this);\n        this._currentOpenIndex = 0;\n    }\n\n    get images() {\n        return this._images;\n    }\n\n    set images(value) {\n        if (Array.isArray(value)) {\n            this._images = value;\n            this.render();\n        } else if (typeof value === 'string') {\n            try {\n                this._images = JSON.parse(value);\n                this.render();\n            } catch (e) {\n            }\n        }\n    }\n\n    connectedCallback() {\n        this.render();\n        this.shadowRoot.addEventListener('toggle', this._handleToggle);\n    }\n\n    disconnectedCallback() {\n        this.shadowRoot.removeEventListener('toggle', this._handleToggle);\n    }\n\n    _handleToggle(event) {\n        // Prevent event from bubbling up\n        event.stopPropagation();\n        \n        // Prevent reentrant calls\n        if (this._isHandlingToggle) return;\n        this._isHandlingToggle = true;\n        \n        let index = -1;\n        let wasExpanded = false;\n        \n        try {\n            \n            // Find the clicked collapsible item by traversing up the composed path\n            const target = event.composedPath().find(\n                node => node.nodeType === Node.ELEMENT_NODE && \n                       node.getAttribute && \n                       node.getAttribute('is') === 'collapsible-item'\n            );\n            \n            if (!target) {\n                return;\n            }\n\n            // Get all collapsible items\n            const allItems = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n            index = allItems.indexOf(target);\n            \n            if (index === -1) {\n                return;\n            }\n            \n            // Prevent toggling if this item is already open\n            if (index === this._currentOpenIndex) {\n                return;\n            }\n            \n            wasExpanded = target.expanded;\n            \n            // Update all items\n            \n            // First, close all items except the target\n            allItems.forEach((item, i) => {\n                if (i !== index && item.expanded) {\n                    item.expanded = false;\n                }\n            });\n            \n            // Then toggle the target item if needed\n            if (index === this._currentOpenIndex) {\n                // Clicked the currently open item - close it\n                target.expanded = false;\n                this._currentOpenIndex = -1;\n            } else {\n                // Open the clicked item\n                target.expanded = true;\n                this._currentOpenIndex = index;\n            }\n        } finally {\n            // Always clear the flag, even if an error occurred\n            this._isHandlingToggle = false;\n        }\n        \n        // Dispatch our custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { \n                index,\n                expanded: !wasExpanded,\n                source: 'image-collection'\n            },\n            bubbles: true,\n            composed: true\n        }));\n    }\n\n    \n    _onItemToggle(event) {\n        // Stop propagation to prevent double-handling\n        event.stopPropagation();\n        \n        const targetItem = event.target.closest('li[is=\"collapsible-item\"]');\n        if (!targetItem) return;\n\n        const items = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n        const index = items.indexOf(targetItem);\n        \n        if (index === -1) return;\n\n        // If the clicked item is being closed, just update our state\n        if (!event.detail.expanded) {\n            if (this._currentOpenIndex === index) {\n                this._currentOpenIndex = -1;\n            }\n            return;\n        }\n\n        // Close the previously open item if it's different from the clicked one\n        if (this._currentOpenIndex !== -1 && this._currentOpenIndex !== index) {\n            const previousItem = items[this._currentOpenIndex];\n            if (previousItem) {\n                previousItem.toggle(false);\n            }\n        }\n        \n        this._currentOpenIndex = index;\n    }\n\n    render() {\n        if (!this.shadowRoot) return;\n        \n        // Only expand the first item if no item is currently expanded\n        if (this._currentOpenIndex === -1 && this._images.length > 0) {\n            this._currentOpenIndex = 0;\n        }\n        \n        this.shadowRoot.innerHTML = `\n            <style>\n                .image-collection {\n                    width: 100%;\n                    max-width: 800px;\n                    margin: 0 auto;\n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n                }\n                \n                .image-collection__container {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 0;\n                    width: 100%;\n                    list-style: none;\n                    padding: 0;\n                }\n                \n                .image-collection__item {\n                    width: 100%;\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection__image {\n                    width: 100%;\n                    height: auto;\n                    display: block;\n                }\n                \n                .image-collection__title {\n                    font-weight: 600;\n                    padding: 0.8rem 1rem;\n                    background-color: #f8fafc;\n                    width: 100%;\n                    cursor: pointer;\n                    transition: background-color 0.2s;\n                }\n                \n                .image-collection__title:hover {\n                    background-color: #f1f5f9;\n                }\n                \n                .image-collection .collapsible-item__header {\n                    padding: 0.5rem 1rem;\n                    background: none;\n                    border: none;\n                    width: 100%;\n                    text-align: left;\n                    cursor: pointer;\n                }\n                \n                .image-collection .collapsible-item__content {\n                    margin: 0;\n                    transition: all 0.3s ease;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"] {\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"]:last-child {\n                    margin-bottom: 0;\n                }\n            </style>\n            <div class=\"image-collection\">\n                <ul class=\"image-collection__container\">\n                    ${this._images.map((image, index) => `\n                        <li is=\"collapsible-item\" \n                            label=\"${image.title}\" \n                            ${image.removeshift ? 'removeshift=\"true\"' : ''}\n                            ${this._currentOpenIndex === index ? 'expanded' : ''}\n                            hide-icon\n                            >\n                            <div slot=\"content\">\n                                <img \n                                    class=\"image-collection__image\" \n                                    src=\"${image.src}\" \n                                    alt=\"${image.title}\"\n                                    loading=\"lazy\"\n                                >\n                            </div>\n                        </li>\n                    `).join('')}\n                </ul>\n            </div>\n        `;\n    }\n}\n\nif (!customElements.get('image-collection')) {\n    customElements.define('image-collection', ImageCollection);\n}"],"names":[],"mappings":"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"}