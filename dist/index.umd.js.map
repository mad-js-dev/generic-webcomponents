{"version":3,"file":"index.umd.js","sources":["../src/components/molecules/collapsible-list/CollapsibleList.js","../src/components/atoms/icon-label/IconLabel.js","../src/components/molecules/collapsible-item/CollapsibleItem.js","../src/components/index.js","../src/wrappers/react/index.jsx","../src/wrappers/vue/index.js","../src/index.js","../src/components/organisms/selection-menu/SelectionMenu.js","../src/components/organisms/image-collection/ImageCollection.js","../src/components/templates/product-layout/ProductLayout.js"],"sourcesContent":["/**\r\n * CollapsibleList Component\r\n * A custom element that creates a collapsible list container\r\n */\r\n\r\nexport class CollapsibleList extends HTMLElement {\r\n  static get observedAttributes() {\r\n    return ['reverse-heading', 'single-item', 'accordion'];\r\n  }\r\n  \r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this._isUpdating = false; // Track if we're currently updating to prevent reentrant calls\r\n    this._handleItemToggle = this._handleItemToggle.bind(this);\r\n    \r\n    const container = document.createElement('div');\r\n    const slot = document.createElement('slot');\r\n    \r\n    // Create styles for the component\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n        width: 100%;\r\n        --indent-size: 1.5rem;\r\n      }\r\n      \r\n      ::slotted(collapsible-item) {\r\n        display: block;\r\n        margin: 0.25rem 0;\r\n        padding: 0;\r\n        width: 100%;\r\n      }\r\n      \r\n      /* Nested lists should have a border */\r\n      ::slotted(collapsible-list) {\r\n        border-left: 1px solid #e0e0e0;\r\n        margin-left: 0.5rem;\r\n        padding-left: 0.5rem;\r\n      }\r\n      \r\n      /* Style for the header in collapsible items */\r\n      .collapsible-item__header {\r\n        display: flex;\r\n        align-items: center;\r\n        width: 100%;\r\n        flex-direction: row;\r\n      }\r\n      \r\n      /* Toggle container styles */\r\n      .collapsible-item__toggle-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: var(--toggle-size, 24px);\r\n        height: var(--toggle-size, 24px);\r\n        margin: var(--toggle-margin, 0 8px 0 0);\r\n        flex-shrink: 0;\r\n      }`;\r\n    \r\n    container.appendChild(slot);\r\n    this.shadowRoot.append(style, container);\r\n  }\r\n  \r\n  async connectedCallback() {\r\n    if (!this._initialized) {\r\n      this._initializeComponent();\r\n      this._initialized = true;\r\n      \r\n      // Set initial reverse heading state\r\n      await this._updateReverseHeading();\r\n      \r\n      // Set up event listeners for accordion behavior\r\n      this.addEventListener('toggle', this._handleItemToggle);\r\n      \r\n      // Ensure at least one item is expanded in accordion mode\r\n      if (this.hasAttribute('accordion')) {\r\n        this._ensureOneItemExpanded();\r\n      }\r\n    }\r\n    \r\n    // Set up mutation observer for dynamic content\r\n    this._setupMutationObserver();\r\n  }\r\n  \r\n  _initializeComponent() {\r\n    if (!this.hasAttribute('role')) {\r\n      this.setAttribute('role', 'list');\r\n    }\r\n    \r\n    if (!this.hasAttribute('aria-label') && !this.hasAttribute('aria-labelledby')) {\r\n      console.warn('collapsible-list: Add an aria-label or aria-labelledby attribute for accessibility');\r\n    }\r\n  }\r\n  \r\n  _setupMutationObserver() {\r\n    // Set up a mutation observer to handle dynamically added items and attribute changes\r\n    this._observer = new MutationObserver(async (mutations) => {\r\n      let shouldUpdate = false;\r\n      \r\n      for (const mutation of mutations) {\r\n        if (mutation.type === 'attributes' && mutation.attributeName === 'reverse-heading') {\r\n          shouldUpdate = true;\r\n          break;\r\n        } else if (mutation.type === 'childList') {\r\n          // Check if any added nodes are collapsible items or lists\r\n          for (const node of mutation.addedNodes) {\r\n            if (node.nodeType === Node.ELEMENT_NODE && \r\n                (node.matches('collapsible-item') || node.matches('collapsible-list'))) {\r\n              shouldUpdate = true;\r\n              break;\r\n            }\r\n          }\r\n          if (shouldUpdate) break;\r\n        }\r\n      }\r\n      \r\n      if (shouldUpdate) {\r\n        await this._updateReverseHeading();\r\n      }\r\n    });\r\n    \r\n    // Start observing the component for attribute changes and child list changes\r\n    this._observer.observe(this, {\r\n      attributes: true,\r\n      attributeFilter: ['reverse-heading'],\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Updates the reverse heading state for all child collapsible items\r\n   * @private\r\n   */\r\n  async _updateReverseHeading() {\r\n    // Prevent reentrant calls\r\n    if (this._isUpdating) return;\r\n    this._isUpdating = true;\r\n    \r\n    try {\r\n      const isReversed = this.hasAttribute('reverse-heading') && \r\n                       this.getAttribute('reverse-heading') !== 'false';\r\n      \r\n      // Temporarily disconnect observer to prevent infinite loop\r\n      if (this._observer) {\r\n        this._observer.disconnect();\r\n      }\r\n      \r\n      // Process direct child collapsible-items\r\n      const processItems = async (items) => {\r\n        for (const item of items) {\r\n          // Set the attribute on the item\r\n          if (isReversed) {\r\n            item.setAttribute('reverse-heading', '');\r\n          } else {\r\n            item.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any nested items in this item (only direct children)\r\n          const nestedItems = item.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any nested lists in this item (only direct children)\r\n          const nestedLists = item.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Process nested collapsible-lists\r\n      const processLists = async (lists) => {\r\n        for (const list of lists) {\r\n          // Skip if this is the current list to prevent cycles\r\n          if (list === this) continue;\r\n          \r\n          // Set the attribute on the list\r\n          if (isReversed) {\r\n            list.setAttribute('reverse-heading', '');\r\n          } else {\r\n            list.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any direct child items in this list\r\n          const nestedItems = list.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any direct child lists\r\n          const nestedLists = list.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Start processing from the current element\r\n      const items = this.querySelectorAll(':scope > collapsible-item');\r\n      if (items.length > 0) {\r\n        await processItems(Array.from(items));\r\n      }\r\n      \r\n      const lists = this.querySelectorAll(':scope > collapsible-list');\r\n      if (lists.length > 0) {\r\n        await processLists(Array.from(lists));\r\n      }\r\n      \r\n      // Force a reflow to ensure all attribute changes are applied\r\n      if (this.shadowRoot) {\r\n        this.shadowRoot.offsetHeight; // This forces a reflow\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating reverse heading:', error);\r\n    } finally {\r\n      // Reconnect observer if it exists\r\n      if (this._observer) {\r\n        this._observer.observe(this, {\r\n          attributes: true,\r\n          attributeFilter: ['reverse-heading'],\r\n          childList: true,\r\n          subtree: true\r\n        });\r\n      }\r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n\r\n  _handleItemToggle(e) {\r\n    if (this._isUpdating) return;\r\n    \r\n    const target = e.target;\r\n    \r\n    // Only process if this is a direct child\r\n    if (target.parentElement === this) {\r\n      this._isUpdating = true;\r\n      \r\n      if (this.hasAttribute('accordion')) {\r\n        // In accordion mode, close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      } else if (this.hasAttribute('single-item')) {\r\n        // In single-item mode, just close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      }\r\n      \r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n  \r\n  _closeOtherItems(exceptItem) {\r\n    // Don't close items if inside an image-collection\r\n    if (this.closest('image-collection')) {\r\n      return;\r\n    }\r\n    \r\n    const items = this.querySelectorAll('collapsible-item');\r\n    items.forEach(item => {\r\n      if (item !== exceptItem) {\r\n        item.expanded = false;\r\n      }\r\n    });\r\n  }\r\n  \r\n  _getOpenItems() {\r\n    return Array.from(this.querySelectorAll('collapsible-item[expanded]'));\r\n  }\r\n  \r\n  _ensureOneItemExpanded() {\r\n    if (!this.hasAttribute('accordion')) return;\r\n    \r\n    const openItems = this._getOpenItems();\r\n    if (openItems.length === 0) {\r\n      // If no items are open, open the first one\r\n      const firstItem = this.querySelector('collapsible-item');\r\n      if (firstItem) {\r\n        firstItem.setAttribute('expanded', '');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Define the custom element\r\nif (!customElements.get('collapsible-list')) {\r\n  customElements.define('collapsible-list', CollapsibleList);\r\n}\r\n","/**\n * IconLabel Component\n * A custom element that displays an icon with a label\n */\n\nexport class IconLabel extends HTMLElement {\n  static get observedAttributes() {\n    return ['icon', 'label', 'reverse'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    \n    // Default values\n    this._icon = '';\n    this._label = '';\n    this._reverse = false;\n    this._initialized = false;\n  }\n\n  connectedCallback() {\n    if (!this._initialized) {\n      this._initializeComponent();\n      this._initialized = true;\n    }\n    this._render();\n  }\n\n  _initializeComponent() {\n    // Create styles\n    const style = document.createElement('style');\n    style.textContent = `\n      :host {\n        display: inline-flex;\n        align-items: center;\n        font-family: inherit;\n        color: currentColor;\n      }\n\n      .icon-label {\n        display: inline-flex;\n        align-items: center;\n        gap: 0.5rem;\n      }\n\n      .icon-label--reverse {\n        flex-direction: row-reverse;\n      }\n\n      .icon-label__icon {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        width: 1em;\n        height: 1em;\n      }\n      \n      .icon-label__icon img,\n      .icon-label__char {\n        width: 1em;\n        height: 1em;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      \n      .icon-label__char {\n        font-size: 1em;\n        line-height: 1;\n      }\n    `;\n\n\n    // Create container\n    const container = document.createElement('span');\n    container.className = 'icon-label';\n    container.setAttribute('part', 'container');\n\n    // Create icon slot\n    const iconSlot = document.createElement('slot');\n    iconSlot.name = 'icon';\n    iconSlot.className = 'icon-label__icon';\n    iconSlot.setAttribute('part', 'icon');\n\n    // Create label slot\n    const labelSlot = document.createElement('slot');\n    labelSlot.className = 'icon-label__label';\n    labelSlot.setAttribute('part', 'label');\n\n    // Append slots to container\n    container.appendChild(iconSlot);\n    container.appendChild(labelSlot);\n\n    // Append elements to shadow root\n    this.shadowRoot.appendChild(style);\n    this.shadowRoot.appendChild(container);\n\n    // Store references\n    this._container = container;\n    this._iconSlot = iconSlot;\n    this._labelSlot = labelSlot;\n  }\n\n  _render() {\n    if (!this._initialized) return;\n\n    // Update classes based on properties\n    this._container.className = 'icon-label';\n    if (this._reverse) {\n      this._container.classList.add('icon-label--reverse');\n    }\n\n    // Update icon if provided\n    if (this._icon && this._iconSlot) {\n      this._iconSlot.innerHTML = '';\n      \n      // Check if the icon is a single character (likely an emoji or icon character)\n      const isIconChar = this._icon.length === 1 || \n                       (this._icon.length === 2 && this._icon.codePointAt(0) > 0xFFFF);\n      \n      if (isIconChar) {\n        // For single character icons (emojis, etc.)\n        const charSpan = document.createElement('span');\n        charSpan.className = 'icon-label__char';\n        charSpan.textContent = this._icon;\n        this._iconSlot.appendChild(charSpan);\n      } else {\n        // For image paths (URLs or data URIs)\n        const img = document.createElement('img');\n        img.src = this._icon;\n        img.alt = ''; // Decorative image\n        this._iconSlot.appendChild(img);\n      }\n    }\n\n    // Set the label text\n    const labelText = this._label || this.textContent.trim();\n    if (labelText && this._labelSlot) {\n      // Clear any existing content in the label slot\n      this._labelSlot.textContent = '';\n      \n      // If there's no explicit label attribute but there is text content,\n      // move the text content to the label slot\n      if (!this._label && this.textContent.trim()) {\n        while (this.firstChild) {\n          this._labelSlot.appendChild(this.firstChild);\n        }\n      } else {\n        // Otherwise, just set the text content\n        this._labelSlot.textContent = labelText;\n      }\n    }\n  }\n\n  // Getters and setters for properties\n  get icon() {\n    return this._icon;\n  }\n\n  set icon(value) {\n    this._icon = value;\n    this.setAttribute('icon', value);\n  }\n\n  get label() {\n    return this._label || this.textContent.trim();\n  }\n\n  set label(value) {\n    this._label = value;\n    if (this._labelSlot) {\n      this._labelSlot.textContent = value;\n    }\n  }\n\n  get reverse() {\n    return this._reverse;\n  }\n\n  set reverse(value) {\n    this._reverse = value !== null && value !== false;\n    this._render();\n  }\n\n  // Handle attribute changes\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'icon':\n        this._icon = newValue || '';\n        break;\n      case 'label':\n        this._label = newValue || '';\n        if (this._labelSlot) {\n          this._labelSlot.textContent = this._label;\n        }\n        break;\n      case 'reverse':\n        this._reverse = newValue !== null;\n        this._render();\n        break;\n    }\n  }\n}\n\n// Define the custom element\nif (!customElements.get('icon-label')) {\n  customElements.define('icon-label', IconLabel);\n}\n","/**\n * CollapsibleItem Component\n * A custom element that creates a collapsible list item\n * \n * @attr {boolean} expanded - Whether the item is expanded or collapsed\n * @attr {string} icon - Optional icon to display next to the label\n * @attr {string} label - The text label for the collapsible item\n * @attr {boolean} removeshift - If true, removes the left padding from the content area\n */\n\nimport { IconLabel } from '../../atoms/icon-label/IconLabel.js';\n\n// Import regular CSS\nimport './CollapsibleItem.css';\n\nexport class CollapsibleItem extends HTMLLIElement {\n    static get observedAttributes() {\n        return ['expanded', 'icon', 'label', 'removeshift', 'hide-icon'];\n    }\n    \n    constructor() {\n        super();\n        this._isExpanded = false;\n        this._handleClick = this._handleClick.bind(this);\n        this._header = null;\n        this._content = null;\n        this._initialRender = true;\n        this._removeShift = false;\n        this.rendered = false;\n        \n        // Add base class to the host element\n        this.classList.add('collapsible-item');\n        \n        // Initialize expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        }\n        \n        // Initialize no-padding state\n        if (this.hasAttribute('removeshift')) {\n            this.classList.add('collapsible-item--no-padding');\n        }\n    }\n\n    connectedCallback() {\n        // Ensure the component has the correct role for accessibility\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'listitem');\n        }\n        \n        // Set up the component if not already rendered\n        if (!this.rendered) {\n            this._render();\n            this.rendered = true;\n            this._addEventListeners();\n            \n            // Ensure the content visibility is set correctly based on the expanded state\n            this._updateContentVisibility();\n        }\n        \n        // Ensure the component is properly styled\n        this.classList.add('collapsible-item');\n        \n        // Set initial expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        } else {\n            this._isExpanded = false;\n            this.classList.remove('collapsible-item--expanded');\n        }\n    }\n    \n    disconnectedCallback() {\n        this._removeEventListeners();\n    }\n    \n    _addEventListeners() {\n        // Add click listener to the component itself for event delegation\n        this.addEventListener('click', this._handleClick);\n    }\n    \n    _removeEventListeners() {\n        this.removeEventListener('click', this._handleClick);\n    }\n    \n    _handleClick(event) {\n        // Find the closest header from the click target\n        const header = event.target.closest('.collapsible-item__header');\n        if (!header) return; // Not a header click\n        \n        // Prevent the default action to avoid any native behavior\n        event.preventDefault();\n        event.stopPropagation();\n        \n        // Toggle the expanded state\n        const isExpanding = !this.hasAttribute('expanded');\n        \n        // Update the expanded attribute\n        if (isExpanding) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the internal state and UI\n        this._isExpanded = isExpanding;\n        this._updateContentVisibility();\n        \n        // Dispatch a custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: isExpanding },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _createHeader() {\n        const header = document.createElement('div');\n        header.className = 'collapsible-item__header';\n        \n        // Create a container for the icon and label\n        const contentWrapper = document.createElement('div');\n        contentWrapper.style.display = 'flex';\n        contentWrapper.style.alignItems = 'center';\n        contentWrapper.style.flex = '1';\n        \n        // Add icon if provided and not hidden\n        const hideIcon = this.hasAttribute('hide-icon');\n        const icon = this.getAttribute('icon');\n        if (icon && !hideIcon) {\n            const iconEl = document.createElement('span');\n            iconEl.className = 'collapsible-item__icon';\n            iconEl.textContent = icon;\n            iconEl.style.marginRight = '0.5rem';\n            contentWrapper.appendChild(iconEl);\n        }\n        \n        // Add label\n        const label = this.getAttribute('label') || '';\n        if (label) {\n            const labelEl = document.createElement('span');\n            labelEl.className = 'collapsible-item__label';\n            labelEl.textContent = label;\n            contentWrapper.appendChild(labelEl);\n        }\n        \n        // Add the content wrapper to the header\n        header.appendChild(contentWrapper);\n                \n        return header;\n    }\n    \n    _render() {\n        // Prevent re-entrancy during rendering\n        if (!this._isRendering) {\n            this._isRendering = true;\n            \n            // Store any existing content that should be preserved\n            const existingContent = [];\n            Array.from(this.children).forEach(child => {\n                if (child !== this._header && child !== this._content) {\n                    existingContent.push(child);\n                }\n            });\n            \n            // Clear existing content\n            while (this.firstChild) {\n                this.removeChild(this.firstChild);\n            }\n            \n            // Create and append header\n            this._header = this._createHeader();\n            this.appendChild(this._header);\n            \n            // Set header attributes for accessibility\n            if (this._header) {\n                this._header.setAttribute('role', 'button');\n                this._header.setAttribute('aria-expanded', this._isExpanded ? 'true' : 'false');\n                this._header.setAttribute('tabindex', '0');\n                \n                // Add keyboard support\n                this._header.addEventListener('keydown', (e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        this._toggleExpanded();\n                    }\n                });\n            }\n            \n            // Create and append content container\n            this._content = this._createContent();\n            if (this._content) {\n                this.appendChild(this._content);\n                \n                // Add back any existing content to the content container\n                existingContent.forEach(child => {\n                    this._content.appendChild(child);\n                });\n            }\n            \n            // Ensure proper ARIA attributes for accessibility\n            this.setAttribute('role', 'listitem');\n            \n            // Set initial content visibility\n            this._updateContentVisibility();\n            \n            // Mark as rendered\n            this.rendered = true;\n            this._isRendering = false;\n        }\n    }\n    \n    _createContent() {\n        const content = document.createElement('div');\n        content.className = 'collapsible-item__content';\n        \n        // Filter out any header elements and their content\n        const headerElements = this.querySelectorAll('.collapsible-item__header, .collapsible-item__label, .collapsible-item__icon');\n        const headerElementSet = new Set(headerElements);\n        \n        // Process direct children that are not part of the header\n        const filteredChildren = Array.from(this.childNodes).filter(node => {\n            // Keep only element nodes that are not in the header\n            if (node.nodeType === Node.ELEMENT_NODE) {\n                return !headerElementSet.has(node) && !node.closest('.collapsible-item__header');\n            }\n            // Keep text nodes that are not just whitespace\n            if (node.nodeType === Node.TEXT_NODE) {\n                return node.textContent.trim() !== '' && \n                       !node.textContent.includes('▶') && \n                       !node.textContent.includes('▼');\n            }\n            return false;\n        });\n        \n        // Add the filtered children to the content\n        filteredChildren.forEach(child => {\n            content.appendChild(child.cloneNode(true));\n        });\n        \n        return content;\n    }\n    \n    get expanded() {\n        return this._isExpanded;\n    }\n    \n    set expanded(value) {\n        if (this._isExpanded === value) return; // No change needed\n        \n        this._isExpanded = value;\n        \n        // Update the attribute to reflect the state in the DOM\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the content visibility immediately\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _toggleExpanded() {\n        this._isExpanded = !this._isExpanded;\n        \n        // Update the expanded attribute\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the UI\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _updateContentVisibility() {\n        if (!this._content || !this._header) return;\n        \n        const hideIcon = this.hasAttribute('hide-icon');\n        \n        if (this._isExpanded) {\n            this._content.classList.add('collapsible-item__content--expanded');\n            this._content.style.display = 'block';\n            this._header.setAttribute('aria-expanded', 'true');\n            this.classList.add('collapsible-item--expanded');\n            // Update icon to expanded state (down arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▼');\n            }\n        } else {\n            this._content.classList.remove('collapsible-item__content--expanded');\n            this._content.style.display = 'none';\n            this._header.setAttribute('aria-expanded', 'false');\n            this.classList.remove('collapsible-item--expanded');\n            // Update icon to collapsed state (right arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▶');\n            }\n        }\n    }\n    \n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'removeshift') {\n            this._removeShift = newValue !== null;\n            if (this._removeShift) {\n                this.classList.add('collapsible-item--no-padding');\n            } else {\n                this.classList.remove('collapsible-item--no-padding');\n            }\n        } else if (name === 'hide-icon' && this._header) {\n            // Handle hide-icon attribute changes\n            const iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue !== null) {\n                // hide-icon is set, remove the icon if it exists\n                if (iconEl) {\n                    iconEl.remove();\n                }\n            } else if (this.hasAttribute('icon')) {\n                // hide-icon is removed, add the icon back if we have an icon attribute\n                if (!iconEl) {\n                    const icon = this.getAttribute('icon');\n                    const newIconEl = document.createElement('span');\n                    newIconEl.className = 'collapsible-item__icon';\n                    newIconEl.textContent = icon;\n                    newIconEl.style.marginRight = '0.5rem';\n                    const contentWrapper = this._header.firstElementChild;\n                    if (contentWrapper) {\n                        contentWrapper.insertBefore(newIconEl, contentWrapper.firstChild);\n                    }\n                }\n            }\n        } else if (name === 'expanded') {\n            const wasExpanded = this._isExpanded;\n            this._isExpanded = newValue !== null;\n            \n            // Only update if the state actually changed\n            if (this._isExpanded !== wasExpanded) {\n                this._updateContentVisibility();\n            }\n        } else if (name === 'icon' && this._header) {\n            // Update the icon if it exists, or create it if it doesn't\n            let iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue) {\n                if (!iconEl) {\n                    iconEl = document.createElement('span');\n                    iconEl.className = 'collapsible-item__icon';\n                    this._header.insertBefore(iconEl, this._header.firstChild);\n                }\n                iconEl.textContent = newValue;\n            } else if (iconEl) {\n                this._header.removeChild(iconEl);\n            }\n        } else if (name === 'label' && this._header) {\n            // Update the label if it exists, or create it if it doesn't\n            let labelEl = this._header.querySelector('.collapsible-item__label');\n            if (labelEl) {\n                labelEl.textContent = newValue || '';\n            } else if (newValue) {\n                labelEl = document.createElement('span');\n                labelEl.className = 'collapsible-item__label';\n                labelEl.textContent = newValue;\n                this._header.appendChild(labelEl);\n            }\n        }\n    }\n}\n\n// Define the custom element with the correct name\nconst elementName = 'collapsible-item';\n\n// Check if the element is already defined and undefine it if necessary\nif (typeof window !== 'undefined' && window.customElements) {\n    // First, try to undefine the element if it exists\n    if (window.customElements.get(elementName)) {\n        const oldElement = window.customElements.get(elementName);\n        delete window.customElements._elements[elementName];\n    }\n    \n    // Define the element with the proper configuration\n    window.customElements.define(elementName, CollapsibleItem, { extends: 'li' });\n}","// Core components\nexport * from './molecules/collapsible-list/CollapsibleList.js';\nexport * from './molecules/collapsible-item/CollapsibleItem.js';\n\n// Additional components (dynamically imported when needed)\nlet additionalComponents = {};\n\n// Function to load additional components\nexport async function loadAdditionalComponents() {\n  try {\n    const selectionMenuModule = await import('./organisms/selection-menu/SelectionMenu.js');\n    additionalComponents.SelectionMenu = selectionMenuModule.default || selectionMenuModule;\n  } catch (e) {\n    console.warn('SelectionMenu component not found or failed to load', e);\n  }\n\n  try {\n    const productLayoutModule = await import('./templates/product-layout/ProductLayout.js');\n    additionalComponents.ProductLayout = productLayoutModule.default || productLayoutModule;\n  } catch (e) {\n    console.warn('ProductLayout component not found or failed to load', e);\n  }\n  \n  return additionalComponents;\n}\n\n// Export a function to get additional components\nexport function getAdditionalComponents() {\n  return additionalComponents;\n}\n","import { useEffect, useRef, forwardRef } from 'react';\nimport * as webComponents from '../../components';\n\n// Auto-generate React wrappers for all web components\nconst wrappers = {};\n\nObject.entries(webComponents).forEach(([componentName, webComponent]) => {\n  if (typeof webComponent === 'function' && webComponent.name) {\n    const ReactComponent = forwardRef(({ children, ...props }, ref) => {\n      const elementRef = useRef(null);\n      const eventHandlers = useRef({});\n\n      // Handle event listeners\n      useEffect(() => {\n        const element = elementRef.current;\n        const currentEventHandlers = {};\n\n        // Add event listeners\n        Object.entries(props).forEach(([key, value]) => {\n          if (typeof value === 'function' && key.startsWith('on')) {\n            const eventName = key.substring(2).toLowerCase();\n            const handler = (e) => {\n              // Forward the event to the React event handler\n              value(e);\n            };\n            element.addEventListener(eventName, handler);\n            currentEventHandlers[eventName] = handler;\n          }\n        });\n\n        // Store current event handlers for cleanup\n        eventHandlers.current = currentEventHandlers;\n\n        // Cleanup event listeners\n        return () => {\n          Object.entries(eventHandlers.current).forEach(([eventName, handler]) => {\n            element.removeEventListener(eventName, handler);\n          });\n        };\n      }, [props]);\n\n      // Filter out event handlers from props to avoid React warnings\n      const elementProps = Object.entries(props).reduce((acc, [key, value]) => {\n        if (!(typeof value === 'function' && key.startsWith('on'))) {\n          acc[key] = value;\n        }\n        return acc;\n      }, {});\n\n      // Forward the ref\n      useEffect(() => {\n        if (ref) {\n          if (typeof ref === 'function') {\n            ref(elementRef.current);\n          } else {\n            ref.current = elementRef.current;\n          }\n        }\n      }, [ref]);\n\n      const TagName = webComponent.is || componentName.toLowerCase();\n      \n      return (\n        <TagName ref={elementRef} {...elementProps}>\n          {children}\n        </TagName>\n      );\n    });\n\n    // Set display name for better debugging\n    ReactComponent.displayName = componentName;\n    wrappers[componentName] = ReactComponent;\n  }\n});\n\nexport default wrappers;\n","import * as webComponents from '../../components';\n\nconst VuePlugin = {\n  install(app) {\n    // Register all web components as Vue components\n    Object.entries(webComponents).forEach(([componentName, webComponent]) => {\n      if (typeof webComponent === 'function' && webComponent.name) {\n        const tagName = webComponent.is || componentName.toLowerCase();\n        \n        // Create a Vue component definition\n        const vueComponent = {\n          name: componentName,\n          inheritAttrs: false,\n          emits: [], // Will be populated with event names\n          props: {},\n          render() {\n            // Convert kebab-case attributes to camelCase for web components\n            const attrs = Object.entries(this.$attrs).reduce((acc, [key, value]) => {\n              // Convert kebab-case to camelCase for props\n              const camelKey = key.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n              acc[camelKey] = value;\n              return acc;\n            }, {});\n\n            // Add event listeners\n            const on = {};\n            Object.keys(this.$listeners).forEach((event) => {\n              on[event] = this.$listeners[event];\n            });\n\n            return this.$createElement(\n              tagName,\n              {\n                attrs,\n                on,\n                ref: 'webComponent',\n              },\n              this.$slots.default\n            );\n          },\n        };\n\n        // Register the component globally\n        app.component(componentName, vueComponent);\n      }\n    });\n  },\n};\n\nexport default VuePlugin;\n","// Core web components\nexport * from './components';\n\n// Additional components that need to be loaded asynchronously\nimport { loadAdditionalComponents, getAdditionalComponents } from './components';\n\n// Export React wrappers\nexport { default as ReactWrappers } from './wrappers/react/index.jsx';\n\n// Export Vue plugin\nexport { default as VuePlugin } from './wrappers/vue';\n\n// Export component loader\nexport const Components = {\n  // Core components are already available via default export\n  ...getAdditionalComponents(),\n  \n  // Method to load additional components\n  async load() {\n    await loadAdditionalComponents();\n    Object.assign(this, getAdditionalComponents());\n    return this;\n  }\n};\n\n// Auto-load additional components in browser environment\nif (typeof window !== 'undefined') {\n  Components.load().catch(console.error);\n}\n","/**\n * SelectionMenu Component\n * A collapsible menu that allows selection of leaf nodes using CollapsibleItem\n * \n * @fires item-selected - Dispatched when a leaf node is selected\n * @property {string} items - JSON string representing the menu items structure\n * @property {string} selected - ID of the currently selected item\n */\n\nexport class SelectionMenu extends HTMLElement {\n  static get observedAttributes() {\n    return ['items', 'selected'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._items = [];\n    this._selectedId = null;\n    this._boundOnItemClick = this._onItemClick.bind(this);\n    \n    // Import the CollapsibleItem component\n    import('../../molecules/collapsible-item/CollapsibleItem.js');\n  }\n\n  connectedCallback() {\n    this._render();\n  }\n\n  disconnectedCallback() {\n    this._removeEventListeners();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'items':\n        this._items = newValue ? JSON.parse(newValue) : [];\n        this._render();\n        break;\n      case 'selected':\n        this._selectedId = newValue;\n        this._updateSelectedState();\n        break;\n    }\n  }\n\n  get items() {\n    return JSON.stringify(this._items);\n  }\n\n  set items(value) {\n    this._items = value ? JSON.parse(value) : [];\n    this._render();\n  }\n\n  get selected() {\n    return this._selectedId;\n  }\n\n  set selected(value) {\n    if (this._selectedId !== value) {\n      this._selectedId = value;\n      this._updateSelectedState();\n    }\n  }\n\n  _render() {\n    if (!this.shadowRoot) return;\n    \n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          --primary-color: #4a6cf7;\n          --hover-bg: #f5f8ff;\n          --selected-bg: #e6f0ff;\n          --border-color: #e2e8f0;\n          --text-color: #2d3748;\n          --text-secondary: #4a5568;\n        }\n        \n        .menu-container {\n          border: 1px solid var(--border-color);\n          border-radius: 6px;\n          overflow: hidden;\n        }\n        \n        .menu-item {\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          margin: 2px 0;\n          border-radius: 4px;\n        }\n        \n        .menu-item:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        .menu-item--selected:hover {\n          background-color: var(--selected-bg, #e6f0ff);\n        }\n        \n        /* Style for the collapsible item header */\n        .menu-item::part(header) {\n          padding: 8px 12px;\n          display: flex;\n          align-items: center;\n        }\n        \n        /* Style for the collapsible item content */\n        .menu-item::part(content) {\n          padding: 0;\n          overflow: hidden;\n          transition: max-height 0.3s ease, opacity 0.2s ease;\n          max-height: 0;\n          opacity: 0;\n          margin: 0;\n        }\n        \n        .menu-item::part(content).menu-item__content--expanded {\n          max-height: 1000px; /* Adjust based on your needs */\n          opacity: 1;\n          padding: 4px 0 4px 1rem;\n        }\n        \n        .menu-item__child-list {\n          list-style: none;\n          padding: 0;\n          margin: 0 0 0 1rem;\n        }\n        \n        /* Remove bullets from ul elements */\n        ul {\n          list-style-type: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Ensure list items have no default styling */\n        li {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Leaf item styles */\n        .menu-item__leaf {\n          display: flex;\n          align-items: center;\n          padding: 4px 12px;\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          border-radius: 4px;\n        }\n        \n        .menu-item__leaf:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item__leaf.menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        /* Arrow icon for collapsible items */\n        .menu-item__arrow {\n          display: inline-block;\n          width: 12px;\n          text-align: center;\n          transition: transform 0.2s ease;\n        }\n        \n        .menu-item[expanded] .menu-item__arrow {\n          transform: rotate(90deg);\n        }\n      </style>\n      <div class=\"menu-container\">\n        ${this._renderItems(this._items, 0)}\n      </div>\n    `;\n    \n    this._addEventListeners();\n  }\n  \n  _renderItems(items, level = 0) {\n    if (!items || !items.length) return '';\n    \n    // Create a container for the list\n    const listContainer = document.createElement('ul');\n    listContainer.style.listStyle = 'none';\n    listContainer.style.padding = '0';\n    listContainer.style.margin = '0';\n    \n    items.forEach(item => {\n      const hasChildren = item.children && item.children.length > 0;\n      const isSelected = this._selectedId === item.id;\n      \n      // Create list item\n      const li = document.createElement('li');\n      li.setAttribute('data-id', item.id);\n      \n      if (hasChildren) {\n        // For items with children, use collapsible-item\n        li.setAttribute('is', 'collapsible-item');\n        li.setAttribute('data-id', item.id);\n        li.setAttribute('label', item.name);\n        \n        // Determine initial state\n        const hasSelectedDescendant = this._hasSelectedDescendant(item);\n        const isExpanded = hasSelectedDescendant || isSelected;\n        \n        // Set initial expanded state\n        if (isExpanded) {\n          li.setAttribute('expanded', '');\n        }\n        \n        // Set the arrow icon using the icon attribute\n        li.setAttribute('icon', isExpanded ? '▼' : '▶');\n        li.style.marginRight = '8px';\n        li.style.transition = 'transform 0.2s ease';\n        \n        if (isSelected) {\n          li.classList.add('menu-item--selected');\n        }\n        \n        // Create and append child list\n        const childList = document.createElement('ul');\n        childList.className = 'menu-item__child-list';\n        childList.innerHTML = this._renderItems(item.children, level + 1);\n        \n        // Create content container with proper styling\n        const contentSlot = document.createElement('div');\n        contentSlot.slot = 'content';\n        contentSlot.className = 'menu-item__content';\n        \n        // Add the child list to the content slot\n        contentSlot.appendChild(childList);\n        \n        // Add the content slot to the collapsible item\n        li.appendChild(contentSlot);\n        \n        // Handle the toggle event to update the content visibility\n        li.addEventListener('toggle', (e) => {\n          contentSlot.style.display = e.detail.expanded ? 'block' : 'none';\n        });\n      } else {\n        // For leaf nodes, just use a span\n        const span = document.createElement('span');\n        span.className = 'menu-item__leaf';\n        if (isSelected) span.classList.add('menu-item--selected');\n        \n      \n        \n        // Add label\n        const label = document.createElement('span');\n        label.className = 'menu-item__label';\n        label.textContent = item.name;\n        span.appendChild(label);\n        \n        // Add click handler for selection\n        span.addEventListener('click', (e) => {\n          e.stopPropagation();\n          this._selectedId = item.id;\n          this._updateSelectedState();\n          this.dispatchEvent(new CustomEvent('item-selected', {\n            detail: {\n              id: item.id,\n              item: item,\n              name: item.name\n            },\n            bubbles: true,\n            composed: true\n          }));\n        });\n        \n        li.appendChild(span);\n      }\n      \n      listContainer.appendChild(li);\n    });\n    \n    return level === 0 ? listContainer.outerHTML : listContainer.innerHTML;\n  }\n  \n  _addEventListeners() {\n    this.shadowRoot.addEventListener('click', this._boundOnItemClick);\n  }\n  \n  _removeEventListeners() {\n    this.shadowRoot.removeEventListener('click', this._boundOnItemClick);\n  }\n  \n  _onItemClick(event) {\n    // Handle leaf node clicks\n    const leafNode = event.target.closest('.menu-item__leaf');\n    if (leafNode) {\n      event.stopPropagation();\n      const itemId = leafNode.getAttribute('data-id');\n      if (itemId) {\n        this.selected = itemId;\n        this._updateSelectedState();\n        this.dispatchEvent(new CustomEvent('item-selected', {\n          detail: { id: itemId },\n          bubbles: true,\n          composed: true\n        }));\n      }\n      return;\n    }\n    \n    // Handle collapsible item clicks\n    const header = event.target.closest('.collapsible-item__header');\n    if (!header) return;\n    \n    const itemElement = header.parentElement;\n    if (itemElement && itemElement.getAttribute('is') === 'collapsible-item') {\n      event.stopPropagation();\n      \n      // Toggle the expanded state\n      const isExpanded = itemElement.hasAttribute('expanded');\n      const arrowIcon = itemElement.querySelector('.menu-item__arrow');\n      \n      if (isExpanded) {\n        itemElement.removeAttribute('expanded');\n        if (arrowIcon) arrowIcon.textContent = '▶';\n      } else {\n        itemElement.setAttribute('expanded', '');\n        if (arrowIcon) arrowIcon.textContent = '▼';\n      }\n      \n      // Dispatch a custom event for the toggle action\n      itemElement.dispatchEvent(new CustomEvent('toggle', {\n        detail: { expanded: !isExpanded },\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n  \n  _updateSelectedState() {\n    if (!this.shadowRoot) return;\n    \n    // Remove selected class from all items\n    const allCollapsibleItems = this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]');\n    const allLeafItems = this.shadowRoot.querySelectorAll('.menu-item__leaf');\n    \n    allCollapsibleItems.forEach(item => {\n      item.classList.remove('menu-item--selected');\n      item.removeAttribute('selected');\n    });\n    \n    allLeafItems.forEach(leaf => {\n      leaf.classList.remove('menu-item--selected');\n    });\n    \n    // Add selected class to the selected item\n    if (this._selectedId) {\n      \n      // Check collapsible items\n      const selectedCollapsibleItem = this.shadowRoot.querySelector(`li[is=\"collapsible-item\"][data-id=\"${this._selectedId}\"]`);\n      if (selectedCollapsibleItem) {\n        selectedCollapsibleItem.classList.add('menu-item--selected');\n        selectedCollapsibleItem.setAttribute('selected', '');\n      }\n      \n      // Check leaf items\n      const selectedLeafItem = this.shadowRoot.querySelector(`li[data-id=\"${this._selectedId}\"] .menu-item__leaf`);\n      if (selectedLeafItem) {\n        selectedLeafItem.classList.add('menu-item--selected');\n      }\n      \n      // If we didn't find the item, it might be because it's in a closed collapsible item\n      if (!selectedCollapsibleItem && !selectedLeafItem) {\n        console.warn('Could not find selected item in the DOM. It might be in a closed collapsible section.');\n      }\n    }\n  }\n  \n  _hasSelectedDescendant(item) {\n    if (!item) return false;\n    \n    // Check if this item is selected\n    if (item.id === this._selectedId) return true;\n    \n    // Check if any child is selected\n    if (item.children) {\n      return item.children.some(child => this._hasSelectedDescendant(child));\n    }\n    \n    return false;\n  }\n  \n  _findItemById(items, id) {\n    if (!items || !items.length) return null;\n    \n    for (const item of items) {\n      if (item.id === id) return item;\n      if (item.children) {\n        const found = this._findItemById(item.children, id);\n        if (found) return found;\n      }\n    }\n    return null;\n  }\n}\n\n// Define the custom element\nif (!customElements.get('selection-menu')) {\n  customElements.define('selection-menu', SelectionMenu);\n}","import { CollapsibleItem } from '../../molecules/collapsible-item/CollapsibleItem.js';\n\nexport class ImageCollection extends HTMLElement {\n    static get observedAttributes() {\n        return ['images'];\n    }\n\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this._images = [];\n        this._handleToggle = this._handleToggle.bind(this);\n        this._currentOpenIndex = 0;\n    }\n\n    get images() {\n        return this._images;\n    }\n\n    set images(value) {\n        if (Array.isArray(value)) {\n            this._images = value;\n            this.render();\n        } else if (typeof value === 'string') {\n            try {\n                this._images = JSON.parse(value);\n                this.render();\n            } catch (e) {\n            }\n        }\n    }\n\n    connectedCallback() {\n        this.render();\n        this.shadowRoot.addEventListener('toggle', this._handleToggle);\n    }\n\n    disconnectedCallback() {\n        this.shadowRoot.removeEventListener('toggle', this._handleToggle);\n    }\n\n    _handleToggle(event) {\n        // Prevent event from bubbling up\n        event.stopPropagation();\n        \n        // Prevent reentrant calls\n        if (this._isHandlingToggle) return;\n        this._isHandlingToggle = true;\n        \n        let index = -1;\n        let wasExpanded = false;\n        \n        try {\n            \n            // Find the clicked collapsible item by traversing up the composed path\n            const target = event.composedPath().find(\n                node => node.nodeType === Node.ELEMENT_NODE && \n                       node.getAttribute && \n                       node.getAttribute('is') === 'collapsible-item'\n            );\n            \n            if (!target) {\n                return;\n            }\n\n            // Get all collapsible items\n            const allItems = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n            index = allItems.indexOf(target);\n            \n            if (index === -1) {\n                return;\n            }\n            \n            // Prevent toggling if this item is already open\n            if (index === this._currentOpenIndex) {\n                return;\n            }\n            \n            wasExpanded = target.expanded;\n            \n            // Update all items\n            \n            // First, close all items except the target\n            allItems.forEach((item, i) => {\n                if (i !== index && item.expanded) {\n                    item.expanded = false;\n                }\n            });\n            \n            // Then toggle the target item if needed\n            if (index === this._currentOpenIndex) {\n                // Clicked the currently open item - close it\n                target.expanded = false;\n                this._currentOpenIndex = -1;\n            } else {\n                // Open the clicked item\n                target.expanded = true;\n                this._currentOpenIndex = index;\n            }\n        } finally {\n            // Always clear the flag, even if an error occurred\n            this._isHandlingToggle = false;\n        }\n        \n        // Dispatch our custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { \n                index,\n                expanded: !wasExpanded,\n                source: 'image-collection'\n            },\n            bubbles: true,\n            composed: true\n        }));\n    }\n\n    \n    _onItemToggle(event) {\n        // Stop propagation to prevent double-handling\n        event.stopPropagation();\n        \n        const targetItem = event.target.closest('li[is=\"collapsible-item\"]');\n        if (!targetItem) return;\n\n        const items = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n        const index = items.indexOf(targetItem);\n        \n        if (index === -1) return;\n\n        // If the clicked item is being closed, just update our state\n        if (!event.detail.expanded) {\n            if (this._currentOpenIndex === index) {\n                this._currentOpenIndex = -1;\n            }\n            return;\n        }\n\n        // Close the previously open item if it's different from the clicked one\n        if (this._currentOpenIndex !== -1 && this._currentOpenIndex !== index) {\n            const previousItem = items[this._currentOpenIndex];\n            if (previousItem) {\n                previousItem.toggle(false);\n            }\n        }\n        \n        this._currentOpenIndex = index;\n    }\n\n    render() {\n        if (!this.shadowRoot) return;\n        \n        // Only expand the first item if no item is currently expanded\n        if (this._currentOpenIndex === -1 && this._images.length > 0) {\n            this._currentOpenIndex = 0;\n        }\n        \n        this.shadowRoot.innerHTML = `\n            <style>\n                .image-collection {\n                    width: 100%;\n                    max-width: 800px;\n                    margin: 0 auto;\n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n                }\n                \n                .image-collection__container {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 0;\n                    width: 100%;\n                    list-style: none;\n                    padding: 0;\n                }\n                \n                .image-collection__item {\n                    width: 100%;\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection__image {\n                    width: 100%;\n                    height: auto;\n                    display: block;\n                }\n                \n                .image-collection__title {\n                    font-weight: 600;\n                    padding: 0.8rem 1rem;\n                    background-color: #f8fafc;\n                    width: 100%;\n                    cursor: pointer;\n                    transition: background-color 0.2s;\n                }\n                \n                .image-collection__title:hover {\n                    background-color: #f1f5f9;\n                }\n                \n                .image-collection .collapsible-item__header {\n                    padding: 0.5rem 1rem;\n                    background: none;\n                    border: none;\n                    width: 100%;\n                    text-align: left;\n                    cursor: pointer;\n                }\n                \n                .image-collection .collapsible-item__content {\n                    margin: 0;\n                    transition: all 0.3s ease;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"] {\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"]:last-child {\n                    margin-bottom: 0;\n                }\n            </style>\n            <div class=\"image-collection\">\n                <ul class=\"image-collection__container\">\n                    ${this._images.map((image, index) => `\n                        <li is=\"collapsible-item\" \n                            label=\"${image.title}\" \n                            ${image.removeshift ? 'removeshift=\"true\"' : ''}\n                            ${this._currentOpenIndex === index ? 'expanded' : ''}\n                            hide-icon\n                            >\n                            <div slot=\"content\">\n                                <img \n                                    class=\"image-collection__image\" \n                                    src=\"${image.src}\" \n                                    alt=\"${image.title}\"\n                                    loading=\"lazy\"\n                                >\n                            </div>\n                        </li>\n                    `).join('')}\n                </ul>\n            </div>\n        `;\n    }\n}\n\nif (!customElements.get('image-collection')) {\n    customElements.define('image-collection', ImageCollection);\n}","/**\n * ProductLayout\n * A layout component that displays an image collection, title, and content\n */\nimport { ImageCollection } from '../../organisms/image-collection/ImageCollection.js';\n\n// Import sample images\nconst defaultImages = [\n  {\n    title: 'Nature',\n    src: '/images/samples/nature.jpg',\n    alt: 'Scenic nature landscape',\n    description: 'A beautiful landscape showcasing nature\\'s beauty.'\n  },\n  {\n    title: 'Architecture',\n    src: '/images/samples/architecture.jpg',\n    alt: 'Modern architecture building',\n    description: 'Stunning modern architecture design.'\n  },\n  {\n    title: 'Technology',\n    src: '/images/samples/technology.jpg',\n    alt: 'Technology circuit board',\n    description: 'Close-up of an advanced circuit board.'\n  }\n];\n\nexport class ProductLayout extends HTMLElement {\n  static get observedAttributes() {\n    return ['title', 'images'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._title = 'Product Name';\n    this._images = [];\n    this._isConnected = false;\n    this._hasRendered = false;\n    this._isUpdating = false;\n    this._elements = null;\n    this._render = this._render.bind(this);\n  }\n\n  connectedCallback() {\n    this._isConnected = true;\n    this._render();\n  }\n\n  disconnectedCallback() {\n    this._isConnected = false;\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    \n    if (name === 'title') {\n      this._title = newValue || 'Product Name';\n      this._updateTitle();\n    } else if (name === 'images') {\n      if (typeof newValue === 'string') {\n        try {\n          const parsed = JSON.parse(newValue);\n          this.images = Array.isArray(parsed) ? parsed : [];\n        } catch (e) {\n          console.error('Invalid images JSON:', e);\n          this.images = [];\n        }\n      } else if (Array.isArray(newValue)) {\n        this.images = newValue;\n      } else {\n        this.images = [];\n      }\n    }\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  set title(value) {\n    if (this._title === value) return;\n    this._title = value || '';\n    this._updateTitle();\n  }\n\n  get images() {\n    return this._images;\n  }\n\n  set images(value) {\n    if (Array.isArray(value)) {\n      this._images = value.length > 0 ? value : [...defaultImages];\n    } else if (typeof value === 'string') {\n      try {\n        const parsed = JSON.parse(value);\n        this._images = Array.isArray(parsed) ? parsed : [...defaultImages];\n      } catch (e) {\n        console.error('Invalid images JSON:', e);\n        this._images = [...defaultImages];\n      }\n    } else {\n      this._images = [...defaultImages];\n    }\n    this._updateImages();\n  }\n\n  _updateTitle() {\n    if (!this._elements?.title) return;\n    this._elements.title.textContent = this._title;\n  }\n\n  _updateImages() {\n    if (!this._elements?.imageCollection) return;\n    // Ensure we're passing a fresh copy of the array to trigger the setter\n    this._elements.imageCollection.images = [...this._images];\n    \n    // Ensure the ImageCollection is visible\n    if (this._elements.imageCollectionContainer) {\n      this._elements.imageCollectionContainer.style.display = 'block';\n    }\n  }\n\n  _render() {\n    if (this._isUpdating || !this.shadowRoot) return;\n    this._isUpdating = true;\n\n    try {\n      if (!this._hasRendered) {\n        this.shadowRoot.innerHTML = `\n          <style>\n            :host {\n              display: block;\n              max-width: 1200px;\n              margin: 0 auto;\n              padding: 2rem;\n              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n            }\n            \n            .product-layout {\n              display: grid;\n              grid-template-columns: 1fr;\n              gap: 2rem;\n            }\n            \n            .product-header {\n              text-align: center;\n              margin-bottom: 2rem;\n            }\n            \n            .product-title {\n              font-size: 2.5rem;\n              color: #2d3748;\n              margin: 0 0 1rem;\n            }\n            \n            .content {\n              line-height: 1.6;\n              color: #4a5568;\n            }\n            \n            .image-collection-container {\n              margin: 2rem 0;\n            }\n            \n            /* Remove padding from collapsible items */\n            image-collection::part(content) {\n              padding: 0;\n            }\n            \n            @media (min-width: 1024px) {\n              .product-layout {\n                grid-template-columns: 1fr 1fr;\n                align-items: start;\n              }\n            }\n          </style>\n          <div class=\"product-layout\">\n            <div class=\"product-content\">\n              <div class=\"product-header\">\n                <h1 class=\"product-title\" id=\"title\"></h1>\n              </div>\n              <div class=\"content\" id=\"content\">\n                <slot></slot>\n              </div>\n            </div>\n            <div class=\"image-collection-container\" id=\"imageCollectionContainer\" style=\"display: none;\">\n              <image-collection id=\"imageCollection\"></image-collection>\n            </div>\n          </div>\n        `;\n\n        this._elements = {\n          title: this.shadowRoot.getElementById('title'),\n          content: this.shadowRoot.getElementById('content'),\n          imageCollection: this.shadowRoot.getElementById('imageCollection'),\n          imageCollectionContainer: this.shadowRoot.getElementById('imageCollectionContainer')\n        };\n        \n        // Initialize with default images if none provided\n        if (this._images.length === 0) {\n          this._images = [...defaultImages];\n        }\n\n        this._hasRendered = true;\n      }\n\n      this._updateTitle();\n      this._updateImages();\n    } finally {\n      this._isUpdating = false;\n    }\n  }\n}\n\n// Auto-register the component when loaded directly\nif (typeof window !== 'undefined' && !customElements.get('product-layout')) {\n  customElements.define('product-layout', ProductLayout);\n}\n"],"names":["CollapsibleList","HTMLElement","observedAttributes","constructor","this","attachShadow","mode","_isUpdating","_handleItemToggle","bind","container","document","createElement","slot","style","textContent","appendChild","shadowRoot","append","connectedCallback","_initialized","_initializeComponent","_updateReverseHeading","addEventListener","hasAttribute","_ensureOneItemExpanded","_setupMutationObserver","setAttribute","_observer","MutationObserver","async","mutations","shouldUpdate","mutation","type","attributeName","node","addedNodes","nodeType","Node","ELEMENT_NODE","matches","observe","attributes","attributeFilter","childList","subtree","isReversed","getAttribute","disconnect","processItems","items","item","removeAttribute","nestedItems","querySelectorAll","length","Array","from","nestedLists","processLists","lists","list","offsetHeight","error","e","target","parentElement","expanded","_closeOtherItems","exceptItem","closest","forEach","_getOpenItems","firstItem","querySelector","customElements","get","define","IconLabel","super","_icon","_label","_reverse","_render","className","iconSlot","name","labelSlot","_container","_iconSlot","_labelSlot","classList","add","innerHTML","codePointAt","charSpan","img","src","alt","labelText","trim","firstChild","icon","value","label","reverse","attributeChangedCallback","oldValue","newValue","CollapsibleItem","HTMLLIElement","_isExpanded","_handleClick","_header","_content","_initialRender","_removeShift","rendered","_addEventListeners","_updateContentVisibility","remove","disconnectedCallback","_removeEventListeners","removeEventListener","event","preventDefault","stopPropagation","isExpanding","dispatchEvent","CustomEvent","detail","bubbles","composed","_createHeader","header","contentWrapper","display","alignItems","flex","hideIcon","iconEl","marginRight","labelEl","_isRendering","existingContent","children","child","push","removeChild","key","_toggleExpanded","_createContent","content","headerElements","headerElementSet","Set","childNodes","filter","has","TEXT_NODE","includes","cloneNode","newIconEl","firstElementChild","insertBefore","wasExpanded","elementName","window","_elements","extends","additionalComponents","loadAdditionalComponents","selectionMenuModule","Promise","resolve","then","SelectionMenu$1","SelectionMenu","default","productLayoutModule","ProductLayout$1","ProductLayout","getAdditionalComponents","wrappers","Object","entries","webComponents","componentName","webComponent","ReactComponent","forwardRef","props","ref","elementRef","useRef","eventHandlers","useEffect","element","current","currentEventHandlers","startsWith","eventName","substring","toLowerCase","handler","elementProps","reduce","acc","TagName","is","displayName","VuePlugin","install","app","tagName","vueComponent","inheritAttrs","emits","render","attrs","$attrs","replace","g","toUpperCase","on","keys","$listeners","$createElement","$slots","component","Components","load","assign","catch","console","_items","_selectedId","_boundOnItemClick","_onItemClick","CollapsibleItem$1","JSON","parse","_updateSelectedState","stringify","selected","_renderItems","level","listContainer","listStyle","padding","margin","hasChildren","isSelected","id","li","isExpanded","_hasSelectedDescendant","transition","contentSlot","span","outerHTML","leafNode","itemId","itemElement","arrowIcon","allCollapsibleItems","allLeafItems","leaf","selectedCollapsibleItem","selectedLeafItem","some","_findItemById","found","ImageCollection","_images","_handleToggle","_currentOpenIndex","images","isArray","_isHandlingToggle","index","composedPath","find","allItems","indexOf","i","source","_onItemToggle","targetItem","previousItem","toggle","map","image","title","removeshift","join","defaultImages","description","_title","_isConnected","_hasRendered","_updateTitle","parsed","_updateImages","_a","imageCollection","imageCollectionContainer","getElementById"],"mappings":"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"}