{"version":3,"file":"index.umd.js","sources":["../src/components/molecules/collapsible-list/CollapsibleList.js","../src/components/atoms/icon-label/IconLabel.js","../src/components/molecules/collapsible-item/CollapsibleItem.js","../src/components/organisms/selection-menu/SelectionMenu.js","../src/components/organisms/image-collection/ImageCollection.js","../src/components/templates/product-layout/ProductLayout.js","../src/init.js","../src/wrappers/react/index.jsx","../src/components/index.js","../src/wrappers/vue/index.js","../src/index.js"],"sourcesContent":["/**\r\n * CollapsibleList Component\r\n * A custom element that creates a collapsible list container\r\n */\r\n\r\nexport class CollapsibleList extends HTMLElement {\r\n  static get observedAttributes() {\r\n    return ['reverse-heading', 'single-item', 'accordion'];\r\n  }\r\n  \r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this._isUpdating = false; // Track if we're currently updating to prevent reentrant calls\r\n    this._handleItemToggle = this._handleItemToggle.bind(this);\r\n    \r\n    const container = document.createElement('div');\r\n    const slot = document.createElement('slot');\r\n    \r\n    // Create styles for the component\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n        width: 100%;\r\n        --indent-size: 1.5rem;\r\n      }\r\n      \r\n      ::slotted(collapsible-item) {\r\n        display: block;\r\n        margin: 0.25rem 0;\r\n        padding: 0;\r\n        width: 100%;\r\n      }\r\n      \r\n      /* Nested lists should have a border */\r\n      ::slotted(collapsible-list) {\r\n        border-left: 1px solid #e0e0e0;\r\n        margin-left: 0.5rem;\r\n        padding-left: 0.5rem;\r\n      }\r\n      \r\n      /* Style for the header in collapsible items */\r\n      .collapsible-item__header {\r\n        display: flex;\r\n        align-items: center;\r\n        width: 100%;\r\n        flex-direction: row;\r\n      }\r\n      \r\n      /* Toggle container styles */\r\n      .collapsible-item__toggle-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: var(--toggle-size, 24px);\r\n        height: var(--toggle-size, 24px);\r\n        margin: var(--toggle-margin, 0 8px 0 0);\r\n        flex-shrink: 0;\r\n      }`;\r\n    \r\n    container.appendChild(slot);\r\n    this.shadowRoot.append(style, container);\r\n  }\r\n  \r\n  async connectedCallback() {\r\n    if (!this._initialized) {\r\n      this._initializeComponent();\r\n      this._initialized = true;\r\n      \r\n      // Set initial reverse heading state\r\n      await this._updateReverseHeading();\r\n      \r\n      // Set up event listeners for accordion behavior\r\n      this.addEventListener('toggle', this._handleItemToggle);\r\n      \r\n      // Ensure at least one item is expanded in accordion mode\r\n      if (this.hasAttribute('accordion')) {\r\n        this._ensureOneItemExpanded();\r\n      }\r\n    }\r\n    \r\n    // Set up mutation observer for dynamic content\r\n    this._setupMutationObserver();\r\n  }\r\n  \r\n  _initializeComponent() {\r\n    if (!this.hasAttribute('role')) {\r\n      this.setAttribute('role', 'list');\r\n    }\r\n    \r\n    if (!this.hasAttribute('aria-label') && !this.hasAttribute('aria-labelledby')) {\r\n      console.warn('collapsible-list: Add an aria-label or aria-labelledby attribute for accessibility');\r\n    }\r\n  }\r\n  \r\n  _setupMutationObserver() {\r\n    // Set up a mutation observer to handle dynamically added items and attribute changes\r\n    this._observer = new MutationObserver(async (mutations) => {\r\n      let shouldUpdate = false;\r\n      \r\n      for (const mutation of mutations) {\r\n        if (mutation.type === 'attributes' && mutation.attributeName === 'reverse-heading') {\r\n          shouldUpdate = true;\r\n          break;\r\n        } else if (mutation.type === 'childList') {\r\n          // Check if any added nodes are collapsible items or lists\r\n          for (const node of mutation.addedNodes) {\r\n            if (node.nodeType === Node.ELEMENT_NODE && \r\n                (node.matches('collapsible-item') || node.matches('collapsible-list'))) {\r\n              shouldUpdate = true;\r\n              break;\r\n            }\r\n          }\r\n          if (shouldUpdate) break;\r\n        }\r\n      }\r\n      \r\n      if (shouldUpdate) {\r\n        await this._updateReverseHeading();\r\n      }\r\n    });\r\n    \r\n    // Start observing the component for attribute changes and child list changes\r\n    this._observer.observe(this, {\r\n      attributes: true,\r\n      attributeFilter: ['reverse-heading'],\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Updates the reverse heading state for all child collapsible items\r\n   * @private\r\n   */\r\n  async _updateReverseHeading() {\r\n    // Prevent reentrant calls\r\n    if (this._isUpdating) return;\r\n    this._isUpdating = true;\r\n    \r\n    try {\r\n      const isReversed = this.hasAttribute('reverse-heading') && \r\n                       this.getAttribute('reverse-heading') !== 'false';\r\n      \r\n      // Temporarily disconnect observer to prevent infinite loop\r\n      if (this._observer) {\r\n        this._observer.disconnect();\r\n      }\r\n      \r\n      // Process direct child collapsible-items\r\n      const processItems = async (items) => {\r\n        for (const item of items) {\r\n          // Set the attribute on the item\r\n          if (isReversed) {\r\n            item.setAttribute('reverse-heading', '');\r\n          } else {\r\n            item.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any nested items in this item (only direct children)\r\n          const nestedItems = item.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any nested lists in this item (only direct children)\r\n          const nestedLists = item.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Process nested collapsible-lists\r\n      const processLists = async (lists) => {\r\n        for (const list of lists) {\r\n          // Skip if this is the current list to prevent cycles\r\n          if (list === this) continue;\r\n          \r\n          // Set the attribute on the list\r\n          if (isReversed) {\r\n            list.setAttribute('reverse-heading', '');\r\n          } else {\r\n            list.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any direct child items in this list\r\n          const nestedItems = list.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any direct child lists\r\n          const nestedLists = list.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Start processing from the current element\r\n      const items = this.querySelectorAll(':scope > collapsible-item');\r\n      if (items.length > 0) {\r\n        await processItems(Array.from(items));\r\n      }\r\n      \r\n      const lists = this.querySelectorAll(':scope > collapsible-list');\r\n      if (lists.length > 0) {\r\n        await processLists(Array.from(lists));\r\n      }\r\n      \r\n      // Force a reflow to ensure all attribute changes are applied\r\n      if (this.shadowRoot) {\r\n        this.shadowRoot.offsetHeight; // This forces a reflow\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating reverse heading:', error);\r\n    } finally {\r\n      // Reconnect observer if it exists\r\n      if (this._observer) {\r\n        this._observer.observe(this, {\r\n          attributes: true,\r\n          attributeFilter: ['reverse-heading'],\r\n          childList: true,\r\n          subtree: true\r\n        });\r\n      }\r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n\r\n  _handleItemToggle(e) {\r\n    if (this._isUpdating) return;\r\n    \r\n    const target = e.target;\r\n    \r\n    // Only process if this is a direct child\r\n    if (target.parentElement === this) {\r\n      this._isUpdating = true;\r\n      \r\n      if (this.hasAttribute('accordion')) {\r\n        // In accordion mode, close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      } else if (this.hasAttribute('single-item')) {\r\n        // In single-item mode, just close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      }\r\n      \r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n  \r\n  _closeOtherItems(exceptItem) {\r\n    // Don't close items if inside an image-collection\r\n    if (this.closest('image-collection')) {\r\n      return;\r\n    }\r\n    \r\n    const items = this.querySelectorAll('collapsible-item');\r\n    items.forEach(item => {\r\n      if (item !== exceptItem) {\r\n        item.expanded = false;\r\n      }\r\n    });\r\n  }\r\n  \r\n  _getOpenItems() {\r\n    return Array.from(this.querySelectorAll('collapsible-item[expanded]'));\r\n  }\r\n  \r\n  _ensureOneItemExpanded() {\r\n    if (!this.hasAttribute('accordion')) return;\r\n    \r\n    const openItems = this._getOpenItems();\r\n    if (openItems.length === 0) {\r\n      // If no items are open, open the first one\r\n      const firstItem = this.querySelector('collapsible-item');\r\n      if (firstItem) {\r\n        firstItem.setAttribute('expanded', '');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Define the custom element\r\nif (!customElements.get('collapsible-list')) {\r\n  customElements.define('collapsible-list', CollapsibleList);\r\n}\r\n","/**\n * IconLabel Component\n * A simple component that displays an icon next to a label\n */\n\nexport class IconLabel extends HTMLElement {\n  static get observedAttributes() {\n    return ['icon', 'label', 'reverse'];\n  }\n\n  constructor() {\n    super();\n    this._icon = '';\n    this._label = '';\n    this._reverse = false;\n  }\n\n  connectedCallback() {\n    this._render();\n  }\n\n  get icon() {\n    return this._icon;\n  }\n\n  set icon(value) {\n    this._icon = value || '';\n    this._render();\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  set label(value) {\n    this._label = value || '';\n    this._render();\n  }\n\n  get reverse() {\n    return this._reverse;\n  }\n\n  set reverse(value) {\n    this._reverse = value !== null && value !== 'false';\n    this._render();\n  }\n\n  _render() {\n    // Create container\n    const container = document.createElement('span');\n    container.style.display = 'inline-flex';\n    container.style.alignItems = 'center';\n    container.style.gap = '0.5rem';\n    container.style.fontFamily = 'inherit';\n    container.style.color = 'currentColor';\n    \n    if (this._reverse) {\n      container.style.flexDirection = 'row-reverse';\n    }\n\n    // Create icon element if icon is provided\n    if (this._icon) {\n      const isImage = this._icon.startsWith('data:') || \n                     this._icon.startsWith('http') || \n                     this._icon.startsWith('/') ||\n                     /\\.(png|jpg|jpeg|svg|gif|webp)(\\?.*)?$/i.test(this._icon);\n      \n      const icon = isImage ? document.createElement('img') : document.createElement('span');\n      icon.style.display = 'inline-flex';\n      icon.style.alignItems = 'center';\n      icon.style.justifyContent = 'center';\n      icon.style.width = '1em';\n      icon.style.height = '1em';\n\n      if (isImage) {\n        icon.src = this._icon;\n        icon.alt = '';\n        icon.loading = 'lazy';\n        icon.style.objectFit = 'contain';\n      } else {\n        icon.textContent = this._icon;\n        icon.style.fontSize = '1em';\n        icon.style.lineHeight = '1';\n      }\n      \n      container.appendChild(icon);\n    }\n\n    // Add label if provided\n    if (this._label) {\n      const label = document.createElement('span');\n      label.textContent = this._label;\n      container.appendChild(label);\n    }\n\n    // Update the component\n    this.innerHTML = '';\n    this.appendChild(container);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    \n    if (name === 'icon') {\n      this._icon = newValue || '';\n    } else if (name === 'label') {\n      this._label = newValue || '';\n    } else if (name === 'reverse') {\n      this._reverse = newValue !== null && newValue !== 'false';\n    }\n    \n    this._render();\n  }\n}\n\n// Define the custom element\nif (!customElements.get('icon-label')) {\n  customElements.define('icon-label', IconLabel);\n}\n","/**\n * CollapsibleItem Component\n * A custom element that creates a collapsible list item\n * \n * @attr {boolean} expanded - Whether the item is expanded or collapsed\n * @attr {string} icon - Optional icon to display next to the label\n * @attr {string} label - The text label for the collapsible item\n * @attr {boolean} removeshift - If true, removes the left padding from the content area\n */\n\nimport { IconLabel } from '../../atoms/icon-label/IconLabel.js';\n\n// Import regular CSS\nimport './CollapsibleItem.css';\n\nexport class CollapsibleItem extends HTMLLIElement {\n    static get observedAttributes() {\n        return ['expanded', 'icon', 'label', 'removeshift', 'hide-icon'];\n    }\n    \n    constructor() {\n        super();\n        this._isExpanded = false;\n        this._handleClick = this._handleClick.bind(this);\n        this._header = null;\n        this._content = null;\n        this._initialRender = true;\n        this._removeShift = false;\n        this.rendered = false;\n        \n        // Add base class to the host element\n        this.classList.add('collapsible-item');\n        \n        // Initialize expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        }\n        \n        // Initialize no-padding state\n        if (this.hasAttribute('removeshift')) {\n            this.classList.add('collapsible-item--no-padding');\n        }\n    }\n\n    connectedCallback() {\n        // Ensure the component has the correct role for accessibility\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'listitem');\n        }\n        \n        // Set up the component if not already rendered\n        if (!this.rendered) {\n            this._render();\n            this.rendered = true;\n            this._addEventListeners();\n            \n            // Ensure the content visibility is set correctly based on the expanded state\n            this._updateContentVisibility();\n        }\n        \n        // Ensure the component is properly styled\n        this.classList.add('collapsible-item');\n        \n        // Set initial expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        } else {\n            this._isExpanded = false;\n            this.classList.remove('collapsible-item--expanded');\n        }\n    }\n    \n    disconnectedCallback() {\n        this._removeEventListeners();\n    }\n    \n    _addEventListeners() {\n        // Add click listener to the component itself for event delegation\n        this.addEventListener('click', this._handleClick);\n    }\n    \n    _removeEventListeners() {\n        this.removeEventListener('click', this._handleClick);\n    }\n    \n    _handleClick(event) {\n        // Find the closest header from the click target\n        const header = event.target.closest('.collapsible-item__header');\n        if (!header) return; // Not a header click\n        \n        // Prevent the default action to avoid any native behavior\n        event.preventDefault();\n        event.stopPropagation();\n        \n        // Toggle the expanded state\n        const isExpanding = !this.hasAttribute('expanded');\n        \n        // Update the expanded attribute\n        if (isExpanding) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the internal state and UI\n        this._isExpanded = isExpanding;\n        this._updateContentVisibility();\n        \n        // Dispatch a custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: isExpanding },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _createHeader() {\n        const header = document.createElement('div');\n        header.className = 'collapsible-item__header';\n        \n        // Create a container for the icon and label\n        const contentWrapper = document.createElement('div');\n        contentWrapper.style.display = 'flex';\n        contentWrapper.style.alignItems = 'center';\n        contentWrapper.style.flex = '1';\n        \n        // Add icon if provided and not hidden\n        const hideIcon = this.hasAttribute('hide-icon');\n        const icon = this.getAttribute('icon');\n        if (icon && !hideIcon) {\n            const iconEl = document.createElement('span');\n            iconEl.className = 'collapsible-item__icon';\n            iconEl.textContent = icon;\n            iconEl.style.marginRight = '0.5rem';\n            contentWrapper.appendChild(iconEl);\n        }\n        \n        // Add label\n        const label = this.getAttribute('label') || '';\n        if (label) {\n            const labelEl = document.createElement('span');\n            labelEl.className = 'collapsible-item__label';\n            labelEl.textContent = label;\n            contentWrapper.appendChild(labelEl);\n        }\n        \n        // Add the content wrapper to the header\n        header.appendChild(contentWrapper);\n                \n        return header;\n    }\n    \n    _render() {\n        // Prevent re-entrancy during rendering\n        if (!this._isRendering) {\n            this._isRendering = true;\n            \n            // Store any existing content that should be preserved\n            const existingContent = [];\n            Array.from(this.children).forEach(child => {\n                if (child !== this._header && child !== this._content) {\n                    existingContent.push(child);\n                }\n            });\n            \n            // Clear existing content\n            while (this.firstChild) {\n                this.removeChild(this.firstChild);\n            }\n            \n            // Create and append header\n            this._header = this._createHeader();\n            this.appendChild(this._header);\n            \n            // Set header attributes for accessibility\n            if (this._header) {\n                this._header.setAttribute('role', 'button');\n                this._header.setAttribute('aria-expanded', this._isExpanded ? 'true' : 'false');\n                this._header.setAttribute('tabindex', '0');\n                \n                // Add keyboard support\n                this._header.addEventListener('keydown', (e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        this._toggleExpanded();\n                    }\n                });\n            }\n            \n            // Create and append content container\n            this._content = this._createContent();\n            if (this._content) {\n                this.appendChild(this._content);\n                \n                // Add back any existing content to the content container\n                existingContent.forEach(child => {\n                    this._content.appendChild(child);\n                });\n            }\n            \n            // Ensure proper ARIA attributes for accessibility\n            this.setAttribute('role', 'listitem');\n            \n            // Set initial content visibility\n            this._updateContentVisibility();\n            \n            // Mark as rendered\n            this.rendered = true;\n            this._isRendering = false;\n        }\n    }\n    \n    _createContent() {\n        const content = document.createElement('div');\n        content.className = 'collapsible-item__content';\n        \n        // Filter out any header elements and their content\n        const headerElements = this.querySelectorAll('.collapsible-item__header, .collapsible-item__label, .collapsible-item__icon');\n        const headerElementSet = new Set(headerElements);\n        \n        // Process direct children that are not part of the header\n        const filteredChildren = Array.from(this.childNodes).filter(node => {\n            // Keep only element nodes that are not in the header\n            if (node.nodeType === Node.ELEMENT_NODE) {\n                return !headerElementSet.has(node) && !node.closest('.collapsible-item__header');\n            }\n            // Keep text nodes that are not just whitespace\n            if (node.nodeType === Node.TEXT_NODE) {\n                return node.textContent.trim() !== '' && \n                       !node.textContent.includes('▶') && \n                       !node.textContent.includes('▼');\n            }\n            return false;\n        });\n        \n        // Add the filtered children to the content\n        filteredChildren.forEach(child => {\n            content.appendChild(child.cloneNode(true));\n        });\n        \n        return content;\n    }\n    \n    get expanded() {\n        return this._isExpanded;\n    }\n    \n    set expanded(value) {\n        if (this._isExpanded === value) return; // No change needed\n        \n        this._isExpanded = value;\n        \n        // Update the attribute to reflect the state in the DOM\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the content visibility immediately\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _toggleExpanded() {\n        this._isExpanded = !this._isExpanded;\n        \n        // Update the expanded attribute\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the UI\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _updateContentVisibility() {\n        if (!this._content || !this._header) return;\n        \n        const hideIcon = this.hasAttribute('hide-icon');\n        \n        if (this._isExpanded) {\n            this._content.classList.add('collapsible-item__content--expanded');\n            this._content.style.display = 'block';\n            this._header.setAttribute('aria-expanded', 'true');\n            this.classList.add('collapsible-item--expanded');\n            // Update icon to expanded state (down arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▼');\n            }\n        } else {\n            this._content.classList.remove('collapsible-item__content--expanded');\n            this._content.style.display = 'none';\n            this._header.setAttribute('aria-expanded', 'false');\n            this.classList.remove('collapsible-item--expanded');\n            // Update icon to collapsed state (right arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▶');\n            }\n        }\n    }\n    \n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'removeshift') {\n            this._removeShift = newValue !== null;\n            if (this._removeShift) {\n                this.classList.add('collapsible-item--no-padding');\n            } else {\n                this.classList.remove('collapsible-item--no-padding');\n            }\n        } else if (name === 'hide-icon' && this._header) {\n            // Handle hide-icon attribute changes\n            const iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue !== null) {\n                // hide-icon is set, remove the icon if it exists\n                if (iconEl) {\n                    iconEl.remove();\n                }\n            } else if (this.hasAttribute('icon')) {\n                // hide-icon is removed, add the icon back if we have an icon attribute\n                if (!iconEl) {\n                    const icon = this.getAttribute('icon');\n                    const newIconEl = document.createElement('span');\n                    newIconEl.className = 'collapsible-item__icon';\n                    newIconEl.textContent = icon;\n                    newIconEl.style.marginRight = '0.5rem';\n                    const contentWrapper = this._header.firstElementChild;\n                    if (contentWrapper) {\n                        contentWrapper.insertBefore(newIconEl, contentWrapper.firstChild);\n                    }\n                }\n            }\n        } else if (name === 'expanded') {\n            const wasExpanded = this._isExpanded;\n            this._isExpanded = newValue !== null;\n            \n            // Only update if the state actually changed\n            if (this._isExpanded !== wasExpanded) {\n                this._updateContentVisibility();\n            }\n        } else if (name === 'icon' && this._header) {\n            // Update the icon if it exists, or create it if it doesn't\n            let iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue) {\n                if (!iconEl) {\n                    iconEl = document.createElement('span');\n                    iconEl.className = 'collapsible-item__icon';\n                    this._header.insertBefore(iconEl, this._header.firstChild);\n                }\n                iconEl.textContent = newValue;\n            } else if (iconEl) {\n                this._header.removeChild(iconEl);\n            }\n        } else if (name === 'label' && this._header) {\n            // Update the label if it exists, or create it if it doesn't\n            let labelEl = this._header.querySelector('.collapsible-item__label');\n            if (labelEl) {\n                labelEl.textContent = newValue || '';\n            } else if (newValue) {\n                labelEl = document.createElement('span');\n                labelEl.className = 'collapsible-item__label';\n                labelEl.textContent = newValue;\n                this._header.appendChild(labelEl);\n            }\n        }\n    }\n}\n\n// Define the custom element with the correct name\nconst elementName = 'collapsible-item';\n\n// Check if the element is already defined and undefine it if necessary\nif (typeof window !== 'undefined' && window.customElements) {\n    // First, try to undefine the element if it exists\n    if (window.customElements.get(elementName)) {\n        const oldElement = window.customElements.get(elementName);\n        delete window.customElements._elements[elementName];\n    }\n    \n    // Define the element with the proper configuration\n    window.customElements.define(elementName, CollapsibleItem, { extends: 'li' });\n}","/**\n * SelectionMenu Component\n * A collapsible menu that allows selection of leaf nodes using CollapsibleItem\n * \n * @fires item-selected - Dispatched when a leaf node is selected\n * @property {string} items - JSON string representing the menu items structure\n * @property {string} selected - ID of the currently selected item\n */\n\nexport class SelectionMenu extends HTMLElement {\n  static get observedAttributes() {\n    return ['items', 'selected'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._items = [];\n    this._selectedId = null;\n    this._boundOnItemClick = this._onItemClick.bind(this);\n    \n    // Import the CollapsibleItem component\n    import('../../molecules/collapsible-item/CollapsibleItem.js');\n  }\n\n  connectedCallback() {\n    this._render();\n  }\n\n  disconnectedCallback() {\n    this._removeEventListeners();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'items':\n        this._items = newValue ? JSON.parse(newValue) : [];\n        this._render();\n        break;\n      case 'selected':\n        this._selectedId = newValue;\n        this._updateSelectedState();\n        break;\n    }\n  }\n\n  get items() {\n    return JSON.stringify(this._items);\n  }\n\n  set items(value) {\n    this._items = value ? JSON.parse(value) : [];\n    this._render();\n  }\n\n  get selected() {\n    return this._selectedId;\n  }\n\n  set selected(value) {\n    if (this._selectedId !== value) {\n      this._selectedId = value;\n      this._updateSelectedState();\n    }\n  }\n\n  _render() {\n    if (!this.shadowRoot) return;\n    \n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          --primary-color: #4a6cf7;\n          --hover-bg: #f5f8ff;\n          --selected-bg: #e6f0ff;\n          --border-color: #e2e8f0;\n          --text-color: #2d3748;\n          --text-secondary: #4a5568;\n        }\n        \n        .menu-container {\n          border: 1px solid var(--border-color);\n          border-radius: 6px;\n          overflow: hidden;\n        }\n        \n        .menu-item {\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          margin: 2px 0;\n          border-radius: 4px;\n        }\n        \n        .menu-item:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        .menu-item--selected:hover {\n          background-color: var(--selected-bg, #e6f0ff);\n        }\n        \n        /* Style for the collapsible item header */\n        .menu-item::part(header) {\n          padding: 8px 12px;\n          display: flex;\n          align-items: center;\n        }\n        \n        /* Style for the collapsible item content */\n        .menu-item::part(content) {\n          padding: 0;\n          overflow: hidden;\n          transition: max-height 0.3s ease, opacity 0.2s ease;\n          max-height: 0;\n          opacity: 0;\n          margin: 0;\n        }\n        \n        .menu-item::part(content).menu-item__content--expanded {\n          max-height: 1000px; /* Adjust based on your needs */\n          opacity: 1;\n          padding: 4px 0 4px 1rem;\n        }\n        \n        .menu-item__child-list {\n          list-style: none;\n          padding: 0;\n          margin: 0 0 0 1rem;\n        }\n        \n        /* Remove bullets from ul elements */\n        ul {\n          list-style-type: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Ensure list items have no default styling */\n        li {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Leaf item styles */\n        .menu-item__leaf {\n          display: flex;\n          align-items: center;\n          padding: 4px 12px;\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          border-radius: 4px;\n        }\n        \n        .menu-item__leaf:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item__leaf.menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        /* Arrow icon for collapsible items */\n        .menu-item__arrow {\n          display: inline-block;\n          width: 12px;\n          text-align: center;\n          transition: transform 0.2s ease;\n        }\n        \n        .menu-item[expanded] .menu-item__arrow {\n          transform: rotate(90deg);\n        }\n      </style>\n      <div class=\"menu-container\">\n        ${this._renderItems(this._items, 0)}\n      </div>\n    `;\n    \n    this._addEventListeners();\n  }\n  \n  _renderItems(items, level = 0) {\n    if (!items || !items.length) return '';\n    \n    // Create a container for the list\n    const listContainer = document.createElement('ul');\n    listContainer.style.listStyle = 'none';\n    listContainer.style.padding = '0';\n    listContainer.style.margin = '0';\n    \n    items.forEach(item => {\n      const hasChildren = item.children && item.children.length > 0;\n      const isSelected = this._selectedId === item.id;\n      \n      // Create list item\n      const li = document.createElement('li');\n      li.setAttribute('data-id', item.id);\n      \n      if (hasChildren) {\n        // For items with children, use collapsible-item\n        li.setAttribute('is', 'collapsible-item');\n        li.setAttribute('data-id', item.id);\n        li.setAttribute('label', item.name);\n        \n        // Determine initial state\n        const hasSelectedDescendant = this._hasSelectedDescendant(item);\n        const isExpanded = hasSelectedDescendant || isSelected;\n        \n        // Set initial expanded state\n        if (isExpanded) {\n          li.setAttribute('expanded', '');\n        }\n        \n        // Set the arrow icon using the icon attribute\n        li.setAttribute('icon', isExpanded ? '▼' : '▶');\n        li.style.marginRight = '8px';\n        li.style.transition = 'transform 0.2s ease';\n        \n        if (isSelected) {\n          li.classList.add('menu-item--selected');\n        }\n        \n        // Create and append child list\n        const childList = document.createElement('ul');\n        childList.className = 'menu-item__child-list';\n        childList.innerHTML = this._renderItems(item.children, level + 1);\n        \n        // Create content container with proper styling\n        const contentSlot = document.createElement('div');\n        contentSlot.slot = 'content';\n        contentSlot.className = 'menu-item__content';\n        \n        // Add the child list to the content slot\n        contentSlot.appendChild(childList);\n        \n        // Add the content slot to the collapsible item\n        li.appendChild(contentSlot);\n        \n        // Handle the toggle event to update the content visibility\n        li.addEventListener('toggle', (e) => {\n          contentSlot.style.display = e.detail.expanded ? 'block' : 'none';\n        });\n      } else {\n        // For leaf nodes, just use a span\n        const span = document.createElement('span');\n        span.className = 'menu-item__leaf';\n        if (isSelected) span.classList.add('menu-item--selected');\n        \n      \n        \n        // Add label\n        const label = document.createElement('span');\n        label.className = 'menu-item__label';\n        label.textContent = item.name;\n        span.appendChild(label);\n        \n        // Add click handler for selection\n        span.addEventListener('click', (e) => {\n          e.stopPropagation();\n          this._selectedId = item.id;\n          this._updateSelectedState();\n          this.dispatchEvent(new CustomEvent('item-selected', {\n            detail: {\n              id: item.id,\n              item: item,\n              name: item.name\n            },\n            bubbles: true,\n            composed: true\n          }));\n        });\n        \n        li.appendChild(span);\n      }\n      \n      listContainer.appendChild(li);\n    });\n    \n    return level === 0 ? listContainer.outerHTML : listContainer.innerHTML;\n  }\n  \n  _addEventListeners() {\n    this.shadowRoot.addEventListener('click', this._boundOnItemClick);\n  }\n  \n  _removeEventListeners() {\n    this.shadowRoot.removeEventListener('click', this._boundOnItemClick);\n  }\n  \n  _onItemClick(event) {\n    // Handle leaf node clicks\n    const leafNode = event.target.closest('.menu-item__leaf');\n    if (leafNode) {\n      event.stopPropagation();\n      const itemId = leafNode.getAttribute('data-id');\n      if (itemId) {\n        this.selected = itemId;\n        this._updateSelectedState();\n        this.dispatchEvent(new CustomEvent('item-selected', {\n          detail: { id: itemId },\n          bubbles: true,\n          composed: true\n        }));\n      }\n      return;\n    }\n    \n    // Handle collapsible item clicks\n    const header = event.target.closest('.collapsible-item__header');\n    if (!header) return;\n    \n    const itemElement = header.parentElement;\n    if (itemElement && itemElement.getAttribute('is') === 'collapsible-item') {\n      event.stopPropagation();\n      \n      // Toggle the expanded state\n      const isExpanded = itemElement.hasAttribute('expanded');\n      const arrowIcon = itemElement.querySelector('.menu-item__arrow');\n      \n      if (isExpanded) {\n        itemElement.removeAttribute('expanded');\n        if (arrowIcon) arrowIcon.textContent = '▶';\n      } else {\n        itemElement.setAttribute('expanded', '');\n        if (arrowIcon) arrowIcon.textContent = '▼';\n      }\n      \n      // Dispatch a custom event for the toggle action\n      itemElement.dispatchEvent(new CustomEvent('toggle', {\n        detail: { expanded: !isExpanded },\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n  \n  _updateSelectedState() {\n    if (!this.shadowRoot) return;\n    \n    // Remove selected class from all items\n    const allCollapsibleItems = this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]');\n    const allLeafItems = this.shadowRoot.querySelectorAll('.menu-item__leaf');\n    \n    allCollapsibleItems.forEach(item => {\n      item.classList.remove('menu-item--selected');\n      item.removeAttribute('selected');\n    });\n    \n    allLeafItems.forEach(leaf => {\n      leaf.classList.remove('menu-item--selected');\n    });\n    \n    // Add selected class to the selected item\n    if (this._selectedId) {\n      \n      // Check collapsible items\n      const selectedCollapsibleItem = this.shadowRoot.querySelector(`li[is=\"collapsible-item\"][data-id=\"${this._selectedId}\"]`);\n      if (selectedCollapsibleItem) {\n        selectedCollapsibleItem.classList.add('menu-item--selected');\n        selectedCollapsibleItem.setAttribute('selected', '');\n      }\n      \n      // Check leaf items\n      const selectedLeafItem = this.shadowRoot.querySelector(`li[data-id=\"${this._selectedId}\"] .menu-item__leaf`);\n      if (selectedLeafItem) {\n        selectedLeafItem.classList.add('menu-item--selected');\n      }\n      \n      // If we didn't find the item, it might be because it's in a closed collapsible item\n      if (!selectedCollapsibleItem && !selectedLeafItem) {\n        console.warn('Could not find selected item in the DOM. It might be in a closed collapsible section.');\n      }\n    }\n  }\n  \n  _hasSelectedDescendant(item) {\n    if (!item) return false;\n    \n    // Check if this item is selected\n    if (item.id === this._selectedId) return true;\n    \n    // Check if any child is selected\n    if (item.children) {\n      return item.children.some(child => this._hasSelectedDescendant(child));\n    }\n    \n    return false;\n  }\n  \n  _findItemById(items, id) {\n    if (!items || !items.length) return null;\n    \n    for (const item of items) {\n      if (item.id === id) return item;\n      if (item.children) {\n        const found = this._findItemById(item.children, id);\n        if (found) return found;\n      }\n    }\n    return null;\n  }\n}\n\n// Define the custom element\nif (!customElements.get('selection-menu')) {\n  customElements.define('selection-menu', SelectionMenu);\n}","import { CollapsibleItem } from '../../molecules/collapsible-item/CollapsibleItem.js';\n\nexport class ImageCollection extends HTMLElement {\n    static get observedAttributes() {\n        return ['images'];\n    }\n\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this._images = [];\n        this._handleToggle = this._handleToggle.bind(this);\n        this._currentOpenIndex = 0;\n    }\n\n    get images() {\n        return this._images;\n    }\n\n    set images(value) {\n        if (Array.isArray(value)) {\n            this._images = value;\n            this.render();\n        } else if (typeof value === 'string') {\n            try {\n                this._images = JSON.parse(value);\n                this.render();\n            } catch (e) {\n            }\n        }\n    }\n\n    connectedCallback() {\n        this.render();\n        this.shadowRoot.addEventListener('toggle', this._handleToggle);\n    }\n\n    disconnectedCallback() {\n        this.shadowRoot.removeEventListener('toggle', this._handleToggle);\n    }\n\n    _handleToggle(event) {\n        // Prevent event from bubbling up\n        event.stopPropagation();\n        \n        // Prevent reentrant calls\n        if (this._isHandlingToggle) return;\n        this._isHandlingToggle = true;\n        \n        let index = -1;\n        let wasExpanded = false;\n        \n        try {\n            \n            // Find the clicked collapsible item by traversing up the composed path\n            const target = event.composedPath().find(\n                node => node.nodeType === Node.ELEMENT_NODE && \n                       node.getAttribute && \n                       node.getAttribute('is') === 'collapsible-item'\n            );\n            \n            if (!target) {\n                return;\n            }\n\n            // Get all collapsible items\n            const allItems = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n            index = allItems.indexOf(target);\n            \n            if (index === -1) {\n                return;\n            }\n            \n            // Prevent toggling if this item is already open\n            if (index === this._currentOpenIndex) {\n                return;\n            }\n            \n            wasExpanded = target.expanded;\n            \n            // Update all items\n            \n            // First, close all items except the target\n            allItems.forEach((item, i) => {\n                if (i !== index && item.expanded) {\n                    item.expanded = false;\n                }\n            });\n            \n            // Then toggle the target item if needed\n            if (index === this._currentOpenIndex) {\n                // Clicked the currently open item - close it\n                target.expanded = false;\n                this._currentOpenIndex = -1;\n            } else {\n                // Open the clicked item\n                target.expanded = true;\n                this._currentOpenIndex = index;\n            }\n        } finally {\n            // Always clear the flag, even if an error occurred\n            this._isHandlingToggle = false;\n        }\n        \n        // Dispatch our custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { \n                index,\n                expanded: !wasExpanded,\n                source: 'image-collection'\n            },\n            bubbles: true,\n            composed: true\n        }));\n    }\n\n    \n    _onItemToggle(event) {\n        // Stop propagation to prevent double-handling\n        event.stopPropagation();\n        \n        const targetItem = event.target.closest('li[is=\"collapsible-item\"]');\n        if (!targetItem) return;\n\n        const items = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n        const index = items.indexOf(targetItem);\n        \n        if (index === -1) return;\n\n        // If the clicked item is being closed, just update our state\n        if (!event.detail.expanded) {\n            if (this._currentOpenIndex === index) {\n                this._currentOpenIndex = -1;\n            }\n            return;\n        }\n\n        // Close the previously open item if it's different from the clicked one\n        if (this._currentOpenIndex !== -1 && this._currentOpenIndex !== index) {\n            const previousItem = items[this._currentOpenIndex];\n            if (previousItem) {\n                previousItem.toggle(false);\n            }\n        }\n        \n        this._currentOpenIndex = index;\n    }\n\n    render() {\n        if (!this.shadowRoot) return;\n        \n        // Only expand the first item if no item is currently expanded\n        if (this._currentOpenIndex === -1 && this._images.length > 0) {\n            this._currentOpenIndex = 0;\n        }\n        \n        this.shadowRoot.innerHTML = `\n            <style>\n                .image-collection {\n                    width: 100%;\n                    max-width: 800px;\n                    margin: 0 auto;\n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n                }\n                \n                .image-collection__container {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 0;\n                    width: 100%;\n                    list-style: none;\n                    padding: 0;\n                }\n                \n                .image-collection__item {\n                    width: 100%;\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection__image {\n                    width: 100%;\n                    height: auto;\n                    display: block;\n                }\n                \n                .image-collection__title {\n                    font-weight: 600;\n                    padding: 0.8rem 1rem;\n                    background-color: #f8fafc;\n                    width: 100%;\n                    cursor: pointer;\n                    transition: background-color 0.2s;\n                }\n                \n                .image-collection__title:hover {\n                    background-color: #f1f5f9;\n                }\n                \n                .image-collection .collapsible-item__header {\n                    padding: 0.5rem 1rem;\n                    background: none;\n                    border: none;\n                    width: 100%;\n                    text-align: left;\n                    cursor: pointer;\n                }\n                \n                .image-collection .collapsible-item__content {\n                    margin: 0;\n                    transition: all 0.3s ease;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"] {\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"]:last-child {\n                    margin-bottom: 0;\n                }\n            </style>\n            <div class=\"image-collection\">\n                <ul class=\"image-collection__container\">\n                    ${this._images.map((image, index) => `\n                        <li is=\"collapsible-item\" \n                            label=\"${image.title}\" \n                            ${image.removeshift ? 'removeshift=\"true\"' : ''}\n                            ${this._currentOpenIndex === index ? 'expanded' : ''}\n                            hide-icon\n                            >\n                            <div slot=\"content\">\n                                <img \n                                    class=\"image-collection__image\" \n                                    src=\"${image.src}\" \n                                    alt=\"${image.title}\"\n                                    loading=\"lazy\"\n                                >\n                            </div>\n                        </li>\n                    `).join('')}\n                </ul>\n            </div>\n        `;\n    }\n}\n\nif (!customElements.get('image-collection')) {\n    customElements.define('image-collection', ImageCollection);\n}","/**\n * ProductLayout\n * A layout component that displays an image collection, title, and content\n */\nimport { ImageCollection } from '../../organisms/image-collection/ImageCollection.js';\n\n// Import sample images\nconst defaultImages = [\n  {\n    title: 'Nature',\n    src: 'images/samples/nature.jpg',\n    alt: 'Scenic nature landscape',\n    description: 'A beautiful landscape showcasing nature\\'s beauty.'\n  },\n  {\n    title: 'Architecture',\n    src: 'images/samples/architecture.jpg',\n    alt: 'Modern architecture building',\n    description: 'Stunning modern architecture design.'\n  },\n  {\n    title: 'Technology',\n    src: 'images/samples/technology.jpg',\n    alt: 'Technology circuit board',\n    description: 'Close-up of an advanced circuit board.'\n  }\n];\n\nexport class ProductLayout extends HTMLElement {\n  static get observedAttributes() {\n    return ['title', 'images'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._title = 'Product Name';\n    this._images = [];\n    this._isConnected = false;\n    this._hasRendered = false;\n    this._isUpdating = false;\n    this._elements = null;\n    this._render = this._render.bind(this);\n  }\n\n  connectedCallback() {\n    this._isConnected = true;\n    this._render();\n  }\n\n  disconnectedCallback() {\n    this._isConnected = false;\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    \n    if (name === 'title') {\n      this._title = newValue || 'Product Name';\n      this._updateTitle();\n    } else if (name === 'images') {\n      if (typeof newValue === 'string') {\n        try {\n          const parsed = JSON.parse(newValue);\n          this.images = Array.isArray(parsed) ? parsed : [];\n        } catch (e) {\n          console.error('Invalid images JSON:', e);\n          this.images = [];\n        }\n      } else if (Array.isArray(newValue)) {\n        this.images = newValue;\n      } else {\n        this.images = [];\n      }\n    }\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  set title(value) {\n    if (this._title === value) return;\n    this._title = value || '';\n    this._updateTitle();\n  }\n\n  get images() {\n    return this._images;\n  }\n\n  set images(value) {\n    if (Array.isArray(value)) {\n      this._images = value.length > 0 ? value : [...defaultImages];\n    } else if (typeof value === 'string') {\n      try {\n        const parsed = JSON.parse(value);\n        this._images = Array.isArray(parsed) ? parsed : [...defaultImages];\n      } catch (e) {\n        console.error('Invalid images JSON:', e);\n        this._images = [...defaultImages];\n      }\n    } else {\n      this._images = [...defaultImages];\n    }\n    this._updateImages();\n  }\n\n  _updateTitle() {\n    if (!this._elements?.title) return;\n    this._elements.title.textContent = this._title;\n  }\n\n  _updateImages() {\n    if (!this._elements?.imageCollection) return;\n    // Ensure we're passing a fresh copy of the array to trigger the setter\n    this._elements.imageCollection.images = [...this._images];\n    \n    // Ensure the ImageCollection is visible\n    if (this._elements.imageCollectionContainer) {\n      this._elements.imageCollectionContainer.style.display = 'block';\n    }\n  }\n\n  _render() {\n    if (this._isUpdating || !this.shadowRoot) return;\n    this._isUpdating = true;\n\n    try {\n      if (!this._hasRendered) {\n        this.shadowRoot.innerHTML = `\n          <style>\n            :host {\n              display: block;\n              max-width: 1200px;\n              margin: 0 auto;\n              padding: 2rem;\n              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n            }\n            \n            .product-layout {\n              display: grid;\n              grid-template-columns: 1fr;\n              gap: 2rem;\n            }\n            \n            .product-header {\n              text-align: center;\n              margin-bottom: 2rem;\n            }\n            \n            .product-title {\n              font-size: 2.5rem;\n              color: #2d3748;\n              margin: 0 0 1rem;\n            }\n            \n            .content {\n              line-height: 1.6;\n              color: #4a5568;\n            }\n            \n            .image-collection-container {\n              margin: 2rem 0;\n            }\n            \n            /* Remove padding from collapsible items */\n            image-collection::part(content) {\n              padding: 0;\n            }\n            \n            @media (min-width: 1024px) {\n              .product-layout {\n                grid-template-columns: 1fr 1fr;\n                align-items: start;\n              }\n            }\n          </style>\n          <div class=\"product-layout\">\n            <div class=\"product-content\">\n              <div class=\"product-header\">\n                <h1 class=\"product-title\" id=\"title\"></h1>\n              </div>\n              <div class=\"content\" id=\"content\">\n                <slot></slot>\n              </div>\n            </div>\n            <div class=\"image-collection-container\" id=\"imageCollectionContainer\" style=\"display: none;\">\n              <image-collection id=\"imageCollection\"></image-collection>\n            </div>\n          </div>\n        `;\n\n        this._elements = {\n          title: this.shadowRoot.getElementById('title'),\n          content: this.shadowRoot.getElementById('content'),\n          imageCollection: this.shadowRoot.getElementById('imageCollection'),\n          imageCollectionContainer: this.shadowRoot.getElementById('imageCollectionContainer')\n        };\n        \n        // Initialize with default images if none provided\n        if (this._images.length === 0) {\n          this._images = [...defaultImages];\n        }\n\n        this._hasRendered = true;\n      }\n\n      this._updateTitle();\n      this._updateImages();\n    } finally {\n      this._isUpdating = false;\n    }\n  }\n}\n\n// Auto-register the component when loaded directly\nif (typeof window !== 'undefined' && !customElements.get('product-layout')) {\n  customElements.define('product-layout', ProductLayout);\n}\n","// Import components\nimport { CollapsibleItem } from './components/molecules/collapsible-item/CollapsibleItem.js';\nimport { CollapsibleList } from './components/molecules/collapsible-list/CollapsibleList.js';\nimport { IconLabel } from './components/atoms/icon-label/IconLabel.js';\nimport { SelectionMenu } from './components/organisms/selection-menu/SelectionMenu.js';\nimport { ImageCollection } from './components/organisms/image-collection/ImageCollection.js';\n\n// Track if elements have been defined\nlet elementsDefined = false;\n\n// Initialize web components\nexport function defineCustomElements() {\n  // Return early if elements are already defined\n  if (elementsDefined || window.__GENERIC_WEBCOMPONENTS_DEFINED__) {\n    return Promise.resolve();\n  }\n\n  // Mark as defined\n  elementsDefined = true;\n  window.__GENERIC_WEBCOMPONENTS_DEFINED__ = true;\n\n  // Define all custom elements with their actual implementations\n  if (!customElements.get('collapsible-list')) {\n    customElements.define('collapsible-list', CollapsibleList);\n  }\n  if (!customElements.get('collapsible-item')) {\n    customElements.define('collapsible-item', CollapsibleItem, { extends: 'li' });\n  }\n  if (!customElements.get('icon-label')) {\n    customElements.define('icon-label', IconLabel);\n  }\n  if (!customElements.get('selection-menu')) {\n    customElements.define('selection-menu', SelectionMenu);\n  }\n  if (!customElements.get('image-collection')) {\n    customElements.define('image-collection', ImageCollection);\n  }\n  if (!customElements.get('product-layout')) {\n    customElements.define('product-layout', class extends HTMLElement {\n      constructor() {\n        super();\n        // Implementation will be added based on actual component logic\n      }\n    });\n  }\n\n  // Wait for all elements to be defined\n  return Promise.all([\n    customElements.whenDefined('collapsible-list'),\n    customElements.whenDefined('collapsible-item'),\n    customElements.whenDefined('icon-label'),\n    customElements.whenDefined('selection-menu'),\n    customElements.whenDefined('image-collection'),\n    customElements.whenDefined('product-layout')\n  ]);\n}\n\n// Auto-define components if in a browser environment\nif (typeof window !== 'undefined' && !window.__GENERIC_WEBCOMPONENTS_DEFINED__) {\n  window.__GENERIC_WEBCOMPONENTS_DEFINED__ = true;\n  defineCustomElements().catch(console.error);\n}\n","/// src/wrappers/react/index.jsx\nimport React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport { defineCustomElements } from '../../init.js';\n\n// Initialize web components when the module is loaded\ndefineCustomElements().catch(console.error);\n\n// Handle icon path resolution for React\nconst resolveIconPath = (icon) => {\n  if (!icon) return '';\n  // If it's a full URL or data URI, use as is\n  if (icon.startsWith('http') || icon.startsWith('data:') || icon.startsWith('blob:')) {\n    return icon;\n  }\n  // For local paths, assume they're relative to the public folder in the consuming app\n  return icon;\n};\n\n// Create React wrappers for each web component\nconst createReactWrapper = (tagName) => {\n  const Component = forwardRef(({ \n    children, \n    style, \n    className, \n    onToggle, // Special handler for collapsible-item\n    ...props \n  }, ref) => {\n    const elementRef = useRef(null);\n    \n    // Handle ref forwarding\n    useImperativeHandle(ref, () => ({\n      ...(elementRef.current || {}),\n      // Add any component-specific methods here\n    }));\n\n    // Handle custom element ref\n    const handleRef = (el) => {\n      elementRef.current = el;\n      \n      // Forward the ref\n      if (ref) {\n        if (typeof ref === 'function') {\n          ref(el);\n        } else if (ref) {\n          ref.current = el;\n        }\n      }\n      \n      // Add event listeners for collapsible-item\n      if (tagName === 'collapsible-item' && el) {\n        el.addEventListener('toggle', (e) => {\n          if (onToggle) onToggle(e);\n        });\n      }\n    };\n    \n    // Special handling for specific components\n    if (tagName === 'icon-label') {\n      return React.createElement(tagName, {\n        ref: handleRef,\n        ...props,\n        class: className,\n        style: {\n          '--icon-size': '24px', // Default size, can be overridden by style prop\n          ...(style || {})\n        },\n        'icon': props.icon ? resolveIconPath(props.icon) : undefined,\n        'label': props.label || ''\n      }, children);\n    }\n    \n    // Special handling for collapsible-item\n    if (tagName === 'collapsible-item') {\n      const { expanded, icon, label, removeshift, hideIcon, ...restProps } = props;\n      \n      // Create the header content\n      const headerContent = React.createElement('div', {\n        className: 'collapsible-item__header',\n        slot: 'header',\n        onClick: (e) => {\n          // Prevent event from bubbling up to the parent\n          e.stopPropagation();\n          if (onToggle) onToggle({ detail: { expanded: !expanded } });\n        }\n      }, [\n        icon && !hideIcon && React.createElement('icon-label', {\n          key: 'icon',\n          icon: resolveIconPath(icon),\n          className: 'collapsible-item__icon',\n          slot: 'icon'\n        }),\n        label && React.createElement('span', { \n          key: 'label',\n          className: 'collapsible-item__label',\n          slot: 'label' \n        }, label)\n      ].filter(Boolean));\n      \n      // Create the content wrapper\n      const content = React.createElement('div', {\n        className: 'collapsible-item__content',\n        slot: 'content'\n      }, children);\n      \n      return React.createElement(tagName, {\n        ref: handleRef,\n        ...restProps,\n        class: className,\n        style: style,\n        'expanded': expanded,\n        'icon': icon,\n        'label': label,\n        'removeshift': removeshift,\n        'hide-icon': hideIcon\n      }, [headerContent, content]);\n    }\n    \n    // For other components\n    const elementProps = Object.entries(props).reduce((acc, [key, value]) => {\n      // Handle events (onEvent -> onevent)\n      if (key.startsWith('on') && key[2] === key[2].toUpperCase()) {\n        const eventName = key[2].toLowerCase() + key.slice(3);\n        return { ...acc, [eventName]: value };\n      }\n      // Handle className -> class\n      if (key === 'className') {\n        return { ...acc, class: value };\n      }\n      // Handle style object\n      if (key === 'style' && typeof value === 'object') {\n        return { ...acc, style: value };\n      }\n      // Special handling for icon prop\n      if (key === 'icon') {\n        return { ...acc, icon: resolveIconPath(value) };\n      }\n      // Pass through other props\n      return { ...acc, [key]: value };\n    }, {});\n    \n    // Handle ref and props\n    const elementPropsWithRef = {\n      ...elementProps,\n      ref: (element) => {\n        if (element) {\n          elementRef.current = element;\n          \n          // Forward the ref if it's a function\n          if (typeof ref === 'function') {\n            ref(element);\n          } else if (ref) {\n            ref.current = element;\n          }\n        }\n      }\n    };\n    \n    return React.createElement(tagName, elementPropsWithRef, children);\n  });\n  \n  // Set display name for better debugging\n  Component.displayName = tagName;\n  \n  return Component;\n};\n\n// Export all components as named exports\nconst CollapsibleList = createReactWrapper('collapsible-list');\nconst CollapsibleItem = createReactWrapper('collapsible-item');\nconst IconLabel = createReactWrapper('icon-label');\nconst SelectionMenu = createReactWrapper('selection-menu');\nconst ImageCollection = createReactWrapper('image-collection');\nconst ProductLayout = createReactWrapper('product-layout');\n\n// Export all components as named exports\nexport {\n  CollapsibleList,\n  CollapsibleItem,\n  IconLabel,\n  SelectionMenu,\n  ImageCollection,\n  ProductLayout,\n  defineCustomElements\n};\n\n// Default export with all components\nexport default {\n  CollapsibleList,\n  CollapsibleItem,\n  IconLabel,\n  SelectionMenu,\n  ImageCollection,\n  ProductLayout,\n  defineCustomElements\n};","// Core components\nexport * from './molecules/collapsible-list/CollapsibleList.js';\nexport * from './molecules/collapsible-item/CollapsibleItem.js';\n\n// Additional components (dynamically imported when needed)\nlet additionalComponents = {};\n\n// Function to load additional components\nexport async function loadAdditionalComponents() {\n  try {\n    const selectionMenuModule = await import('./organisms/selection-menu/SelectionMenu.js');\n    additionalComponents.SelectionMenu = selectionMenuModule.default || selectionMenuModule;\n  } catch (e) {\n    console.warn('SelectionMenu component not found or failed to load', e);\n  }\n\n  try {\n    const productLayoutModule = await import('./templates/product-layout/ProductLayout.js');\n    additionalComponents.ProductLayout = productLayoutModule.default || productLayoutModule;\n  } catch (e) {\n    console.warn('ProductLayout component not found or failed to load', e);\n  }\n  \n  return additionalComponents;\n}\n\n// Export a function to get additional components\nexport function getAdditionalComponents() {\n  return additionalComponents;\n}\n","import * as webComponents from '../../components';\nimport { defineCustomElements } from '../../init.js';\n\nconst VuePlugin = {\n  install(app) {\n    // Initialize web components\n    defineCustomElements().catch(console.error);\n    // Register all web components as Vue components\n    Object.entries(webComponents).forEach(([componentName, webComponent]) => {\n      if (typeof webComponent === 'function' && webComponent.name) {\n        const tagName = webComponent.is || componentName.toLowerCase();\n        \n        // Create a Vue component definition\n        const vueComponent = {\n          name: componentName,\n          inheritAttrs: false,\n          emits: [], // Will be populated with event names\n          props: {},\n          render() {\n            // Convert kebab-case attributes to camelCase for web components\n            const attrs = Object.entries(this.$attrs).reduce((acc, [key, value]) => {\n              // Convert kebab-case to camelCase for props\n              const camelKey = key.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n              acc[camelKey] = value;\n              return acc;\n            }, {});\n\n            // Add event listeners\n            const on = {};\n            Object.keys(this.$listeners).forEach((event) => {\n              on[event] = this.$listeners[event];\n            });\n\n            return this.$createElement(\n              tagName,\n              {\n                attrs,\n                on,\n                ref: 'webComponent',\n              },\n              this.$slots.default\n            );\n          },\n        };\n\n        // Register the component globally\n        app.component(componentName, vueComponent);\n      }\n    });\n  },\n};\n\nexport default VuePlugin;\n","// Core web components\nexport * from './components/molecules/collapsible-list/CollapsibleList.js';\nexport * from './components/molecules/collapsible-item/CollapsibleItem.js';\nexport * from './components/atoms/icon-label/IconLabel.js';\nexport * from './components/organisms/selection-menu/SelectionMenu.js';\nexport * from './components/organisms/image-collection/ImageCollection.js';\nexport * from './components/templates/product-layout/ProductLayout.js';\n\n// Import React wrappers\nimport ReactWrappers from './wrappers/react/index.jsx';\n\n// Vue plugin\nexport { default as VuePlugin } from './wrappers/vue';\n\n// Export initialization function\nexport { defineCustomElements } from './init';\n\n// Additional components that need to be loaded asynchronously\nimport { loadAdditionalComponents, getAdditionalComponents } from './components';\n\n// Export React wrappers as both default and named exports\nexport const ReactComponents = ReactWrappers;\nexport default ReactWrappers;\n\n// Export component loader\nexport const Components = {\n  // Core components are already available via default export\n  ...getAdditionalComponents(),\n  \n  // Method to load additional components\n  async load() {\n    await loadAdditionalComponents();\n    Object.assign(this, getAdditionalComponents());\n    return this;\n  }\n};\n\n// Auto-load additional components in browser environment\nif (typeof window !== 'undefined') {\n  Components.load().catch(console.error);\n}\n"],"names":["HTMLElement","observedAttributes","constructor","this","attachShadow","mode","_isUpdating","_handleItemToggle","bind","container","document","createElement","slot","style","textContent","appendChild","shadowRoot","append","connectedCallback","_initialized","_initializeComponent","_updateReverseHeading","addEventListener","hasAttribute","_ensureOneItemExpanded","_setupMutationObserver","setAttribute","_observer","MutationObserver","async","mutations","shouldUpdate","mutation","type","attributeName","node","addedNodes","nodeType","Node","ELEMENT_NODE","matches","observe","attributes","attributeFilter","childList","subtree","isReversed","getAttribute","disconnect","processItems","items","item","removeAttribute","nestedItems","querySelectorAll","length","Array","from","nestedLists","processLists","lists","list","offsetHeight","error","e","target","parentElement","expanded","_closeOtherItems","exceptItem","closest","forEach","_getOpenItems","firstItem","querySelector","customElements","get","define","CollapsibleList","super","_icon","_label","_reverse","_render","icon","value","label","reverse","display","alignItems","gap","fontFamily","color","flexDirection","isImage","startsWith","test","justifyContent","width","height","src","alt","loading","objectFit","fontSize","lineHeight","innerHTML","attributeChangedCallback","name","oldValue","newValue","IconLabel","HTMLLIElement","_isExpanded","_handleClick","_header","_content","_initialRender","_removeShift","rendered","classList","add","_addEventListeners","_updateContentVisibility","remove","disconnectedCallback","_removeEventListeners","removeEventListener","event","preventDefault","stopPropagation","isExpanding","dispatchEvent","CustomEvent","detail","bubbles","composed","_createHeader","header","className","contentWrapper","flex","hideIcon","iconEl","marginRight","labelEl","_isRendering","existingContent","children","child","push","firstChild","removeChild","key","_toggleExpanded","_createContent","content","headerElements","headerElementSet","Set","childNodes","filter","has","TEXT_NODE","trim","includes","cloneNode","newIconEl","firstElementChild","insertBefore","wasExpanded","elementName","window","_elements","CollapsibleItem","extends","_items","_selectedId","_boundOnItemClick","_onItemClick","Promise","resolve","then","CollapsibleItem$2","JSON","parse","_updateSelectedState","stringify","selected","_renderItems","level","listContainer","listStyle","padding","margin","hasChildren","isSelected","id","li","isExpanded","_hasSelectedDescendant","transition","contentSlot","span","outerHTML","leafNode","itemId","itemElement","arrowIcon","allCollapsibleItems","allLeafItems","leaf","selectedCollapsibleItem","selectedLeafItem","some","_findItemById","found","SelectionMenu","_images","_handleToggle","_currentOpenIndex","images","isArray","render","_isHandlingToggle","index","composedPath","find","allItems","indexOf","i","source","_onItemToggle","targetItem","previousItem","toggle","map","image","title","removeshift","join","ImageCollection","defaultImages","description","_title","_isConnected","_hasRendered","_updateTitle","parsed","_updateImages","_a","imageCollection","imageCollectionContainer","getElementById","ProductLayout","elementsDefined","defineCustomElements","__GENERIC_WEBCOMPONENTS_DEFINED__","all","whenDefined","catch","console","resolveIconPath","createReactWrapper","tagName","Component","forwardRef","onToggle","props","ref","elementRef","useRef","React","useImperativeHandle","current","handleRef","el","class","restProps","headerContent","onClick","Boolean","elementPropsWithRef","Object","entries","reduce","acc","toUpperCase","eventName","toLowerCase","slice","element","displayName","ReactWrappers","additionalComponents","loadAdditionalComponents","selectionMenuModule","SelectionMenu$2","default","productLayoutModule","ProductLayout$2","getAdditionalComponents","VuePlugin","install","app","webComponents","componentName","webComponent","is","vueComponent","inheritAttrs","emits","attrs","$attrs","replace","g","on","keys","$listeners","$createElement","$slots","component","ReactComponents","Components","load","assign"],"mappings":"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"}