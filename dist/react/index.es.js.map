{"version":3,"file":"index.es.js","sources":["../../src/components/atoms/icon-label/IconLabel.js","../../src/components/molecules/collapsible-item/CollapsibleItem.js","../../src/components/molecules/collapsible-list/CollapsibleList.js","../../src/components/organisms/selection-menu/SelectionMenu.js","../../src/components/organisms/image-collection/ImageCollection.js","../../src/init.js","../../src/wrappers/react/index.jsx"],"sourcesContent":["/**\n * IconLabel Component\n * A simple component that displays an icon next to a label\n */\n\nexport class IconLabel extends HTMLElement {\n  static get observedAttributes() {\n    return ['icon', 'label', 'reverse'];\n  }\n\n  constructor() {\n    super();\n    this._icon = '';\n    this._label = '';\n    this._reverse = false;\n  }\n\n  connectedCallback() {\n    this._render();\n  }\n\n  get icon() {\n    return this._icon;\n  }\n\n  set icon(value) {\n    this._icon = value || '';\n    this._render();\n  }\n\n  get label() {\n    return this._label;\n  }\n\n  set label(value) {\n    this._label = value || '';\n    this._render();\n  }\n\n  get reverse() {\n    return this._reverse;\n  }\n\n  set reverse(value) {\n    this._reverse = value !== null && value !== 'false';\n    this._render();\n  }\n\n  _render() {\n    // Create container\n    const container = document.createElement('span');\n    container.style.display = 'inline-flex';\n    container.style.alignItems = 'center';\n    container.style.gap = '0.5rem';\n    container.style.fontFamily = 'inherit';\n    container.style.color = 'currentColor';\n    \n    if (this._reverse) {\n      container.style.flexDirection = 'row-reverse';\n    }\n\n    // Create icon element if icon is provided\n    if (this._icon) {\n      const isImage = this._icon.startsWith('data:') || \n                     this._icon.startsWith('http') || \n                     this._icon.startsWith('/') ||\n                     /\\.(png|jpg|jpeg|svg|gif|webp)(\\?.*)?$/i.test(this._icon);\n      \n      const icon = isImage ? document.createElement('img') : document.createElement('span');\n      icon.style.display = 'inline-flex';\n      icon.style.alignItems = 'center';\n      icon.style.justifyContent = 'center';\n      icon.style.width = '1em';\n      icon.style.height = '1em';\n\n      if (isImage) {\n        icon.src = this._icon;\n        icon.alt = '';\n        icon.loading = 'lazy';\n        icon.style.objectFit = 'contain';\n      } else {\n        icon.textContent = this._icon;\n        icon.style.fontSize = '1em';\n        icon.style.lineHeight = '1';\n      }\n      \n      container.appendChild(icon);\n    }\n\n    // Add label if provided\n    if (this._label) {\n      const label = document.createElement('span');\n      label.textContent = this._label;\n      container.appendChild(label);\n    }\n\n    // Update the component\n    this.innerHTML = '';\n    this.appendChild(container);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    \n    if (name === 'icon') {\n      this._icon = newValue || '';\n    } else if (name === 'label') {\n      this._label = newValue || '';\n    } else if (name === 'reverse') {\n      this._reverse = newValue !== null && newValue !== 'false';\n    }\n    \n    this._render();\n  }\n}\n\n// Define the custom element\nif (!customElements.get('icon-label')) {\n  customElements.define('icon-label', IconLabel);\n}\n","/**\n * CollapsibleItem Component\n * A custom element that creates a collapsible list item\n * \n * @attr {boolean} expanded - Whether the item is expanded or collapsed\n * @attr {string} icon - Optional icon to display next to the label\n * @attr {string} label - The text label for the collapsible item\n * @attr {boolean} removeshift - If true, removes the left padding from the content area\n */\n\nimport { IconLabel } from '../../atoms/icon-label/IconLabel.js';\n\n// Import regular CSS\nimport './CollapsibleItem.css';\n\nexport class CollapsibleItem extends HTMLLIElement {\n    static get observedAttributes() {\n        return ['expanded', 'icon', 'label', 'removeshift', 'hide-icon'];\n    }\n    \n    constructor() {\n        super();\n        this._isExpanded = false;\n        this._handleClick = this._handleClick.bind(this);\n        this._header = null;\n        this._content = null;\n        this._initialRender = true;\n        this._removeShift = false;\n        this.rendered = false;\n        \n        // Add base class to the host element\n        this.classList.add('collapsible-item');\n        \n        // Initialize expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        }\n        \n        // Initialize no-padding state\n        if (this.hasAttribute('removeshift')) {\n            this.classList.add('collapsible-item--no-padding');\n        }\n    }\n\n    connectedCallback() {\n        // Ensure the component has the correct role for accessibility\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'listitem');\n        }\n        \n        // Set up the component if not already rendered\n        if (!this.rendered) {\n            this._render();\n            this.rendered = true;\n            this._addEventListeners();\n            \n            // Ensure the content visibility is set correctly based on the expanded state\n            this._updateContentVisibility();\n        }\n        \n        // Ensure the component is properly styled\n        this.classList.add('collapsible-item');\n        \n        // Set initial expanded state\n        if (this.hasAttribute('expanded')) {\n            this._isExpanded = true;\n            this.classList.add('collapsible-item--expanded');\n        } else {\n            this._isExpanded = false;\n            this.classList.remove('collapsible-item--expanded');\n        }\n    }\n    \n    disconnectedCallback() {\n        this._removeEventListeners();\n    }\n    \n    _addEventListeners() {\n        // Add click listener to the component itself for event delegation\n        this.addEventListener('click', this._handleClick);\n    }\n    \n    _removeEventListeners() {\n        this.removeEventListener('click', this._handleClick);\n    }\n    \n    _handleClick(event) {\n        // Find the closest header from the click target\n        const header = event.target.closest('.collapsible-item__header');\n        if (!header) return; // Not a header click\n        \n        // Prevent the default action to avoid any native behavior\n        event.preventDefault();\n        event.stopPropagation();\n        \n        // Toggle the expanded state\n        const isExpanding = !this.hasAttribute('expanded');\n        \n        // Update the expanded attribute\n        if (isExpanding) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the internal state and UI\n        this._isExpanded = isExpanding;\n        this._updateContentVisibility();\n        \n        // Dispatch a custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: isExpanding },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _createHeader() {\n        const header = document.createElement('div');\n        header.className = 'collapsible-item__header';\n        \n        // Create a container for the icon and label\n        const contentWrapper = document.createElement('div');\n        contentWrapper.style.display = 'flex';\n        contentWrapper.style.alignItems = 'center';\n        contentWrapper.style.flex = '1';\n        \n        // Add icon if provided and not hidden\n        const hideIcon = this.hasAttribute('hide-icon');\n        const icon = this.getAttribute('icon');\n        if (icon && !hideIcon) {\n            const iconEl = document.createElement('span');\n            iconEl.className = 'collapsible-item__icon';\n            iconEl.textContent = icon;\n            iconEl.style.marginRight = '0.5rem';\n            contentWrapper.appendChild(iconEl);\n        }\n        \n        // Add label\n        const label = this.getAttribute('label') || '';\n        if (label) {\n            const labelEl = document.createElement('span');\n            labelEl.className = 'collapsible-item__label';\n            labelEl.textContent = label;\n            contentWrapper.appendChild(labelEl);\n        }\n        \n        // Add the content wrapper to the header\n        header.appendChild(contentWrapper);\n                \n        return header;\n    }\n    \n    _render() {\n        // Prevent re-entrancy during rendering\n        if (!this._isRendering) {\n            this._isRendering = true;\n            \n            // Store any existing content that should be preserved\n            const existingContent = [];\n            Array.from(this.children).forEach(child => {\n                if (child !== this._header && child !== this._content) {\n                    existingContent.push(child);\n                }\n            });\n            \n            // Clear existing content\n            while (this.firstChild) {\n                this.removeChild(this.firstChild);\n            }\n            \n            // Create and append header\n            this._header = this._createHeader();\n            this.appendChild(this._header);\n            \n            // Set header attributes for accessibility\n            if (this._header) {\n                this._header.setAttribute('role', 'button');\n                this._header.setAttribute('aria-expanded', this._isExpanded ? 'true' : 'false');\n                this._header.setAttribute('tabindex', '0');\n                \n                // Add keyboard support\n                this._header.addEventListener('keydown', (e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        this._toggleExpanded();\n                    }\n                });\n            }\n            \n            // Create and append content container\n            this._content = this._createContent();\n            if (this._content) {\n                this.appendChild(this._content);\n                \n                // Add back any existing content to the content container\n                existingContent.forEach(child => {\n                    this._content.appendChild(child);\n                });\n            }\n            \n            // Ensure proper ARIA attributes for accessibility\n            this.setAttribute('role', 'listitem');\n            \n            // Set initial content visibility\n            this._updateContentVisibility();\n            \n            // Mark as rendered\n            this.rendered = true;\n            this._isRendering = false;\n        }\n    }\n    \n    _createContent() {\n        const content = document.createElement('div');\n        content.className = 'collapsible-item__content';\n        \n        // Filter out any header elements and their content\n        const headerElements = this.querySelectorAll('.collapsible-item__header, .collapsible-item__label, .collapsible-item__icon');\n        const headerElementSet = new Set(headerElements);\n        \n        // Process direct children that are not part of the header\n        const filteredChildren = Array.from(this.childNodes).filter(node => {\n            // Keep only element nodes that are not in the header\n            if (node.nodeType === Node.ELEMENT_NODE) {\n                return !headerElementSet.has(node) && !node.closest('.collapsible-item__header');\n            }\n            // Keep text nodes that are not just whitespace\n            if (node.nodeType === Node.TEXT_NODE) {\n                return node.textContent.trim() !== '' && \n                       !node.textContent.includes('▶') && \n                       !node.textContent.includes('▼');\n            }\n            return false;\n        });\n        \n        // Add the filtered children to the content\n        filteredChildren.forEach(child => {\n            content.appendChild(child.cloneNode(true));\n        });\n        \n        return content;\n    }\n    \n    get expanded() {\n        return this._isExpanded;\n    }\n    \n    set expanded(value) {\n        if (this._isExpanded === value) return; // No change needed\n        \n        this._isExpanded = value;\n        \n        // Update the attribute to reflect the state in the DOM\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the content visibility immediately\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _toggleExpanded() {\n        this._isExpanded = !this._isExpanded;\n        \n        // Update the expanded attribute\n        if (this._isExpanded) {\n            this.setAttribute('expanded', '');\n        } else {\n            this.removeAttribute('expanded');\n        }\n        \n        // Update the UI\n        this._updateContentVisibility();\n        \n        // Dispatch the toggle event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { expanded: this._isExpanded },\n            bubbles: true,\n            composed: true\n        }));\n    }\n    \n    _updateContentVisibility() {\n        if (!this._content || !this._header) return;\n        \n        const hideIcon = this.hasAttribute('hide-icon');\n        \n        if (this._isExpanded) {\n            this._content.classList.add('collapsible-item__content--expanded');\n            this._content.style.display = 'block';\n            this._header.setAttribute('aria-expanded', 'true');\n            this.classList.add('collapsible-item--expanded');\n            // Update icon to expanded state (down arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▼');\n            }\n        } else {\n            this._content.classList.remove('collapsible-item__content--expanded');\n            this._content.style.display = 'none';\n            this._header.setAttribute('aria-expanded', 'false');\n            this.classList.remove('collapsible-item--expanded');\n            // Update icon to collapsed state (right arrow) only if not hidden\n            if (!hideIcon) {\n                this.setAttribute('icon', '▶');\n            }\n        }\n    }\n    \n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === 'removeshift') {\n            this._removeShift = newValue !== null;\n            if (this._removeShift) {\n                this.classList.add('collapsible-item--no-padding');\n            } else {\n                this.classList.remove('collapsible-item--no-padding');\n            }\n        } else if (name === 'hide-icon' && this._header) {\n            // Handle hide-icon attribute changes\n            const iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue !== null) {\n                // hide-icon is set, remove the icon if it exists\n                if (iconEl) {\n                    iconEl.remove();\n                }\n            } else if (this.hasAttribute('icon')) {\n                // hide-icon is removed, add the icon back if we have an icon attribute\n                if (!iconEl) {\n                    const icon = this.getAttribute('icon');\n                    const newIconEl = document.createElement('span');\n                    newIconEl.className = 'collapsible-item__icon';\n                    newIconEl.textContent = icon;\n                    newIconEl.style.marginRight = '0.5rem';\n                    const contentWrapper = this._header.firstElementChild;\n                    if (contentWrapper) {\n                        contentWrapper.insertBefore(newIconEl, contentWrapper.firstChild);\n                    }\n                }\n            }\n        } else if (name === 'expanded') {\n            const wasExpanded = this._isExpanded;\n            this._isExpanded = newValue !== null;\n            \n            // Only update if the state actually changed\n            if (this._isExpanded !== wasExpanded) {\n                this._updateContentVisibility();\n            }\n        } else if (name === 'icon' && this._header) {\n            // Update the icon if it exists, or create it if it doesn't\n            let iconEl = this._header.querySelector('.collapsible-item__icon');\n            if (newValue) {\n                if (!iconEl) {\n                    iconEl = document.createElement('span');\n                    iconEl.className = 'collapsible-item__icon';\n                    this._header.insertBefore(iconEl, this._header.firstChild);\n                }\n                iconEl.textContent = newValue;\n            } else if (iconEl) {\n                this._header.removeChild(iconEl);\n            }\n        } else if (name === 'label' && this._header) {\n            // Update the label if it exists, or create it if it doesn't\n            let labelEl = this._header.querySelector('.collapsible-item__label');\n            if (labelEl) {\n                labelEl.textContent = newValue || '';\n            } else if (newValue) {\n                labelEl = document.createElement('span');\n                labelEl.className = 'collapsible-item__label';\n                labelEl.textContent = newValue;\n                this._header.appendChild(labelEl);\n            }\n        }\n    }\n}\n\n// Define the custom element with the correct name\nconst elementName = 'collapsible-item';\n\n// Check if the element is already defined and undefine it if necessary\nif (typeof window !== 'undefined' && window.customElements) {\n    // First, try to undefine the element if it exists\n    if (window.customElements.get(elementName)) {\n        const oldElement = window.customElements.get(elementName);\n        delete window.customElements._elements[elementName];\n    }\n    \n    // Define the element with the proper configuration\n    window.customElements.define(elementName, CollapsibleItem, { extends: 'li' });\n}","/**\r\n * CollapsibleList Component\r\n * A custom element that creates a collapsible list container\r\n */\r\n\r\nexport class CollapsibleList extends HTMLElement {\r\n  static get observedAttributes() {\r\n    return ['reverse-heading', 'single-item', 'accordion'];\r\n  }\r\n  \r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: 'open' });\r\n    this._isUpdating = false; // Track if we're currently updating to prevent reentrant calls\r\n    this._handleItemToggle = this._handleItemToggle.bind(this);\r\n    \r\n    const container = document.createElement('div');\r\n    const slot = document.createElement('slot');\r\n    \r\n    // Create styles for the component\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      :host {\r\n        display: block;\r\n        width: 100%;\r\n        --indent-size: 1.5rem;\r\n      }\r\n      \r\n      ::slotted(collapsible-item) {\r\n        display: block;\r\n        margin: 0.25rem 0;\r\n        padding: 0;\r\n        width: 100%;\r\n      }\r\n      \r\n      /* Nested lists should have a border */\r\n      ::slotted(collapsible-list) {\r\n        border-left: 1px solid #e0e0e0;\r\n        margin-left: 0.5rem;\r\n        padding-left: 0.5rem;\r\n      }\r\n      \r\n      /* Style for the header in collapsible items */\r\n      .collapsible-item__header {\r\n        display: flex;\r\n        align-items: center;\r\n        width: 100%;\r\n        flex-direction: row;\r\n      }\r\n      \r\n      /* Toggle container styles */\r\n      .collapsible-item__toggle-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: var(--toggle-size, 24px);\r\n        height: var(--toggle-size, 24px);\r\n        margin: var(--toggle-margin, 0 8px 0 0);\r\n        flex-shrink: 0;\r\n      }`;\r\n    \r\n    container.appendChild(slot);\r\n    this.shadowRoot.append(style, container);\r\n  }\r\n  \r\n  async connectedCallback() {\r\n    if (!this._initialized) {\r\n      this._initializeComponent();\r\n      this._initialized = true;\r\n      \r\n      // Set initial reverse heading state\r\n      await this._updateReverseHeading();\r\n      \r\n      // Set up event listeners for accordion behavior\r\n      this.addEventListener('toggle', this._handleItemToggle);\r\n      \r\n      // Ensure at least one item is expanded in accordion mode\r\n      if (this.hasAttribute('accordion')) {\r\n        this._ensureOneItemExpanded();\r\n      }\r\n    }\r\n    \r\n    // Set up mutation observer for dynamic content\r\n    this._setupMutationObserver();\r\n  }\r\n  \r\n  _initializeComponent() {\r\n    if (!this.hasAttribute('role')) {\r\n      this.setAttribute('role', 'list');\r\n    }\r\n    \r\n    if (!this.hasAttribute('aria-label') && !this.hasAttribute('aria-labelledby')) {\r\n      console.warn('collapsible-list: Add an aria-label or aria-labelledby attribute for accessibility');\r\n    }\r\n  }\r\n  \r\n  _setupMutationObserver() {\r\n    // Set up a mutation observer to handle dynamically added items and attribute changes\r\n    this._observer = new MutationObserver(async (mutations) => {\r\n      let shouldUpdate = false;\r\n      \r\n      for (const mutation of mutations) {\r\n        if (mutation.type === 'attributes' && mutation.attributeName === 'reverse-heading') {\r\n          shouldUpdate = true;\r\n          break;\r\n        } else if (mutation.type === 'childList') {\r\n          // Check if any added nodes are collapsible items or lists\r\n          for (const node of mutation.addedNodes) {\r\n            if (node.nodeType === Node.ELEMENT_NODE && \r\n                (node.matches('collapsible-item') || node.matches('collapsible-list'))) {\r\n              shouldUpdate = true;\r\n              break;\r\n            }\r\n          }\r\n          if (shouldUpdate) break;\r\n        }\r\n      }\r\n      \r\n      if (shouldUpdate) {\r\n        await this._updateReverseHeading();\r\n      }\r\n    });\r\n    \r\n    // Start observing the component for attribute changes and child list changes\r\n    this._observer.observe(this, {\r\n      attributes: true,\r\n      attributeFilter: ['reverse-heading'],\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Updates the reverse heading state for all child collapsible items\r\n   * @private\r\n   */\r\n  async _updateReverseHeading() {\r\n    // Prevent reentrant calls\r\n    if (this._isUpdating) return;\r\n    this._isUpdating = true;\r\n    \r\n    try {\r\n      const isReversed = this.hasAttribute('reverse-heading') && \r\n                       this.getAttribute('reverse-heading') !== 'false';\r\n      \r\n      // Temporarily disconnect observer to prevent infinite loop\r\n      if (this._observer) {\r\n        this._observer.disconnect();\r\n      }\r\n      \r\n      // Process direct child collapsible-items\r\n      const processItems = async (items) => {\r\n        for (const item of items) {\r\n          // Set the attribute on the item\r\n          if (isReversed) {\r\n            item.setAttribute('reverse-heading', '');\r\n          } else {\r\n            item.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any nested items in this item (only direct children)\r\n          const nestedItems = item.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any nested lists in this item (only direct children)\r\n          const nestedLists = item.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Process nested collapsible-lists\r\n      const processLists = async (lists) => {\r\n        for (const list of lists) {\r\n          // Skip if this is the current list to prevent cycles\r\n          if (list === this) continue;\r\n          \r\n          // Set the attribute on the list\r\n          if (isReversed) {\r\n            list.setAttribute('reverse-heading', '');\r\n          } else {\r\n            list.removeAttribute('reverse-heading');\r\n          }\r\n          \r\n          // Process any direct child items in this list\r\n          const nestedItems = list.querySelectorAll(':scope > collapsible-item');\r\n          if (nestedItems.length > 0) {\r\n            await processItems(Array.from(nestedItems));\r\n          }\r\n          \r\n          // Process any direct child lists\r\n          const nestedLists = list.querySelectorAll(':scope > collapsible-list');\r\n          if (nestedLists.length > 0) {\r\n            await processLists(Array.from(nestedLists));\r\n          }\r\n        }\r\n      };\r\n      \r\n      // Start processing from the current element\r\n      const items = this.querySelectorAll(':scope > collapsible-item');\r\n      if (items.length > 0) {\r\n        await processItems(Array.from(items));\r\n      }\r\n      \r\n      const lists = this.querySelectorAll(':scope > collapsible-list');\r\n      if (lists.length > 0) {\r\n        await processLists(Array.from(lists));\r\n      }\r\n      \r\n      // Force a reflow to ensure all attribute changes are applied\r\n      if (this.shadowRoot) {\r\n        this.shadowRoot.offsetHeight; // This forces a reflow\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating reverse heading:', error);\r\n    } finally {\r\n      // Reconnect observer if it exists\r\n      if (this._observer) {\r\n        this._observer.observe(this, {\r\n          attributes: true,\r\n          attributeFilter: ['reverse-heading'],\r\n          childList: true,\r\n          subtree: true\r\n        });\r\n      }\r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n\r\n  _handleItemToggle(e) {\r\n    if (this._isUpdating) return;\r\n    \r\n    const target = e.target;\r\n    \r\n    // Only process if this is a direct child\r\n    if (target.parentElement === this) {\r\n      this._isUpdating = true;\r\n      \r\n      if (this.hasAttribute('accordion')) {\r\n        // In accordion mode, close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      } else if (this.hasAttribute('single-item')) {\r\n        // In single-item mode, just close other items when one is opened\r\n        if (target.expanded) {\r\n          this._closeOtherItems(target);\r\n        }\r\n      }\r\n      \r\n      this._isUpdating = false;\r\n    }\r\n  }\r\n  \r\n  _closeOtherItems(exceptItem) {\r\n    // Don't close items if inside an image-collection\r\n    if (this.closest('image-collection')) {\r\n      return;\r\n    }\r\n    \r\n    const items = this.querySelectorAll('collapsible-item');\r\n    items.forEach(item => {\r\n      if (item !== exceptItem) {\r\n        item.expanded = false;\r\n      }\r\n    });\r\n  }\r\n  \r\n  _getOpenItems() {\r\n    return Array.from(this.querySelectorAll('collapsible-item[expanded]'));\r\n  }\r\n  \r\n  _ensureOneItemExpanded() {\r\n    if (!this.hasAttribute('accordion')) return;\r\n    \r\n    const openItems = this._getOpenItems();\r\n    if (openItems.length === 0) {\r\n      // If no items are open, open the first one\r\n      const firstItem = this.querySelector('collapsible-item');\r\n      if (firstItem) {\r\n        firstItem.setAttribute('expanded', '');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Define the custom element\r\nif (!customElements.get('collapsible-list')) {\r\n  customElements.define('collapsible-list', CollapsibleList);\r\n}\r\n","/**\n * SelectionMenu Component\n * A collapsible menu that allows selection of leaf nodes using CollapsibleItem\n * \n * @fires item-selected - Dispatched when a leaf node is selected\n * @property {string} items - JSON string representing the menu items structure\n * @property {string} selected - ID of the currently selected item\n */\n\nexport class SelectionMenu extends HTMLElement {\n  static get observedAttributes() {\n    return ['items', 'selected'];\n  }\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' });\n    this._items = [];\n    this._selectedId = null;\n    this._boundOnItemClick = this._onItemClick.bind(this);\n    \n    // Import the CollapsibleItem component\n    import('../../molecules/collapsible-item/CollapsibleItem.js');\n  }\n\n  connectedCallback() {\n    this._render();\n  }\n\n  disconnectedCallback() {\n    this._removeEventListeners();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (oldValue === newValue) return;\n\n    switch (name) {\n      case 'items':\n        this._items = newValue ? JSON.parse(newValue) : [];\n        this._render();\n        break;\n      case 'selected':\n        this._selectedId = newValue;\n        this._updateSelectedState();\n        break;\n    }\n  }\n\n  get items() {\n    return JSON.stringify(this._items);\n  }\n\n  set items(value) {\n    this._items = value ? JSON.parse(value) : [];\n    this._render();\n  }\n\n  get selected() {\n    return this._selectedId;\n  }\n\n  set selected(value) {\n    if (this._selectedId !== value) {\n      this._selectedId = value;\n      this._updateSelectedState();\n    }\n  }\n\n  _render() {\n    if (!this.shadowRoot) return;\n    \n    this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: block;\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          --primary-color: #4a6cf7;\n          --hover-bg: #f5f8ff;\n          --selected-bg: #e6f0ff;\n          --border-color: #e2e8f0;\n          --text-color: #2d3748;\n          --text-secondary: #4a5568;\n        }\n        \n        .menu-container {\n          border: 1px solid var(--border-color);\n          border-radius: 6px;\n          overflow: hidden;\n        }\n        \n        .menu-item {\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          margin: 2px 0;\n          border-radius: 4px;\n        }\n        \n        .menu-item:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        .menu-item--selected:hover {\n          background-color: var(--selected-bg, #e6f0ff);\n        }\n        \n        /* Style for the collapsible item header */\n        .menu-item::part(header) {\n          padding: 8px 12px;\n          display: flex;\n          align-items: center;\n        }\n        \n        /* Style for the collapsible item content */\n        .menu-item::part(content) {\n          padding: 0;\n          overflow: hidden;\n          transition: max-height 0.3s ease, opacity 0.2s ease;\n          max-height: 0;\n          opacity: 0;\n          margin: 0;\n        }\n        \n        .menu-item::part(content).menu-item__content--expanded {\n          max-height: 1000px; /* Adjust based on your needs */\n          opacity: 1;\n          padding: 4px 0 4px 1rem;\n        }\n        \n        .menu-item__child-list {\n          list-style: none;\n          padding: 0;\n          margin: 0 0 0 1rem;\n        }\n        \n        /* Remove bullets from ul elements */\n        ul {\n          list-style-type: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Ensure list items have no default styling */\n        li {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n        }\n        \n        /* Leaf item styles */\n        .menu-item__leaf {\n          display: flex;\n          align-items: center;\n          padding: 4px 12px;\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n          border-radius: 4px;\n        }\n        \n        .menu-item__leaf:hover {\n          background-color: var(--hover-bg, #f5f8ff);\n        }\n        \n        .menu-item__leaf.menu-item--selected {\n          background-color: var(--selected-bg, #e6f0ff);\n          color: var(--primary-color, #4a6cf7);\n          font-weight: 500;\n        }\n        \n        /* Arrow icon for collapsible items */\n        .menu-item__arrow {\n          display: inline-block;\n          width: 12px;\n          text-align: center;\n          transition: transform 0.2s ease;\n        }\n        \n        .menu-item[expanded] .menu-item__arrow {\n          transform: rotate(90deg);\n        }\n      </style>\n      <div class=\"menu-container\">\n        ${this._renderItems(this._items, 0)}\n      </div>\n    `;\n    \n    this._addEventListeners();\n  }\n  \n  _renderItems(items, level = 0) {\n    if (!items || !items.length) return '';\n    \n    // Create a container for the list\n    const listContainer = document.createElement('ul');\n    listContainer.style.listStyle = 'none';\n    listContainer.style.padding = '0';\n    listContainer.style.margin = '0';\n    \n    items.forEach(item => {\n      const hasChildren = item.children && item.children.length > 0;\n      const isSelected = this._selectedId === item.id;\n      \n      // Create list item\n      const li = document.createElement('li');\n      li.setAttribute('data-id', item.id);\n      \n      if (hasChildren) {\n        // For items with children, use collapsible-item\n        li.setAttribute('is', 'collapsible-item');\n        li.setAttribute('data-id', item.id);\n        li.setAttribute('label', item.name);\n        \n        // Determine initial state\n        const hasSelectedDescendant = this._hasSelectedDescendant(item);\n        const isExpanded = hasSelectedDescendant || isSelected;\n        \n        // Set initial expanded state\n        if (isExpanded) {\n          li.setAttribute('expanded', '');\n        }\n        \n        // Set the arrow icon using the icon attribute\n        li.setAttribute('icon', isExpanded ? '▼' : '▶');\n        li.style.marginRight = '8px';\n        li.style.transition = 'transform 0.2s ease';\n        \n        if (isSelected) {\n          li.classList.add('menu-item--selected');\n        }\n        \n        // Create and append child list\n        const childList = document.createElement('ul');\n        childList.className = 'menu-item__child-list';\n        childList.innerHTML = this._renderItems(item.children, level + 1);\n        \n        // Create content container with proper styling\n        const contentSlot = document.createElement('div');\n        contentSlot.slot = 'content';\n        contentSlot.className = 'menu-item__content';\n        \n        // Add the child list to the content slot\n        contentSlot.appendChild(childList);\n        \n        // Add the content slot to the collapsible item\n        li.appendChild(contentSlot);\n        \n        // Handle the toggle event to update the content visibility\n        li.addEventListener('toggle', (e) => {\n          contentSlot.style.display = e.detail.expanded ? 'block' : 'none';\n        });\n      } else {\n        // For leaf nodes, just use a span\n        const span = document.createElement('span');\n        span.className = 'menu-item__leaf';\n        if (isSelected) span.classList.add('menu-item--selected');\n        \n      \n        \n        // Add label\n        const label = document.createElement('span');\n        label.className = 'menu-item__label';\n        label.textContent = item.name;\n        span.appendChild(label);\n        \n        // Add click handler for selection\n        span.addEventListener('click', (e) => {\n          e.stopPropagation();\n          this._selectedId = item.id;\n          this._updateSelectedState();\n          this.dispatchEvent(new CustomEvent('item-selected', {\n            detail: {\n              id: item.id,\n              item: item,\n              name: item.name\n            },\n            bubbles: true,\n            composed: true\n          }));\n        });\n        \n        li.appendChild(span);\n      }\n      \n      listContainer.appendChild(li);\n    });\n    \n    return level === 0 ? listContainer.outerHTML : listContainer.innerHTML;\n  }\n  \n  _addEventListeners() {\n    this.shadowRoot.addEventListener('click', this._boundOnItemClick);\n  }\n  \n  _removeEventListeners() {\n    this.shadowRoot.removeEventListener('click', this._boundOnItemClick);\n  }\n  \n  _onItemClick(event) {\n    // Handle leaf node clicks\n    const leafNode = event.target.closest('.menu-item__leaf');\n    if (leafNode) {\n      event.stopPropagation();\n      const itemId = leafNode.getAttribute('data-id');\n      if (itemId) {\n        this.selected = itemId;\n        this._updateSelectedState();\n        this.dispatchEvent(new CustomEvent('item-selected', {\n          detail: { id: itemId },\n          bubbles: true,\n          composed: true\n        }));\n      }\n      return;\n    }\n    \n    // Handle collapsible item clicks\n    const header = event.target.closest('.collapsible-item__header');\n    if (!header) return;\n    \n    const itemElement = header.parentElement;\n    if (itemElement && itemElement.getAttribute('is') === 'collapsible-item') {\n      event.stopPropagation();\n      \n      // Toggle the expanded state\n      const isExpanded = itemElement.hasAttribute('expanded');\n      const arrowIcon = itemElement.querySelector('.menu-item__arrow');\n      \n      if (isExpanded) {\n        itemElement.removeAttribute('expanded');\n        if (arrowIcon) arrowIcon.textContent = '▶';\n      } else {\n        itemElement.setAttribute('expanded', '');\n        if (arrowIcon) arrowIcon.textContent = '▼';\n      }\n      \n      // Dispatch a custom event for the toggle action\n      itemElement.dispatchEvent(new CustomEvent('toggle', {\n        detail: { expanded: !isExpanded },\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n  \n  _updateSelectedState() {\n    if (!this.shadowRoot) return;\n    \n    // Remove selected class from all items\n    const allCollapsibleItems = this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]');\n    const allLeafItems = this.shadowRoot.querySelectorAll('.menu-item__leaf');\n    \n    allCollapsibleItems.forEach(item => {\n      item.classList.remove('menu-item--selected');\n      item.removeAttribute('selected');\n    });\n    \n    allLeafItems.forEach(leaf => {\n      leaf.classList.remove('menu-item--selected');\n    });\n    \n    // Add selected class to the selected item\n    if (this._selectedId) {\n      \n      // Check collapsible items\n      const selectedCollapsibleItem = this.shadowRoot.querySelector(`li[is=\"collapsible-item\"][data-id=\"${this._selectedId}\"]`);\n      if (selectedCollapsibleItem) {\n        selectedCollapsibleItem.classList.add('menu-item--selected');\n        selectedCollapsibleItem.setAttribute('selected', '');\n      }\n      \n      // Check leaf items\n      const selectedLeafItem = this.shadowRoot.querySelector(`li[data-id=\"${this._selectedId}\"] .menu-item__leaf`);\n      if (selectedLeafItem) {\n        selectedLeafItem.classList.add('menu-item--selected');\n      }\n      \n      // If we didn't find the item, it might be because it's in a closed collapsible item\n      if (!selectedCollapsibleItem && !selectedLeafItem) {\n        console.warn('Could not find selected item in the DOM. It might be in a closed collapsible section.');\n      }\n    }\n  }\n  \n  _hasSelectedDescendant(item) {\n    if (!item) return false;\n    \n    // Check if this item is selected\n    if (item.id === this._selectedId) return true;\n    \n    // Check if any child is selected\n    if (item.children) {\n      return item.children.some(child => this._hasSelectedDescendant(child));\n    }\n    \n    return false;\n  }\n  \n  _findItemById(items, id) {\n    if (!items || !items.length) return null;\n    \n    for (const item of items) {\n      if (item.id === id) return item;\n      if (item.children) {\n        const found = this._findItemById(item.children, id);\n        if (found) return found;\n      }\n    }\n    return null;\n  }\n}\n\n// Define the custom element\nif (!customElements.get('selection-menu')) {\n  customElements.define('selection-menu', SelectionMenu);\n}","import { CollapsibleItem } from '../../molecules/collapsible-item/CollapsibleItem.js';\n\nexport class ImageCollection extends HTMLElement {\n    static get observedAttributes() {\n        return ['images'];\n    }\n\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        this._images = [];\n        this._handleToggle = this._handleToggle.bind(this);\n        this._currentOpenIndex = 0;\n    }\n\n    get images() {\n        return this._images;\n    }\n\n    set images(value) {\n        if (Array.isArray(value)) {\n            this._images = value;\n            this.render();\n        } else if (typeof value === 'string') {\n            try {\n                this._images = JSON.parse(value);\n                this.render();\n            } catch (e) {\n            }\n        }\n    }\n\n    connectedCallback() {\n        this.render();\n        this.shadowRoot.addEventListener('toggle', this._handleToggle);\n    }\n\n    disconnectedCallback() {\n        this.shadowRoot.removeEventListener('toggle', this._handleToggle);\n    }\n\n    _handleToggle(event) {\n        // Prevent event from bubbling up\n        event.stopPropagation();\n        \n        // Prevent reentrant calls\n        if (this._isHandlingToggle) return;\n        this._isHandlingToggle = true;\n        \n        let index = -1;\n        let wasExpanded = false;\n        \n        try {\n            \n            // Find the clicked collapsible item by traversing up the composed path\n            const target = event.composedPath().find(\n                node => node.nodeType === Node.ELEMENT_NODE && \n                       node.getAttribute && \n                       node.getAttribute('is') === 'collapsible-item'\n            );\n            \n            if (!target) {\n                return;\n            }\n\n            // Get all collapsible items\n            const allItems = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n            index = allItems.indexOf(target);\n            \n            if (index === -1) {\n                return;\n            }\n            \n            // Prevent toggling if this item is already open\n            if (index === this._currentOpenIndex) {\n                return;\n            }\n            \n            wasExpanded = target.expanded;\n            \n            // Update all items\n            \n            // First, close all items except the target\n            allItems.forEach((item, i) => {\n                if (i !== index && item.expanded) {\n                    item.expanded = false;\n                }\n            });\n            \n            // Then toggle the target item if needed\n            if (index === this._currentOpenIndex) {\n                // Clicked the currently open item - close it\n                target.expanded = false;\n                this._currentOpenIndex = -1;\n            } else {\n                // Open the clicked item\n                target.expanded = true;\n                this._currentOpenIndex = index;\n            }\n        } finally {\n            // Always clear the flag, even if an error occurred\n            this._isHandlingToggle = false;\n        }\n        \n        // Dispatch our custom event\n        this.dispatchEvent(new CustomEvent('toggle', {\n            detail: { \n                index,\n                expanded: !wasExpanded,\n                source: 'image-collection'\n            },\n            bubbles: true,\n            composed: true\n        }));\n    }\n\n    \n    _onItemToggle(event) {\n        // Stop propagation to prevent double-handling\n        event.stopPropagation();\n        \n        const targetItem = event.target.closest('li[is=\"collapsible-item\"]');\n        if (!targetItem) return;\n\n        const items = Array.from(this.shadowRoot.querySelectorAll('li[is=\"collapsible-item\"]'));\n        const index = items.indexOf(targetItem);\n        \n        if (index === -1) return;\n\n        // If the clicked item is being closed, just update our state\n        if (!event.detail.expanded) {\n            if (this._currentOpenIndex === index) {\n                this._currentOpenIndex = -1;\n            }\n            return;\n        }\n\n        // Close the previously open item if it's different from the clicked one\n        if (this._currentOpenIndex !== -1 && this._currentOpenIndex !== index) {\n            const previousItem = items[this._currentOpenIndex];\n            if (previousItem) {\n                previousItem.toggle(false);\n            }\n        }\n        \n        this._currentOpenIndex = index;\n    }\n\n    render() {\n        if (!this.shadowRoot) return;\n        \n        // Only expand the first item if no item is currently expanded\n        if (this._currentOpenIndex === -1 && this._images.length > 0) {\n            this._currentOpenIndex = 0;\n        }\n        \n        this.shadowRoot.innerHTML = `\n            <style>\n                .image-collection {\n                    width: 100%;\n                    max-width: 800px;\n                    margin: 0 auto;\n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n                }\n                \n                .image-collection__container {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 0;\n                    width: 100%;\n                    list-style: none;\n                    padding: 0;\n                }\n                \n                .image-collection__item {\n                    width: 100%;\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection__image {\n                    width: 100%;\n                    height: auto;\n                    display: block;\n                }\n                \n                .image-collection__title {\n                    font-weight: 600;\n                    padding: 0.8rem 1rem;\n                    background-color: #f8fafc;\n                    width: 100%;\n                    cursor: pointer;\n                    transition: background-color 0.2s;\n                }\n                \n                .image-collection__title:hover {\n                    background-color: #f1f5f9;\n                }\n                \n                .image-collection .collapsible-item__header {\n                    padding: 0.5rem 1rem;\n                    background: none;\n                    border: none;\n                    width: 100%;\n                    text-align: left;\n                    cursor: pointer;\n                }\n                \n                .image-collection .collapsible-item__content {\n                    margin: 0;\n                    transition: all 0.3s ease;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"] {\n                    border: 1px solid #e2e8f0;\n                    border-radius: 4px;\n                    overflow: hidden;\n                }\n                \n                .image-collection li[is=\"collapsible-item\"]:last-child {\n                    margin-bottom: 0;\n                }\n            </style>\n            <div class=\"image-collection\">\n                <ul class=\"image-collection__container\">\n                    ${this._images.map((image, index) => `\n                        <li is=\"collapsible-item\" \n                            label=\"${image.title}\" \n                            ${image.removeshift ? 'removeshift=\"true\"' : ''}\n                            ${this._currentOpenIndex === index ? 'expanded' : ''}\n                            hide-icon\n                            >\n                            <div slot=\"content\">\n                                <img \n                                    class=\"image-collection__image\" \n                                    src=\"${image.src}\" \n                                    alt=\"${image.title}\"\n                                    loading=\"lazy\"\n                                >\n                            </div>\n                        </li>\n                    `).join('')}\n                </ul>\n            </div>\n        `;\n    }\n}\n\nif (!customElements.get('image-collection')) {\n    customElements.define('image-collection', ImageCollection);\n}","// Import components\nimport { CollapsibleItem } from './components/molecules/collapsible-item/CollapsibleItem.js';\nimport { CollapsibleList } from './components/molecules/collapsible-list/CollapsibleList.js';\nimport { IconLabel } from './components/atoms/icon-label/IconLabel.js';\nimport { SelectionMenu } from './components/organisms/selection-menu/SelectionMenu.js';\nimport { ImageCollection } from './components/organisms/image-collection/ImageCollection.js';\n\n// Track if elements have been defined\nlet elementsDefined = false;\n\n// Initialize web components\nexport function defineCustomElements() {\n  // Return early if elements are already defined\n  if (elementsDefined || window.__GENERIC_WEBCOMPONENTS_DEFINED__) {\n    return Promise.resolve();\n  }\n\n  // Mark as defined\n  elementsDefined = true;\n  window.__GENERIC_WEBCOMPONENTS_DEFINED__ = true;\n\n  // Define all custom elements with their actual implementations\n  if (!customElements.get('collapsible-list')) {\n    customElements.define('collapsible-list', CollapsibleList);\n  }\n  if (!customElements.get('collapsible-item')) {\n    customElements.define('collapsible-item', CollapsibleItem, { extends: 'li' });\n  }\n  if (!customElements.get('icon-label')) {\n    customElements.define('icon-label', IconLabel);\n  }\n  if (!customElements.get('selection-menu')) {\n    customElements.define('selection-menu', SelectionMenu);\n  }\n  if (!customElements.get('image-collection')) {\n    customElements.define('image-collection', ImageCollection);\n  }\n  if (!customElements.get('product-layout')) {\n    customElements.define('product-layout', class extends HTMLElement {\n      constructor() {\n        super();\n        // Implementation will be added based on actual component logic\n      }\n    });\n  }\n\n  // Wait for all elements to be defined\n  return Promise.all([\n    customElements.whenDefined('collapsible-list'),\n    customElements.whenDefined('collapsible-item'),\n    customElements.whenDefined('icon-label'),\n    customElements.whenDefined('selection-menu'),\n    customElements.whenDefined('image-collection'),\n    customElements.whenDefined('product-layout')\n  ]);\n}\n\n// Auto-define components if in a browser environment\nif (typeof window !== 'undefined' && !window.__GENERIC_WEBCOMPONENTS_DEFINED__) {\n  window.__GENERIC_WEBCOMPONENTS_DEFINED__ = true;\n  defineCustomElements().catch(console.error);\n}\n","/// src/wrappers/react/index.jsx\nimport React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport { defineCustomElements } from '../../init.js';\n\n// Initialize web components when the module is loaded\ndefineCustomElements().catch(console.error);\n\n// Handle icon path resolution for React\nconst resolveIconPath = (icon) => {\n  if (!icon) return '';\n  // If it's a full URL or data URI, use as is\n  if (icon.startsWith('http') || icon.startsWith('data:') || icon.startsWith('blob:')) {\n    return icon;\n  }\n  // For local paths, assume they're relative to the public folder in the consuming app\n  return icon;\n};\n\n// Create React wrappers for each web component\nconst createReactWrapper = (tagName) => {\n  const Component = forwardRef(({ \n    children, \n    style, \n    className, \n    onToggle, // Special handler for collapsible-item\n    ...props \n  }, ref) => {\n    const elementRef = useRef(null);\n    \n    // Handle ref forwarding\n    useImperativeHandle(ref, () => ({\n      ...(elementRef.current || {}),\n      // Add any component-specific methods here\n    }));\n\n    // Handle custom element ref\n    const handleRef = (el) => {\n      elementRef.current = el;\n      \n      // Forward the ref\n      if (ref) {\n        if (typeof ref === 'function') {\n          ref(el);\n        } else if (ref) {\n          ref.current = el;\n        }\n      }\n      \n      // Add event listeners for collapsible-item\n      if (tagName === 'collapsible-item' && el) {\n        el.addEventListener('toggle', (e) => {\n          if (onToggle) onToggle(e);\n        });\n      }\n    };\n    \n    // Special handling for specific components\n    if (tagName === 'icon-label') {\n      return React.createElement(tagName, {\n        ref: handleRef,\n        ...props,\n        class: className,\n        style: {\n          '--icon-size': '24px', // Default size, can be overridden by style prop\n          ...(style || {})\n        },\n        'icon': props.icon ? resolveIconPath(props.icon) : undefined,\n        'label': props.label || ''\n      }, children);\n    }\n    \n    // Special handling for collapsible-item\n    if (tagName === 'collapsible-item') {\n      const { expanded, icon, label, removeshift, hideIcon, ...restProps } = props;\n      \n      return React.createElement(tagName, {\n        ref: handleRef,\n        ...restProps,\n        class: className,\n        style: style,\n        'expanded': expanded,\n        'icon': icon,\n        'label': label,\n        'removeshift': removeshift,\n        'hide-icon': hideIcon\n      }, children);\n    }\n    \n    // For other components\n    const elementProps = Object.entries(props).reduce((acc, [key, value]) => {\n      // Handle events (onEvent -> onevent)\n      if (key.startsWith('on') && key[2] === key[2].toUpperCase()) {\n        const eventName = key[2].toLowerCase() + key.slice(3);\n        return { ...acc, [eventName]: value };\n      }\n      // Handle className -> class\n      if (key === 'className') {\n        return { ...acc, class: value };\n      }\n      // Handle style object\n      if (key === 'style' && typeof value === 'object') {\n        return { ...acc, style: value };\n      }\n      // Special handling for icon prop\n      if (key === 'icon') {\n        return { ...acc, icon: resolveIconPath(value) };\n      }\n      // Pass through other props\n      return { ...acc, [key]: value };\n    }, {});\n    \n    // Handle ref and props\n    const elementPropsWithRef = {\n      ...elementProps,\n      ref: (element) => {\n        if (element) {\n          elementRef.current = element;\n          \n          // Forward the ref if it's a function\n          if (typeof ref === 'function') {\n            ref(element);\n          } else if (ref) {\n            ref.current = element;\n          }\n        }\n      }\n    };\n    \n    return React.createElement(tagName, elementPropsWithRef, children);\n  });\n  \n  // Set display name for better debugging\n  Component.displayName = tagName;\n  \n  return Component;\n};\n\n// Export all components as named exports\nconst CollapsibleList = createReactWrapper('collapsible-list');\nconst CollapsibleItem = createReactWrapper('collapsible-item');\nconst IconLabel = createReactWrapper('icon-label');\nconst SelectionMenu = createReactWrapper('selection-menu');\nconst ImageCollection = createReactWrapper('image-collection');\nconst ProductLayout = createReactWrapper('product-layout');\n\n// Export all components as named exports\nexport {\n  CollapsibleList,\n  CollapsibleItem,\n  IconLabel,\n  SelectionMenu,\n  ImageCollection,\n  ProductLayout,\n  defineCustomElements\n};\n\n// Default export with all components\nexport default {\n  CollapsibleList,\n  CollapsibleItem,\n  IconLabel,\n  SelectionMenu,\n  ImageCollection,\n  ProductLayout,\n  defineCustomElements\n};"],"names":["IconLabel","HTMLElement","observedAttributes","constructor","_icon","_label","_reverse","connectedCallback","_render","icon","value","label","reverse","container","document","createElement","style","display","alignItems","gap","fontFamily","color","flexDirection","isImage","startsWith","test","justifyContent","width","height","src","alt","loading","objectFit","textContent","fontSize","lineHeight","appendChild","innerHTML","attributeChangedCallback","name","oldValue","newValue","customElements","get","define","CollapsibleItem","HTMLLIElement","_isExpanded","_handleClick","bind","_header","_content","_initialRender","_removeShift","rendered","classList","add","hasAttribute","setAttribute","_addEventListeners","_updateContentVisibility","remove","disconnectedCallback","_removeEventListeners","addEventListener","removeEventListener","event","header","target","closest","preventDefault","stopPropagation","isExpanding","removeAttribute","dispatchEvent","CustomEvent","detail","expanded","bubbles","composed","_createHeader","className","contentWrapper","flex","hideIcon","getAttribute","iconEl","marginRight","labelEl","_isRendering","existingContent","Array","from","children","forEach","child","push","firstChild","removeChild","e","key","_toggleExpanded","_createContent","content","headerElements","querySelectorAll","headerElementSet","Set","filteredChildren","childNodes","filter","node","nodeType","Node","ELEMENT_NODE","has","TEXT_NODE","trim","includes","cloneNode","querySelector","newIconEl","firstElementChild","insertBefore","wasExpanded","elementName","window","_elements","extends","CollapsibleList","attachShadow","mode","_isUpdating","_handleItemToggle","slot","shadowRoot","append","_initialized","_initializeComponent","_updateReverseHeading","_ensureOneItemExpanded","_setupMutationObserver","console","warn","_observer","MutationObserver","mutations","shouldUpdate","mutation","type","attributeName","addedNodes","matches","observe","attributes","attributeFilter","childList","subtree","isReversed","disconnect","processItems","items","item","nestedItems","length","nestedLists","processLists","lists","list","offsetHeight","error","parentElement","_closeOtherItems","exceptItem","_getOpenItems","openItems","firstItem","SelectionMenu","_items","_selectedId","_boundOnItemClick","_onItemClick","JSON","parse","_updateSelectedState","stringify","selected","_renderItems","level","listContainer","listStyle","padding","margin","hasChildren","isSelected","id","li","hasSelectedDescendant","_hasSelectedDescendant","isExpanded","transition","contentSlot","span","outerHTML","leafNode","itemId","itemElement","arrowIcon","allCollapsibleItems","allLeafItems","leaf","selectedCollapsibleItem","selectedLeafItem","some","_findItemById","found","ImageCollection","_images","_handleToggle","_currentOpenIndex","images","isArray","render","_isHandlingToggle","index","composedPath","find","allItems","indexOf","i","source","_onItemToggle","targetItem","previousItem","toggle","map","image","title","removeshift","join","elementsDefined","defineCustomElements","__GENERIC_WEBCOMPONENTS_DEFINED__","Promise","resolve","all","whenDefined","catch","resolveIconPath","createReactWrapper","tagName","Component","forwardRef","onToggle","props","ref","elementRef","useRef","useImperativeHandle","current","handleRef","el","React","class","undefined","restProps","elementProps","Object","entries","reduce","acc","toUpperCase","eventName","toLowerCase","slice","elementPropsWithRef","element","displayName","ProductLayout"],"mappings":"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"}