{"version":3,"file":"index.umd.js","sources":["../../src/init.js","../../src/wrappers/react/index.jsx"],"sourcesContent":["// Initialize web components\nexport function defineCustomElements() {\n  return Promise.all([\n    customElements.whenDefined('collapsible-list'),\n    customElements.whenDefined('collapsible-item'),\n    customElements.whenDefined('icon-label'),\n    customElements.whenDefined('selection-menu'),\n    customElements.whenDefined('image-collection'),\n    customElements.whenDefined('product-layout')\n  ]);\n}\n\n// Auto-define components if in a browser environment\nif (typeof window !== 'undefined' && !window.__GENERIC_WEBCOMPONENTS_DEFINED__) {\n  window.__GENERIC_WEBCOMPONENTS_DEFINED__ = true;\n  defineCustomElements().catch(console.error);\n}\n","/// src/wrappers/react/index.jsx\nimport React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport { defineCustomElements } from '../../init.js';\n\n// Initialize web components when the module is loaded\ndefineCustomElements().catch(console.error);\n\n// Handle icon path resolution for React\nconst resolveIconPath = (icon) => {\n  if (!icon) return '';\n  // If it's a full URL or data URI, use as is\n  if (icon.startsWith('http') || icon.startsWith('data:') || icon.startsWith('blob:')) {\n    return icon;\n  }\n  // For local paths, assume they're relative to the public folder in the consuming app\n  return icon;\n};\n\n// Create React wrappers for each web component\nconst createReactWrapper = (tagName) => {\n  const Component = forwardRef(({ children, ...props }, ref) => {\n    const elementRef = useRef(null);\n    \n    // Handle ref forwarding\n    React.useImperativeHandle(ref, () => elementRef.current);\n    \n    // Convert React props to web component attributes/events\n    const elementProps = Object.entries(props).reduce((acc, [key, value]) => {\n      // Handle events (onEvent -> onevent)\n      if (key.startsWith('on') && key[2] === key[2].toUpperCase()) {\n        const eventName = key[2].toLowerCase() + key.slice(3);\n        return { ...acc, [eventName]: value };\n      }\n      // Handle className -> class\n      if (key === 'className') {\n        return { ...acc, class: value };\n      }\n      // Handle style object\n      if (key === 'style' && typeof value === 'object') {\n        return { ...acc, style: value };\n      }\n      // Special handling for icon prop\n      if (key === 'icon') {\n        return { ...acc, icon: resolveIconPath(value) };\n      }\n      // Pass through other props\n      return { ...acc, [key]: value };\n    }, {});\n    \n    // Handle ref and props\n    const elementPropsWithRef = {\n      ...elementProps,\n      ref: (element) => {\n        if (element) {\n          elementRef.current = element;\n          \n          // Forward the ref if it's a function\n          if (typeof ref === 'function') {\n            ref(element);\n          } else if (ref) {\n            ref.current = element;\n          }\n        }\n      }\n    };\n    \n    return React.createElement(tagName, elementPropsWithRef, children);\n  });\n  \n  // Set display name for better debugging\n  Component.displayName = tagName;\n  \n  return Component;\n};\n\n// Export all components as named exports\nconst CollapsibleList = createReactWrapper('collapsible-list');\nconst CollapsibleItem = createReactWrapper('collapsible-item');\nconst IconLabel = createReactWrapper('icon-label');\nconst SelectionMenu = createReactWrapper('selection-menu');\nconst ImageCollection = createReactWrapper('image-collection');\nconst ProductLayout = createReactWrapper('product-layout');\n\n// Export all components as named exports\nexport {\n  CollapsibleList,\n  CollapsibleItem,\n  IconLabel,\n  SelectionMenu,\n  ImageCollection,\n  ProductLayout,\n  defineCustomElements\n};\n\n// Default export with all components\nexport default {\n  CollapsibleList,\n  CollapsibleItem,\n  IconLabel,\n  SelectionMenu,\n  ImageCollection,\n  ProductLayout,\n  defineCustomElements\n};"],"names":["defineCustomElements","Promise","all","customElements","whenDefined","window","__GENERIC_WEBCOMPONENTS_DEFINED__","catch","console","error","resolveIconPath","createReactWrapper","tagName","Component","forwardRef","children","props","ref","elementRef","useRef","React","useImperativeHandle","current","elementProps","elementPropsWithRef","Object","entries","reduce","acc","key","value","startsWith","toUpperCase","eventName","toLowerCase","slice","class","style","icon","element","createElement","displayName","CollapsibleList","CollapsibleItem","IconLabel","SelectionMenu","ImageCollection","ProductLayout","index"],"mappings":"mSACO,SAASA,IACPC,OAAAA,QAAQC,IAAI,CACjBC,eAAeC,YAAY,oBAC3BD,eAAeC,YAAY,oBAC3BD,eAAeC,YAAY,cAC3BD,eAAeC,YAAY,kBAC3BD,eAAeC,YAAY,oBAC3BD,eAAeC,YAAY,mBAE/B,CAGsB,oBAAXC,QAA2BA,OAAOC,oCAC3CD,OAAOC,mCAAoC,MACpBC,MAAMC,QAAQC,YCVhBF,MAAMC,QAAQC,OAG/BC,MAWAC,EAAkCC,IAChCC,MAAAA,EAAYC,EAAAA,WAAW,EAAGC,cAAaC,GAASC,KAC9CC,MAAAA,EAAaC,SAAO,MAG1BC,EAAMC,oBAAoBJ,EAAK,IAAMC,EAAWI,SAG1CC,MAuBAC,EAAsB,IAvBPC,OAAOC,QAAQV,GAAOW,OAAO,CAACC,GAAMC,EAAKC,MAExDD,GAAAA,EAAIE,WAAW,OAASF,EAAI,KAAOA,EAAI,GAAGG,cAAe,CACrDC,MAAAA,EAAYJ,EAAI,GAAGK,cAAgBL,EAAIM,MAAM,GAC5C,MAAA,IAAKP,EAAKK,CAACA,GAAYH,EAAM,CAGtC,MAAY,cAARD,EACK,IAAKD,EAAKQ,MAAON,GAGd,UAARD,GAAoC,iBAAVC,EACrB,IAAKF,EAAKS,MAAOP,GAGd,SAARD,EACK,IAAKD,EAAKU,MAnCSA,EAmCaR,EAlCxCQ,GAEDA,EAAKP,WAAW,SAAWO,EAAKP,WAAW,UAAYO,EAAKP,WAAW,SAClEO,GAHS,KAqCP,IAAKV,EAAKC,CAACA,GAAMC,GAtCLQ,IAASA,GAuC3B,IAKDrB,IAAkBsB,IACZA,IACFrB,EAAWI,QAAUiB,EAGF,mBAARtB,EACTA,EAAIsB,GACKtB,IACTA,EAAIK,QAAUiB,MAMtB,OAAOnB,EAAMoB,cAAc5B,EAASY,EAAqBT,KAMpDF,OAFPA,EAAU4B,YAAc7B,EAEjBC,GAIH6B,EAAkB/B,EAAmB,oBACrCgC,EAAkBhC,EAAmB,oBACrCiC,EAAYjC,EAAmB,cAC/BkC,EAAgBlC,EAAmB,kBACnCmC,EAAkBnC,EAAmB,oBACrCoC,EAAgBpC,EAAmB,kBAc1BqC,EAAA,CACbN,kBACAC,kBACAC,YACAC,gBACAC,kBACAC,gBACA/C"}